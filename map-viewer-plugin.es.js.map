{"version":3,"file":"map-viewer-plugin.es.js","sources":["../node_modules/@lit/reactive-element/css-tag.js","../node_modules/@lit/reactive-element/reactive-element.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-element/lit-element.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/events/EventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/Target.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/Collection.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/has.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/TileState.js","../node_modules/ol/asserts.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/math.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/coordinate.js","../node_modules/ol/easing.js","../node_modules/ol/sphere.js","../node_modules/ol/console.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/proj/utm.js","../node_modules/ol/proj.js","../node_modules/ol/transform.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/View.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/control/defaults.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Group.js","../node_modules/ol/render/EventType.js","../node_modules/ol/layer/Layer.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/color-name/index.js","../node_modules/color-parse/index.js","../node_modules/color-space/rgb.js","../node_modules/color-space/hsl.js","../node_modules/color-rgba/index.js","../node_modules/color-space/xyz.js","../node_modules/color-space/luv.js","../node_modules/color-space/lchuv.js","../node_modules/ol/color.js","../node_modules/ol/size.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/ImageState.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/colorlike.js","../node_modules/ol/render/canvas.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/Event.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/Map.js","../node_modules/ol/Feature.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/render.js","../node_modules/ol/featureloader.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/geom/Circle.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/ol/render/Feature.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/Source.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/source/Vector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/ZIndexContext.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/Tile.js","../node_modules/ol/DataTile.js","../node_modules/ol/ImageTile.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/common.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid/WMTS.js","../node_modules/ol/tilegrid.js","../node_modules/ol/uri.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/Tile.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/WMTS.js","../node_modules/ol/xml.js","../node_modules/ol/format/xsd.js","../node_modules/ol/format/Feature.js","../node_modules/ol/format/XMLFeature.js","../node_modules/ol/format/GMLBase.js","../node_modules/ol/format/GML2.js","../node_modules/ol/format/GML3.js","../node_modules/ol/format/GML32.js","../node_modules/ol/proj/proj4.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/projections/eqearth.js","../node_modules/proj4/lib/projections/bonne.js","../node_modules/proj4/projs.js","../node_modules/proj4/lib/index.js","../node_modules/ol/Overlay.js","../node_modules/@nieuwlandgeo/sldreader/dist/sldreader.js","../src/MapViewer.js","../src/MapTemplate.js","../src/MapExample.js","../src/router/router.js","../main.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:r,getOwnPropertyNames:h,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),y={attribute:!0,type:String,converter:u,reflect:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class b extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=y){if(s.state&&(s.attribute=!1),this._$Ei(),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),r=this.getPropertyDescriptor(t,i,s);void 0!==r&&e(this.prototype,t,r)}}static getPropertyDescriptor(t,s,i){const{get:e,set:h}=r(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get(){return e?.call(this)},set(s){const r=e?.call(this);h.call(this,s),this.requestUpdate(t,r,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??y}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...h(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$EC(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const r=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==r?this.removeAttribute(e):this.setAttribute(e,r),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),r=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=r.fromAttribute(s,t.type),this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){if(i??=this.constructor.getPropertyOptions(t),!(i.hasChanged??f)(this[t],s))return;this.P(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$ET())}P(t,s,i){this._$AL.has(t)||this._$AL.set(t,s),!0===i.reflect&&this._$Em!==t&&(this._$Ej??=new Set).add(t)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t)!0!==i.wrapped||this._$AL.has(s)||void 0===this[s]||this.P(s,this[s],i)}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EU()}catch(s){throw t=!1,this._$EU(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Ej&&=this._$Ej.forEach((t=>this._$EC(t,this[t]))),this._$EU()}updated(t){}firstUpdated(t){}}b.elementStyles=[],b.shadowRootOptions={mode:\"open\"},b[d(\"elementProperties\")]=new Map,b[d(\"finalized\")]=new Map,p?.({ReactiveElement:b}),(a.reactiveElementVersions??=[]).push(\"2.0.4\");export{b as ReactiveElement,u as defaultConverter,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.2.1\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as s}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class r extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const s=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(s,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return s}}r._$litElement$=!0,r[\"finalized\"]=!0,globalThis.litElementHydrateSupport?.({LitElement:r});const i=globalThis.litElementPolyfillSupport;i?.({LitElement:r});const o={_$AK:(t,e,s)=>{t._$AK(e,s)},_$AL:t=>t._$AL};(globalThis.litElementVersions??=[]).push(\"4.1.1\");export{r as LitElement,o as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.4.0';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\n\n/** @type {Partial<import('./index.js').ColorSpace>} */\nvar rgb = {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n\nexport default /** @type {import('./index.js').ColorSpace} */ (rgb);\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\n/** @type {Partial<import('./index.js').ColorSpace>} */\nvar hsl = {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\nexport default /** @type {import('./index.js').ColorSpace} */ (hsl);\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\t//FIXME h is possibly undefined\n\t//@ts-ignore\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\n/** @typedef {{whitepoint: Object<number, Object<string, Array<number>>>}} XYZSpecific */\n\n/** @type {Partial<import('./index.js').ColorSpace> & XYZSpecific} */\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931'],\n\t/**\n\t * Whitepoint reference values with observer/illuminant\n\t *\n\t * http://en.wikipedia.org/wiki/Standard_illuminant\n\t */\n\twhitepoint: {\n\t\t//1931 2°\n\t\t2: {\n\t\t\t//incadescent\n\t\t\tA:[109.85, 100, 35.585],\n\t\t\t// B:[],\n\t\t\tC: [98.074, 100, 118.232],\n\t\t\tD50: [96.422, 100, 82.521],\n\t\t\tD55: [95.682, 100, 92.149],\n\t\t\t//daylight\n\t\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\t\tD75: [94.972, 100, 122.638],\n\t\t\t//flourescent\n\t\t\t// F1: [],\n\t\t\tF2: [99.187, 100, 67.395],\n\t\t\t// F3: [],\n\t\t\t// F4: [],\n\t\t\t// F5: [],\n\t\t\t// F6:[],\n\t\t\tF7: [95.044, 100, 108.755],\n\t\t\t// F8: [],\n\t\t\t// F9: [],\n\t\t\t// F10: [],\n\t\t\tF11: [100.966, 100, 64.370],\n\t\t\t// F12: [],\n\t\t\tE: [100,100,100]\n\t\t},\n\n\t\t//1964  10°\n\t\t10: {\n\t\t\t//incadescent\n\t\t\tA:[111.144, 100, 35.200],\n\t\t\tC: [97.285, 100, 116.145],\n\t\t\tD50: [96.720, 100, 81.427],\n\t\t\tD55: [95.799, 100, 90.926],\n\t\t\t//daylight\n\t\t\tD65: [94.811, 100, 107.304],\n\t\t\tD75: [94.416, 100, 120.641],\n\t\t\t//flourescent\n\t\t\tF2: [103.280, 100, 69.026],\n\t\t\tF7: [95.792, 100, 107.687],\n\t\t\tF11: [103.866, 100, 65.627],\n\t\t\tE: [100,100,100]\n\t\t}\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array<number>} _xyz Array of xyz values\n * @param {Array<number>} white Whitepoint reference\n * @return {Array<number>} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array<number>} rgb RGB channels\n *\n * @return {Array<number>} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default /** @type {import('./index.js').ColorSpace & XYZSpecific} */ (xyz);\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\nimport xyz from './xyz.js';\n\n/** @type {Partial<import('./index.js').ColorSpace>} */\nvar luv = {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\nexport default /** @type {import('./index.js').ColorSpace} */ (luv);\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\n/** @type {Partial<import('./index.js').ColorSpace> & {luv: import('./index.js').Transform}} */\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default /** @type {import('./index.js').ColorSpace} */ (lchuv);\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module ol/color\n */\nimport parseRgba from 'color-rgba';\nimport lchuv from 'color-space/lchuv.js';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    let allTilesIdle = true;\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.IDLE) {\n        allTilesIdle = false;\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n    if (!this.renderComplete && !allTilesIdle) {\n      frameState.animate = true;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().startsWith('ne');\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/WMTS\n */\n\nimport {containsExtent} from '../extent.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {appendParams, expandUrl} from '../uri.js';\nimport TileImage from './TileImage.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   * @override\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return encodeURIComponent(localContext[p]);\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().startsWith('ne');\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {*} value Value to be written.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, value, objectStack) {\n      nodeWriter.call(thisArg ?? this, node, value, objectStack);\n      const parent = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const parentNode = parent.node;\n      parentNode.appendChild(node);\n    }\n  );\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/xsd\n */\nimport {padNumber} from '../string.js';\nimport {getAllTextContent, getDocument} from '../xml.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options),\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @override\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this,\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName'),\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal,\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.startsWith('en')) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4],\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ',' + point[1]\n      : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1],\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    if (axisOrientation === 'neu') {\n      for (let i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'),\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    const asXYZ = axisOrientation.startsWith('en');\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (asXYZ) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    const point = value.getCoordinates();\n    // only 2d for simple features profile\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this,\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation,\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport {writeStringTextNode} from '../format/xsd.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @override\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context,\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/proj/proj4\n */\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n} from '../proj.js';\nimport Projection from './Projection.js';\nimport {get as getCachedProjection} from './projections.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!getCachedProjection(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = getCachedProjection(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = getCachedProjection(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return getCachedProjection(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return getCachedProjection(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), \"+proj=utm +zone=\" + i + \" +datum=WGS84 +units=m\");\n    defs('EPSG:' + (32700 + i), \"+proj=utm +zone=\" + i + \" +south +datum=WGS84 +units=m\");\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  'mm': {to_meter: 0.001},\n  'cm': {to_meter: 0.01},\n  'ft': {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937},\n  'fath': {to_meter: 1.8288},\n  'kmi': {to_meter: 1852},\n  'us-ch': {to_meter: 20.1168402336805},\n  'us-mi': {to_meter: 1609.34721869444},\n  'km': {to_meter: 1000},\n  'ind-ft': {to_meter: 0.30479841},\n  'ind-yd': {to_meter: 0.91439523},\n  'mi': {to_meter: 1609.344},\n  'yd': {to_meter: 0.9144},\n  'ch': {to_meter: 20.1168},\n  'link': {to_meter: 0.201168},\n  'dm': {to_meter: 0.01},\n  'in': {to_meter: 0.0254},\n  'ind-ch': {to_meter: 20.11669506},\n  'us-in': {to_meter: 0.025400050800101},\n  'us-yd': {to_meter: 0.914401828803658}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: \"0,0,0\",\n    ellipse: \"WGS84\",\n    datumName: \"WGS84\"\n  },\n  ch1903: {\n    towgs84: \"674.374,15.056,405.346\",\n    ellipse: \"bessel\",\n    datumName: \"swiss\"\n  },\n  ggrs87: {\n    towgs84: \"-199.87,74.79,246.62\",\n    ellipse: \"GRS80\",\n    datumName: \"Greek_Geodetic_Reference_System_1987\"\n  },\n  nad83: {\n    towgs84: \"0,0,0\",\n    ellipse: \"GRS80\",\n    datumName: \"North_American_Datum_1983\"\n  },\n  nad27: {\n    nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n    ellipse: \"clrk66\",\n    datumName: \"North_American_Datum_1927\"\n  },\n  potsdam: {\n    towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n    ellipse: \"bessel\",\n    datumName: \"Potsdam Rauenberg 1950 DHDN\"\n  },\n  carthage: {\n    towgs84: \"-263.0,6.0,431.0\",\n    ellipse: \"clark80\",\n    datumName: \"Carthage 1934 Tunisia\"\n  },\n  hermannskogel: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Hermannskogel\"\n  },\n  mgi: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Militar-Geographische Institut\",\n  },\n  osni52: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"airy\",\n    datumName: \"Irish National\"\n  },\n  ire65: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"mod_airy\",\n    datumName: \"Ireland 1965\"\n  },\n  rassadiran: {\n    towgs84: \"-133.63,-157.5,-158.62\",\n    ellipse: \"intl\",\n    datumName: \"Rassadiran\"\n  },\n  nzgd49: {\n    towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n    ellipse: \"intl\",\n    datumName: \"New Zealand Geodetic Datum 1949\"\n  },\n  osgb36: {\n    towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n    ellipse: \"airy\",\n    datumName: \"Ordnance Survey of Great Britain 1936\"\n  },\n  s_jtsk: {\n    towgs84: \"589,76,480\",\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n    ellipse: \"intl\",\n    datumName: \"Reseau National Belge 1972\"\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject from './Object.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ol/style'), require('ol/render'), require('ol/geom'), require('ol/extent'), require('ol/has')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'ol/style', 'ol/render', 'ol/geom', 'ol/extent', 'ol/has'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.SLDReader = {}, global.ol.style, global.ol.render, global.ol.geom, global.ol.extent, global.ol.has));\n})(this, (function (exports, style, render, geom, extent, has) { 'use strict';\n\n  /**\r\n   * Factory methods for filterelements\r\n   * @see http://schemas.opengis.net/filter/1.0.0/filter.xsd\r\n   *\r\n   * @module\r\n   */\r\n\r\n  var TYPE_COMPARISON = 'comparison';\r\n\r\n  /**\r\n   * @var string[] element names of binary comparison\r\n   * @private\r\n   */\r\n  var BINARY_COMPARISON_NAMES = [\r\n    'PropertyIsEqualTo',\r\n    'PropertyIsNotEqualTo',\r\n    'PropertyIsLessThan',\r\n    'PropertyIsLessThanOrEqualTo',\r\n    'PropertyIsGreaterThan',\r\n    'PropertyIsGreaterThanOrEqualTo' ];\r\n\r\n  var COMPARISON_NAMES = BINARY_COMPARISON_NAMES.concat([\r\n    'PropertyIsLike',\r\n    'PropertyIsNull',\r\n    'PropertyIsBetween' ]);\r\n\r\n  function isComparison(element) {\r\n    return COMPARISON_NAMES.includes(element.localName);\r\n  }\r\n\r\n  function isBinary(element) {\r\n    return ['or', 'and'].includes(element.localName.toLowerCase());\r\n  }\r\n\r\n  /**\r\n   * factory for comparisonOps\r\n   * @private\r\n   * @param {Element} element\r\n   *\r\n   * @return {object}\r\n   */\r\n  function createComparison(element, addParameterValueProp) {\r\n    if (BINARY_COMPARISON_NAMES.includes(element.localName)) {\r\n      return createBinaryFilterComparison(element, addParameterValueProp);\r\n    }\r\n    if (element.localName === 'PropertyIsBetween') {\r\n      return createIsBetweenComparison(element, addParameterValueProp);\r\n    }\r\n    if (element.localName === 'PropertyIsNull') {\r\n      return createIsNullComparison(element, addParameterValueProp);\r\n    }\r\n    if (element.localName === 'PropertyIsLike') {\r\n      return createIsLikeComparison(element, addParameterValueProp);\r\n    }\r\n    throw new Error((\"Unknown comparison element \" + (element.localName)));\r\n  }\r\n\r\n  /**\r\n   * factory for element type BinaryComparisonOpType\r\n   * @private\r\n   * @param {Element} element\r\n   *\r\n   * @return {object}\r\n   */\r\n  function createBinaryFilterComparison(element, addParameterValueProp) {\r\n    var obj = {\r\n      type: TYPE_COMPARISON,\r\n      operator: element.localName.toLowerCase(),\r\n      // Match case attribute is true by default, so only make it false if the attribute value equals 'false'.\r\n      matchcase: element.getAttribute('matchCase') !== 'false',\r\n    };\r\n\r\n    // Parse child expressions, and add them to the comparison object.\r\n    var parsed = {};\r\n    addParameterValueProp(element, parsed, 'expressions', {\r\n      concatenateLiterals: false,\r\n    });\r\n\r\n    if (parsed.expressions && parsed.expressions.children) {\r\n      obj.expression1 = parsed.expressions.children[0];\r\n      obj.expression2 = parsed.expressions.children[1];\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * factory for element type PropertyIsLikeType\r\n   * @private\r\n   * @param {Element} element\r\n   *\r\n   * @return {object}\r\n   */\r\n  function createIsLikeComparison(element, addParameterValueProp) {\r\n    // A like comparison is a binary comparison expression, with extra attributes.\r\n    var obj = createBinaryFilterComparison(element, addParameterValueProp);\r\n    return Object.assign({}, obj,\r\n      {wildcard: element.getAttribute('wildCard'),\r\n      singlechar: element.getAttribute('singleChar'),\r\n      escapechar: element.getAttribute('escapeChar')});\r\n  }\r\n\r\n  /**\r\n   * factory for element type PropertyIsNullType\r\n   * @private\r\n   * @param {Element} element\r\n   *\r\n   * @return {object}\r\n   */\r\n  function createIsNullComparison(element, addParameterValueProp) {\r\n    var parsed = {};\r\n    addParameterValueProp(element, parsed, 'expressions', {\r\n      concatenateLiterals: false,\r\n    });\r\n\r\n    return {\r\n      type: TYPE_COMPARISON,\r\n      operator: element.localName.toLowerCase(),\r\n      expression: parsed.expressions,\r\n    };\r\n  }\r\n  /**\r\n   * factory for element type PropertyIsBetweenType\r\n   * @private\r\n   * @param {Element} element\r\n   *\r\n   * @return {object}\r\n   */\r\n  function createIsBetweenComparison(element, addParameterValueProp) {\r\n    var obj = {\r\n      type: TYPE_COMPARISON,\r\n      operator: element.localName.toLowerCase(),\r\n      // Match case attribute is true by default, so only make it false if the attribute value equals 'false'.\r\n      matchcase: element.getAttribute('matchCase') !== 'false',\r\n    };\r\n\r\n    // Parse child expressions, and add them to the comparison object.\r\n    var parsed = {};\r\n    addParameterValueProp(element, parsed, 'expressions', {\r\n      concatenateLiterals: false,\r\n    });\r\n\r\n    if (parsed.expressions && parsed.expressions.children) {\r\n      // According to spec, the child elements should be expression, lower boundary, upper boundary.\r\n      obj.expression = parsed.expressions.children[0];\r\n      obj.lowerboundary = parsed.expressions.children[1];\r\n      obj.upperboundary = parsed.expressions.children[2];\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Factory for and/or filter\r\n   * @private\r\n   * @param {Element} element\r\n   *\r\n   * @return {object}\r\n   */\r\n  function createBinaryLogic(element, addParameterValueProp) {\r\n    var predicates = [];\r\n    for (var n = element.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (n && isComparison(n)) {\r\n        predicates.push(createComparison(n, addParameterValueProp));\r\n      }\r\n      if (n && isBinary(n)) {\r\n        predicates.push(createBinaryLogic(n, addParameterValueProp));\r\n      }\r\n      if (n && n.localName.toLowerCase() === 'not') {\r\n        predicates.push(createUnaryLogic(n, addParameterValueProp));\r\n      }\r\n    }\r\n    return {\r\n      type: element.localName.toLowerCase(),\r\n      predicates: predicates,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Factory for not filter\r\n   * @private\r\n   * @param {Element} element\r\n   *\r\n   * @return {object}\r\n   */\r\n  function createUnaryLogic(element, addParameterValueProp) {\r\n    var predicate = null;\r\n    var childElement = element.firstElementChild;\r\n    if (childElement && isComparison(childElement)) {\r\n      predicate = createComparison(childElement, addParameterValueProp);\r\n    }\r\n    if (childElement && isBinary(childElement)) {\r\n      predicate = createBinaryLogic(childElement, addParameterValueProp);\r\n    }\r\n    if (childElement && childElement.localName.toLowerCase() === 'not') {\r\n      predicate = createUnaryLogic(childElement, addParameterValueProp);\r\n    }\r\n    return {\r\n      type: element.localName.toLowerCase(),\r\n      predicate: predicate,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Factory root filter element\r\n   * @param {Element} element\r\n   *\r\n   * @return {Filter}\r\n   */\r\n  function createFilter(element, addParameterValueProp) {\r\n    var filter = {};\r\n    for (var n = element.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (isComparison(n)) {\r\n        filter = createComparison(n, addParameterValueProp);\r\n      }\r\n      if (isBinary(n)) {\r\n        filter = createBinaryLogic(n, addParameterValueProp);\r\n      }\r\n      if (n.localName.toLowerCase() === 'not') {\r\n        filter = createUnaryLogic(n, addParameterValueProp);\r\n      }\r\n      if (n.localName.toLowerCase() === 'featureid') {\r\n        filter.type = 'featureid';\r\n        filter.fids = filter.fids || [];\r\n        filter.fids.push(n.getAttribute('fid'));\r\n      }\r\n    }\r\n    return filter;\r\n  }\r\n\r\n  /**\r\n   * Generic expression used in SLDReader objects.\r\n   * @typedef Expression\r\n   * @name Expression\r\n   * @description Modeled after [SvgParameterType](https://schemas.opengis.net/se/1.1.0/Symbolizer.xsd).\r\n   * Can be either a primitive value (string,integer,boolean), or an object with these properties:\r\n   * @property {string} type One of 'literal', 'propertyname', or 'function'.\r\n   * @property {string} [typeHint] Optional type hint, used when evaluating the expression. Defaults to 'string'. Can be 'number'.\r\n   * @property {any} [value] The primitive type representing the value of a literal expresion,\r\n   * or a string representing the name of a propertyname expression .\r\n   * @property {string} [name] Required for function expressions. Contains the function name.\r\n   * @property {any} [fallbackValue] Optional fallback value when function evaluation returns null.\r\n   * @property {Array<Expression>} [params] Required array of function parameters for function expressions.\r\n   */\r\n\r\n  /**\r\n   * A filter predicate.\r\n   * @typedef Filter\r\n   * @name Filter\r\n   * @description [filter operators](https://schemas.opengis.net/filter/2.0/filter.xsd), see also\r\n   * [geoserver](http://docs.geoserver.org/stable/en/user/styling/sld/reference/filters.html)\r\n   * @property {string} type Can be 'comparison', 'and', 'or', 'not', or 'featureid'.\r\n   * @property {Array<string>} [fids] An array of feature id's. Required for type='featureid'.\r\n   * @property {string} [operator] Required for type='comparison'. Can be one of\r\n   * 'propertyisequalto',\r\n   * 'propertyisnotequalto',\r\n   * 'propertyislessthan',\r\n   * 'propertyislessthanorequalto',\r\n   * 'propertyisgreaterthan',\r\n   * 'propertyisgreaterthanorequalto',\r\n   * 'propertyislike',\r\n   * 'propertyisbetween'\r\n   * 'propertyisnull'\r\n   * @property {Filter[]} [predicates] Required for type='and' or type='or'.\r\n   * An array of filter predicates that must all evaluate to true for 'and', or\r\n   * for which at least one must evaluate to true for 'or'.\r\n   * @property {Filter} [predicate] Required for type='not'. A single predicate to negate.\r\n   * @property {Expression} [expression1] First expression required for boolean comparison filters.\r\n   * @property {Expression} [expression2] Second expression required for boolean comparison filters.\r\n   * @property {Expression} [expression] Expression required for unary comparison filters.\r\n   * @property {Expression} [lowerboundary] Lower boundary expression, required for operator='propertyisbetween'.\r\n   * @property {Expression} [upperboundary] Upper boundary expression, required for operator='propertyisbetween'.\r\n   * @property {string} [wildcard] Required wildcard character for operator='propertyislike'.\r\n   * @property {string} [singlechar] Required single char match character,\r\n   * required for operator='propertyislike'.\r\n   * @property {string} [escapechar] Required escape character for operator='propertyislike'.\r\n   */\n\n  /**\r\n   * @module\r\n   */\r\n\r\n  var numericSvgProps = new Set([\r\n    'strokeWidth',\r\n    'strokeOpacity',\r\n    'strokeDashoffset',\r\n    'fillOpacity',\r\n    'fontSize' ]);\r\n\r\n  /**\r\n   * Generic parser for elements with maxOccurs > 1\r\n   * it pushes result of readNode(node) to array on obj[prop]\r\n   * @private\r\n   * @param {Element} node the xml element to parse\r\n   * @param {object} obj  the object to modify\r\n   * @param {string} prop key on obj to hold array\r\n   */\r\n  function addPropArray(node, obj, prop) {\r\n    var property = prop.toLowerCase();\r\n    obj[property] = obj[property] || [];\r\n    var item = {};\r\n    readNode(node, item);\r\n    obj[property].push(item);\r\n  }\r\n\r\n  /**\r\n   * Generic parser for maxOccurs = 1 (the xsd default)\r\n   * it sets result of readNode(node) to array on obj[prop]\r\n   * @private\r\n   * @param {Element} node the xml element to parse\r\n   * @param {object} obj  the object to modify\r\n   * @param {string} prop key on obj to hold empty object\r\n   */\r\n  function addProp(node, obj, prop) {\r\n    var property = prop.toLowerCase();\r\n    obj[property] = {};\r\n    readNode(node, obj[property]);\r\n  }\r\n\r\n  /**\r\n   * Assigns textcontent to obj.prop\r\n   * @private\r\n   * @param {Element} node [description]\r\n   * @param {object} obj  [description]\r\n   * @param {string} prop [description]\r\n   * @param {bool} [trimText] Trim whitespace from text content (default false).\r\n   */\r\n  function addPropWithTextContent(node, obj, prop, trimText) {\n    if ( trimText === void 0 ) trimText = false;\n\r\n    var property = prop.toLowerCase();\r\n    if (trimText) {\r\n      obj[property] = node.textContent.trim();\r\n    } else {\r\n      obj[property] = node.textContent;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assigns numeric value of text content to obj.prop.\r\n   * Assigns NaN if the text value is not a valid text representation of a floating point number.\r\n   * @private\r\n   * @param {Element} node The XML node element.\r\n   * @param {object} obj  The object to add the element value to.\r\n   * @param {string} prop The property name.\r\n   */\r\n  function addNumericProp(node, obj, prop) {\r\n    var property = prop.toLowerCase();\r\n    var value = parseFloat(node.textContent.trim());\r\n    obj[property] = value;\r\n  }\r\n\r\n  /**\r\n   * Simplifies array of ogc:Expressions. If all expressions are literals, they will be concatenated into a string.\r\n   * If the array contains only one expression, it will be returned.\r\n   * If it's not an array, return unmodified.\r\n   * @private\r\n   * @param {Array<OGCExpression>} expressions An array of ogc:Expression objects.\r\n   * @param {string} typeHint Expression type. Choose 'string' or 'number'.\r\n   * @param {boolean} concatenateLiterals When true, and when all expressions are literals,\r\n   * concatenate all literal expressions into a single string.\r\n   * @return {Array<OGCExpression>|OGCExpression|string} Simplified version of the expression array.\r\n   */\r\n  function simplifyChildExpressions(expressions, typeHint, concatenateLiterals) {\r\n    if (!Array.isArray(expressions)) {\r\n      return expressions;\r\n    }\r\n\r\n    // Replace each literal expression with its value.\r\n    var simplifiedExpressions = expressions\r\n      .map(function (expression) {\r\n        if (expression.type === 'literal') {\r\n          return expression.value;\r\n        }\r\n        return expression;\r\n      })\r\n      .filter(function (expression) { return expression !== ''; });\r\n\r\n    // If expression children are all literals, concatenate them into a string.\r\n    if (concatenateLiterals) {\r\n      var allLiteral = simplifiedExpressions.every(\r\n        function (expr) { return typeof expr !== 'object' || expr === null; }\r\n      );\r\n      if (allLiteral) {\r\n        return simplifiedExpressions.join('');\r\n      }\r\n    }\r\n\r\n    // If expression only has one child, return child instead.\r\n    if (simplifiedExpressions.length === 1) {\r\n      return simplifiedExpressions[0];\r\n    }\r\n\r\n    return {\r\n      type: 'expression',\r\n      typeHint: typeHint,\r\n      children: simplifiedExpressions,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * This function parses SLD XML nodes that can contain an SLD filter expression.\r\n   * If the SLD node contains only text elements, the result will be concatenated into a string.\r\n   * If the SLD node contains one or more non-literal nodes (for now, only PropertyName), the result\r\n   * will be an object with type:\"expression\" and an array of child nodes of which one or more have\r\n   * the type \"propertyname\".\r\n   *\r\n   * Functions and arithmetic operators (Add,Sub,Mul,Div) are not supported (yet).\r\n   * Note: for now, only these contents will be parsed:\r\n   * * Plain text nodes.\r\n   * * CDATA sections.\r\n   * * ogc:PropertyName elements (property name will be parsed as trimmed text).\r\n   * * ogc:Literal elements (contents will be parsed as trimmed text).\r\n   * See also:\r\n   * * http://schemas.opengis.net/filter/1.1.0/expr.xsd\r\n   * * https://docs.geoserver.org/stable/en/user/styling/sld/reference/filters.html#sld-filter-expression\r\n   * @private\r\n   * @param {Element} node XML Node.\r\n   * @param {object} obj Object to add XML node contents to.\r\n   * @param {string} prop Property name on obj that will hold the parsed node contents.\r\n   * @param {object} [options] Parse options.\r\n   * @param {object} [options.skipEmptyNodes] Default true. If true, emtpy (whitespace-only) text nodes will me omitted in the result.\r\n   * @param {object} [options.forceLowerCase] Default true. If true, convert prop name to lower case before adding it to obj.\r\n   * @param {object} [options.typeHint] Default 'string'. When set to 'number', a simple literal value will be converted to a number.\r\n   * @param {object} [options.concatenateLiterals] Default true. When true, and when all expressions are literals,\r\n   * concatenate all literal expressions into a single string.\r\n   */\r\n  function addParameterValueProp(node, obj, prop, options) {\n    if ( options === void 0 ) options = {};\n\r\n    var defaultParseOptions = {\r\n      skipEmptyNodes: true,\r\n      forceLowerCase: true,\r\n      typeHint: 'string',\r\n      concatenateLiterals: true,\r\n    };\r\n\r\n    var parseOptions = Object.assign({}, defaultParseOptions,\r\n      options);\r\n\r\n    var childExpressions = [];\r\n\r\n    for (var k = 0; k < node.childNodes.length; k += 1) {\r\n      var childNode = node.childNodes[k];\r\n      var childExpression = {};\r\n      if (\r\n        childNode.namespaceURI === 'http://www.opengis.net/ogc' &&\r\n        childNode.localName === 'PropertyName'\r\n      ) {\r\n        // Add ogc:PropertyName elements as type:propertyname.\r\n        childExpression.type = 'propertyname';\r\n        childExpression.typeHint = parseOptions.typeHint;\r\n        childExpression.value = childNode.textContent.trim();\r\n      } else if (\r\n        childNode.namespaceURI === 'http://www.opengis.net/ogc' &&\r\n        childNode.localName === 'Function'\r\n      ) {\r\n        var functionName = childNode.getAttribute('name');\r\n        var fallbackValue = childNode.getAttribute('fallbackValue') || null;\r\n        childExpression.type = 'function';\r\n        childExpression.name = functionName;\r\n        childExpression.fallbackValue = fallbackValue;\r\n\r\n        // Parse function parameters.\r\n        // Parse child expressions, and add them to the comparison object.\r\n        var parsed = {};\r\n        addParameterValueProp(childNode, parsed, 'params', {\r\n          concatenateLiterals: false,\r\n        });\r\n        if (Array.isArray(parsed.params.children)) {\r\n          // Case 0 or more than 1 children.\r\n          childExpression.params = parsed.params.children;\r\n        } else {\r\n          // Special case of 1 parameter.\r\n          // An array containing one expression is simplified into the expression itself.\r\n          childExpression.params = [parsed.params];\r\n        }\r\n      } else if (\r\n        childNode.localName === 'Add' ||\r\n        childNode.localName === 'Sub' ||\r\n        childNode.localName === 'Mul' ||\r\n        childNode.localName === 'Div'\r\n      ) {\r\n        // Convert mathematical operators to builtin function expressions.\r\n        childExpression.type = 'function';\r\n        childExpression.name = \"__fe:\" + (childNode.localName) + \"__\";\r\n        childExpression.typeHint = 'number';\r\n        // Parse function parameters.\r\n        // Parse child expressions, and add them to the comparison object.\r\n        var parsed$1 = {};\r\n        addParameterValueProp(childNode, parsed$1, 'params', {\r\n          concatenateLiterals: false,\r\n        });\r\n        if (Array.isArray(parsed$1.params.children)) {\r\n          // Case 0 or more than 1 children.\r\n          childExpression.params = parsed$1.params.children;\r\n        } else {\r\n          // Special case of 1 parameter.\r\n          // An array containing one expression is simplified into the expression itself.\r\n          childExpression.params = [parsed$1.params];\r\n        }\r\n      } else if (childNode.nodeName === '#cdata-section') {\r\n        // Add CDATA section text content untrimmed.\r\n        childExpression.type = 'literal';\r\n        childExpression.typeHint = parseOptions.typeHint;\r\n        childExpression.value = childNode.textContent;\r\n      } else if (childNode.nodeType !== Node.COMMENT_NODE) {\r\n        // Add ogc:Literal elements and plain non-comment text nodes as type:literal.\r\n        childExpression.type = 'literal';\r\n        childExpression.typeHint = parseOptions.typeHint;\r\n        childExpression.value = childNode.textContent.trim();\r\n      }\r\n\r\n      if (childExpression.type === 'literal' && parseOptions.skipEmptyNodes) {\r\n        if (childExpression.value.trim()) {\r\n          childExpressions.push(childExpression);\r\n        }\r\n      } else {\r\n        childExpressions.push(childExpression);\r\n      }\r\n    }\r\n\r\n    var propertyName = parseOptions.forceLowerCase ? prop.toLowerCase() : prop;\r\n\r\n    // Simplify child expressions.\r\n    // For example: if they are all literals --> concatenate into string.\r\n    var simplifiedValue = simplifyChildExpressions(\r\n      childExpressions,\r\n      parseOptions.typeHint,\r\n      parseOptions.concatenateLiterals\r\n    );\r\n\r\n    // Convert simple string value to number if type hint is number.\r\n    if (\r\n      typeof simplifiedValue === 'string' &&\r\n      parseOptions.typeHint === 'number'\r\n    ) {\r\n      simplifiedValue = parseFloat(simplifiedValue);\r\n    }\r\n\r\n    obj[propertyName] = simplifiedValue;\r\n  }\r\n\r\n  function addNumericParameterValueProp(node, obj, prop, options) {\n    if ( options === void 0 ) options = {};\n\r\n    addParameterValueProp(node, obj, prop, Object.assign({}, options, {typeHint: 'number'}));\r\n  }\r\n\r\n  /**\r\n   * recieves boolean of element with tagName\r\n   * @private\r\n   * @param  {Element} element [description]\r\n   * @param  {string} tagName [description]\r\n   * @return {boolean}\r\n   */\r\n  function getBool(element, tagName) {\r\n    var collection = element.getElementsByTagNameNS(\r\n      'http://www.opengis.net/sld',\r\n      tagName\r\n    );\r\n    if (collection.length) {\r\n      return Boolean(collection.item(0).textContent);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * css and svg params\r\n   * @private\r\n   * @param  {Element} element\r\n   * @param  {object} obj\r\n   * @param  {string} prop\r\n   * @param  {string} parameterGroup Name of parameter group.\r\n   */\r\n  function addParameterValue(element, obj, prop, parameterGroup) {\r\n    obj[parameterGroup] = obj[parameterGroup] || {};\r\n    var name = element\r\n      .getAttribute('name')\r\n      .toLowerCase()\r\n      .replace(/-(.)/g, function (match, group1) { return group1.toUpperCase(); });\r\n\r\n    // Flag certain SVG parameters as numeric.\r\n    var typeHint = 'string';\r\n    if (parameterGroup === 'styling') {\r\n      if (numericSvgProps.has(name)) {\r\n        typeHint = 'number';\r\n      }\r\n    }\r\n\r\n    addParameterValueProp(element, obj[parameterGroup], name, {\r\n      skipEmptyNodes: true,\r\n      forceLowerCase: false,\r\n      typeHint: typeHint,\r\n    });\r\n  }\r\n\r\n  var FilterParsers = {\r\n    Filter: function (element, obj) {\r\n      obj.filter = createFilter(element, addParameterValueProp);\r\n    },\r\n    ElseFilter: function (element, obj) {\r\n      obj.elsefilter = true;\r\n    },\r\n  };\r\n\r\n  var SymbParsers = {\r\n    PolygonSymbolizer: addPropArray,\r\n    LineSymbolizer: addPropArray,\r\n    PointSymbolizer: addPropArray,\r\n    TextSymbolizer: addPropArray,\r\n    Fill: addProp,\r\n    Stroke: addProp,\r\n    GraphicStroke: addProp,\r\n    GraphicFill: addProp,\r\n    Graphic: addProp,\r\n    ExternalGraphic: addProp,\r\n    Gap: addNumericParameterValueProp,\r\n    InitialGap: addNumericParameterValueProp,\r\n    Mark: addProp,\r\n    Label: function (node, obj, prop) { return addParameterValueProp(node, obj, prop, { skipEmptyNodes: false }); },\r\n    Halo: addProp,\r\n    Font: addProp,\r\n    Radius: addNumericParameterValueProp,\r\n    LabelPlacement: addProp,\r\n    PointPlacement: addProp,\r\n    LinePlacement: addProp,\r\n    PerpendicularOffset: addNumericParameterValueProp,\r\n    AnchorPoint: addProp,\r\n    AnchorPointX: addNumericParameterValueProp,\r\n    AnchorPointY: addNumericParameterValueProp,\r\n    Opacity: addNumericParameterValueProp,\r\n    Rotation: addNumericParameterValueProp,\r\n    Displacement: addProp,\r\n    DisplacementX: addNumericParameterValueProp,\r\n    DisplacementY: addNumericParameterValueProp,\r\n    Size: addNumericParameterValueProp,\r\n    WellKnownName: addPropWithTextContent,\r\n    MarkIndex: addNumericProp,\r\n    VendorOption: function (element, obj, prop) { return addParameterValue(element, obj, prop, 'vendoroptions'); },\r\n    OnlineResource: function (element, obj) {\r\n      obj.onlineresource = element.getAttribute('xlink:href');\r\n    },\r\n    CssParameter: function (element, obj, prop) { return addParameterValue(element, obj, prop, 'styling'); },\r\n    SvgParameter: function (element, obj, prop) { return addParameterValue(element, obj, prop, 'styling'); },\r\n  };\r\n\r\n  /**\r\n   * Each propname is a tag in the sld that should be converted to plain object\r\n   * @private\r\n   * @type {Object}\r\n   */\r\n  var parsers = Object.assign({}, {NamedLayer: function (element, obj) {\r\n      addPropArray(element, obj, 'layers');\r\n    },\r\n    UserLayer: function (element, obj) {\r\n      addPropArray(element, obj, 'layers');\r\n    },\r\n    UserStyle: function (element, obj) {\r\n      obj.styles = obj.styles || [];\r\n      var style = {\r\n        default: getBool(element, 'IsDefault'),\r\n        featuretypestyles: [],\r\n      };\r\n      readNode(element, style);\r\n      obj.styles.push(style);\r\n    },\r\n    FeatureTypeStyle: function (element, obj) {\r\n      obj.featuretypestyle = obj.featuretypestyle || [];\r\n      var featuretypestyle = {\r\n        rules: [],\r\n      };\r\n      readNode(element, featuretypestyle);\r\n      obj.featuretypestyles.push(featuretypestyle);\r\n    },\r\n    Rule: function (element, obj) {\r\n      var rule = {};\r\n      readNode(element, rule);\r\n      obj.rules.push(rule);\r\n    },\r\n    Name: addPropWithTextContent,\r\n    Title: addPropWithTextContent,\r\n    Abstract: addPropWithTextContent,\r\n    Description: readNode,\r\n    MaxScaleDenominator: addNumericProp,\r\n    MinScaleDenominator: addNumericProp},\r\n    FilterParsers,\r\n    SymbParsers);\r\n\r\n  /**\r\n   * walks over xml nodes\r\n   * @private\r\n   * @param  {Element} node derived from xml\r\n   * @param  {object} obj recieves results\r\n   * @return {void}\r\n   */\r\n  function readNode(node, obj) {\r\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (parsers[n.localName]) {\r\n        parsers[n.localName](n, obj, n.localName);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a object from an sld xml string,\r\n   * @param  {string} sld xml string\r\n   * @return {StyledLayerDescriptor}  object representing sld style\r\n   */\r\n  function Reader(sld) {\r\n    var result = {};\r\n    var parser = new DOMParser();\r\n    var doc = parser.parseFromString(sld, 'application/xml');\r\n\r\n    var rootNode = doc.documentElement;\r\n    result.version = rootNode.getAttribute('version');\r\n    readNode(rootNode, result);\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @typedef StyledLayerDescriptor\r\n   * @name StyledLayerDescriptor\r\n   * @description a typedef for StyledLayerDescriptor {@link http://schemas.opengis.net/sld/1.1/StyledLayerDescriptor.xsd xsd}\r\n   * @property {string} version sld version\r\n   * @property {Layer[]} layers info extracted from NamedLayer element\r\n   */\r\n\r\n  /**\r\n   * @typedef Layer\r\n   * @name Layer\r\n   * @description a typedef for Layer, the actual style object for a single layer\r\n   * @property {string} name layer name\r\n   * @property {Object[]} styles See explanation at [Geoserver docs](http://docs.geoserver.org/stable/en/user/styling/sld/reference/styles.html)\r\n   * @property {Boolean} styles[].default\r\n   * @property {String} [styles[].name]\r\n   * @property {FeatureTypeStyle[]} styles[].featuretypestyles Geoserver will draw multiple,\r\n   * libraries as openlayers can only use one definition!\r\n   */\r\n\r\n  /**\r\n   * @typedef FeatureTypeStyle\r\n   * @name FeatureTypeStyle\r\n   * @description a typedef for FeatureTypeStyle: {@link http://schemas.opengis.net/se/1.1.0/FeatureStyle.xsd xsd}\r\n   * @property {Rule[]} rules\r\n   */\r\n\r\n  /**\r\n   * @typedef Rule\r\n   * @name Rule\r\n   * @description a typedef for Rule to match a feature: {@link http://schemas.opengis.net/se/1.1.0/FeatureStyle.xsd xsd}\r\n   * @property {string} name rule name\r\n   * @property {Filter} [filter] Optional filter expression for the rule.\r\n   * @property {boolean} [elsefilter] Set this to true when rule has no filter expression\r\n   * to catch everything not passing any other filter.\r\n   * @property {integer} [minscaledenominator]\r\n   * @property {integer} [maxscaledenominator]\r\n   * @property {PolygonSymbolizer} [polygonsymbolizer]\r\n   * @property {LineSymbolizer}  [linesymbolizer]\r\n   * @property {PointSymbolizer} [pointsymbolizer]\r\n   * */\r\n\r\n  /**\r\n   * @typedef PolygonSymbolizer\r\n   * @name PolygonSymbolizer\r\n   * @description a typedef for [PolygonSymbolizer](http://schemas.opengis.net/se/1.1.0/Symbolizer.xsd), see also\r\n   * [geoserver docs](http://docs.geoserver.org/stable/en/user/styling/sld/reference/polygonsymbolizer.html)\r\n   * @property {Object} fill\r\n   * @property {Object<Expression>} fill.styling one object per SvgParameter with props name (camelCased)\r\n   * @property {Object} stroke\r\n   * @property {Object<Expression>} stroke.styling with camelcased name & value\r\n   * */\r\n\r\n  /**\r\n   * @typedef LineSymbolizer\r\n   * @name LineSymbolizer\r\n   * @description a typedef for [LineSymbolizer](http://schemas.opengis.net/se/1.1.0/Symbolizer.xsd), see also\r\n   * [geoserver docs](http://docs.geoserver.org/stable/en/user/styling/sld/reference/linesymbolizer.html#sld-reference-linesymbolizer)\r\n   * @property {Object} stroke\r\n   * @property {Object<Expression>} stroke.styling one object per SvgParameter with props name (camelCased)\r\n   * @property {Object} graphicstroke\r\n   * @property {Object} graphicstroke.graphic\r\n   * @property {Object} graphicstroke.graphic.mark\r\n   * @property {string} graphicstroke.graphic.mark.wellknownname\r\n   * @property {Object} graphicstroke.graphic.mark.fill\r\n   * @property {Object} graphicstroke.graphic.mark.stroke\r\n   * @property {Number} graphicstroke.graphic.opacity\r\n   * @property {Number} graphicstroke.graphic.size\r\n   * @property {Number} graphicstroke.graphic.rotation\r\n   * */\r\n\r\n  /**\r\n   * @typedef PointSymbolizer\r\n   * @name PointSymbolizer\r\n   * @description a typedef for PointSymbolizer [xsd](http://schemas.opengis.net/se/1.1.0/Symbolizer.xsd)\r\n   * & [geoserver docs](http://docs.geoserver.org/latest/en/user/styling/sld/reference/pointsymbolizer.html)\r\n   * @property {Object} graphic\r\n   * @property {Object} graphic.externalgraphic\r\n   * @property {string} graphic.externalgraphic.onlineresource\r\n   * @property {Object} graphic.mark\r\n   * @property {string} graphic.mark.wellknownname\r\n   * @property {Object} graphic.mark.fill\r\n   * @property {Object} graphic.mark.stroke\r\n   * @property {Number} graphic.opacity\r\n   * @property {Expression} graphic.size\r\n   * @property {Expression} graphic.rotation\r\n   * */\n\n  // This module contains a global registry of function implementations,\r\n  // and functions to register new function implementations.\r\n\r\n  var FunctionCache = new Map();\r\n\r\n  /**\r\n   * Register a function implementation by name. When evaluating the function, it will be called\r\n   * with the values of the parameter elements evaluated for a single feature.\r\n   * If the function returns null, the fallback value given in the SLD function element will be used instead.\r\n   *\r\n   * Note: take care of these possible gotcha's in the function implementation.\r\n   * * The function will be called with the number of parameters given in the SLD function element.\r\n   *   This number can be different from the expected number of arguments.\r\n   * * Try to avoid throwing errors from the function implementation and return null if possible.\r\n   * * Literal values will always be provided as strings. Convert numeric parameters to numbers yourself.\r\n   * * Geometry valued parameters will be provided as OpenLayers geometry instances. Do not mutate these!\r\n   * @param {string} functionName Function name.\r\n   * @param {Function} implementation The function implementation.\r\n   */\r\n  function registerFunction(functionName, implementation) {\r\n    if (typeof implementation !== 'function') {\r\n      throw new Error('Function implementation is not a function');\r\n    }\r\n    FunctionCache[functionName] = implementation;\r\n  }\r\n\r\n  /**\r\n   * Get a function implementation by name.\r\n   * @param {string} functionName Function name.\r\n   * @returns {Function} The function implementation, or null if no function with the given\r\n   * name has been registered yet.\r\n   */\r\n  function getFunction(functionName) {\r\n    return FunctionCache[functionName] || null;\r\n  }\n\n  // This module contains an evaluate function that takes an SLD expression and a feature and outputs the value for that feature.\r\n  // Constant expressions are returned as-is.\r\n\r\n\r\n  /**\r\n   * Check if an expression depends on feature properties.\r\n   * @private\r\n   * @param {Expression} expression SLDReader expression object.\r\n   * @returns {bool} Returns true if the expression depends on feature properties.\r\n   */\r\n  function isDynamicExpression(expression) {\r\n    switch ((expression || {}).type) {\r\n      case 'expression':\r\n        // Expressions with all literal child values are already concatenated into a static string,\r\n        // so any expression that survives that process has at least one non-literal child\r\n        // and therefore possibly dynamic component.\r\n        return true;\r\n      case 'literal':\r\n        return false;\r\n      case 'propertyname':\r\n        return true;\r\n      case 'function':\r\n        // Note: assuming function expressions are dynamic is correct in most practical cases.\r\n        // A more accurate implementation would be that a function expression is static if:\r\n        // * The function is idempotent. You cannot tell from the implementation, unless the implementor marks it as such.\r\n        // * All function parameter expressions are static.\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * This function takes an SLD expression and an OL feature and outputs the expression value for that feature.\r\n   * Constant expressions are returned as-is.\r\n   * @param {Expression} expression SLD object expression.\r\n   * @param {ol/feature} feature OpenLayers feature instance.\r\n   * @param {function} getProperty A function to get a specific property value from a feature.\r\n   * @param {any} defaultValue Optional default value to use when feature is null.\r\n   * Signature (feature, propertyName) => property value.\r\n   */\r\n  function evaluate(\r\n    expression,\r\n    feature,\r\n    getProperty,\r\n    defaultValue\r\n  ) {\n    if ( defaultValue === void 0 ) defaultValue = null;\n\r\n    // Determine the value of the expression.\r\n    var value = null;\r\n\r\n    var jsType = typeof expression;\r\n    if (\r\n      jsType === 'string' ||\r\n      jsType === 'number' ||\r\n      jsType === 'undefined' ||\r\n      jsType === 'boolean' ||\r\n      expression === null\r\n    ) {\r\n      // Expression value equals the expression itself if it's a native javascript type.\r\n      value = expression;\r\n    } else if (expression.type === 'literal') {\r\n      // Take expression value directly from literal type expression.\r\n      value = expression.value;\r\n    } else if (expression.type === 'propertyname') {\r\n      // Expression value is taken from input feature.\r\n      // If feature is null/undefined, use default value instead.\r\n      var propertyName = expression.value;\r\n      if (feature) {\r\n        // If the property name equals the geometry field name, return the feature geometry.\r\n        if (\r\n          typeof feature.getGeometryName === 'function' &&\r\n          propertyName === feature.getGeometryName()\r\n        ) {\r\n          value = feature.getGeometry();\r\n        } else {\r\n          value = getProperty(feature, propertyName);\r\n        }\r\n      } else {\r\n        value = defaultValue;\r\n      }\r\n    } else if (expression.type === 'expression') {\r\n      // Expression value is the concatenation of all child expession values.\r\n      if (expression.children.length === 1) {\r\n        value = evaluate(\r\n          expression.children[0],\r\n          feature,\r\n          getProperty,\r\n          defaultValue\r\n        );\r\n      } else {\r\n        // In case of multiple child expressions, concatenate the evaluated child results.\r\n        var childValues = [];\r\n        for (var k = 0; k < expression.children.length; k += 1) {\r\n          childValues.push(\r\n            // Do not use default values when evaluating children. Only apply default is\r\n            // the concatenated result is empty.\r\n            evaluate(expression.children[k], feature, getProperty, null)\r\n          );\r\n        }\r\n        value = childValues.join('');\r\n      }\r\n    } else if (expression.type === 'function') {\r\n      var func = getFunction(expression.name);\r\n      if (!func) {\r\n        value = expression.fallbackValue;\r\n      } else {\r\n        try {\r\n          // evaluate parameter expressions.\r\n          var paramValues = expression.params.map(function (paramExpression) { return evaluate(paramExpression, feature, getProperty); }\r\n          );\r\n          value = func.apply(void 0, paramValues);\r\n        } catch (e) {\r\n          value = expression.fallbackValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Do not substitute default value if the value is numeric zero.\r\n    if (value === 0) {\r\n      return value;\r\n    }\r\n\r\n    // Check if value is empty/null. If so, return default value.\r\n    if (\r\n      value === null ||\r\n      typeof value === 'undefined' ||\r\n      value === '' ||\r\n      Number.isNaN(value)\r\n    ) {\r\n      return defaultValue;\r\n    }\r\n\r\n    // Convert value to number if expression is flagged as numeric.\r\n    if (expression && expression.typeHint === 'number') {\r\n      value = Number(value);\r\n      if (Number.isNaN(value)) {\r\n        return defaultValue;\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\n\n  function isNullOrUndefined(value) {\r\n    /* eslint-disable-next-line eqeqeq */\r\n    return value == null;\r\n  }\r\n\r\n  function compareNumbers(a, b) {\r\n    if (a < b) {\r\n      return -1;\r\n    }\r\n    if (a === b) {\r\n      return 0;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  function toNumber(text) {\r\n    if (text === '') {\r\n      return NaN;\r\n    }\r\n    return Number(text);\r\n  }\r\n\r\n  function compare(a, b, matchcase) {\r\n    var aNumber = toNumber(a);\r\n    var bNumber = toNumber(b);\r\n    if (!(Number.isNaN(aNumber) || Number.isNaN(bNumber))) {\r\n      return compareNumbers(aNumber, bNumber);\r\n    }\r\n\r\n    // If a and/or b is non-numeric, compare both values as strings.\r\n    var aString = a.toString();\r\n    var bString = b.toString();\r\n\r\n    // Note: using locale compare with sensitivity option fails the CI test, while it works on my PC.\r\n    // So, case insensitive comparison is done in a more brute-force way by using lower case comparison.\r\n    // Original method:\r\n    // const caseSensitiveCollator = new Intl.Collator(undefined, { sensitivity: 'case' });\r\n    // caseSensitiveCollator.compare(string1, string2);\r\n    if (matchcase) {\r\n      return aString.localeCompare(bString);\r\n    }\r\n\r\n    return aString.toLowerCase().localeCompare(bString.toLowerCase());\r\n  }\r\n\r\n  function propertyIsNull(comparison, feature, getProperty) {\r\n    var value = evaluate(comparison.expression, feature, getProperty);\r\n    return isNullOrUndefined(value);\r\n  }\r\n\r\n  function propertyIsLessThan(comparison, feature, getProperty) {\r\n    var value1 = evaluate(comparison.expression1, feature, getProperty);\r\n    if (isNullOrUndefined(value1)) {\r\n      return false;\r\n    }\r\n\r\n    var value2 = evaluate(comparison.expression2, feature, getProperty);\r\n    if (isNullOrUndefined(value2)) {\r\n      return false;\r\n    }\r\n\r\n    return compare(value1, value2) < 0;\r\n  }\r\n\r\n  function propertyIsGreaterThan(comparison, feature, getProperty) {\r\n    var value1 = evaluate(comparison.expression1, feature, getProperty);\r\n    if (isNullOrUndefined(value1)) {\r\n      return false;\r\n    }\r\n\r\n    var value2 = evaluate(comparison.expression2, feature, getProperty);\r\n    if (isNullOrUndefined(value2)) {\r\n      return false;\r\n    }\r\n\r\n    return compare(value1, value2) > 0;\r\n  }\r\n\r\n  function propertyIsBetween(comparison, feature, getProperty) {\r\n    var value = evaluate(comparison.expression, feature, getProperty);\r\n    if (isNullOrUndefined(value)) {\r\n      return false;\r\n    }\r\n\r\n    var lowerBoundary = evaluate(\r\n      comparison.lowerboundary,\r\n      feature,\r\n      getProperty\r\n    );\r\n    if (isNullOrUndefined(lowerBoundary)) {\r\n      return false;\r\n    }\r\n\r\n    var upperBoundary = evaluate(\r\n      comparison.upperboundary,\r\n      feature,\r\n      getProperty\r\n    );\r\n    if (isNullOrUndefined(upperBoundary)) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      compare(lowerBoundary, value) <= 0 && compare(upperBoundary, value) >= 0\r\n    );\r\n  }\r\n\r\n  function propertyIsEqualTo(comparison, feature, getProperty) {\r\n    var value1 = evaluate(comparison.expression1, feature, getProperty);\r\n    if (isNullOrUndefined(value1)) {\r\n      return false;\r\n    }\r\n\r\n    var value2 = evaluate(comparison.expression2, feature, getProperty);\r\n    if (isNullOrUndefined(value2)) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !comparison.matchcase ||\r\n      typeof value1 === 'boolean' ||\r\n      typeof value2 === 'boolean'\r\n    ) {\r\n      return compare(value1, value2, false) === 0;\r\n    }\r\n\r\n    /* eslint-disable-next-line eqeqeq */\r\n    return value1 == value2;\r\n  }\r\n\r\n  // Watch out! Null-ish values should not pass propertyIsNotEqualTo,\r\n  // just like in databases.\r\n  // This means that PropertyIsNotEqualTo is not the same as NOT(PropertyIsEqualTo).\r\n  function propertyIsNotEqualTo(comparison, feature, getProperty) {\r\n    var value1 = evaluate(comparison.expression1, feature, getProperty);\r\n    if (isNullOrUndefined(value1)) {\r\n      return false;\r\n    }\r\n\r\n    var value2 = evaluate(comparison.expression2, feature, getProperty);\r\n    if (isNullOrUndefined(value2)) {\r\n      return false;\r\n    }\r\n\r\n    return !propertyIsEqualTo(comparison, feature, getProperty);\r\n  }\r\n\r\n  /**\r\n   * A very basic implementation of a PropertyIsLike by converting match pattern to a regex.\r\n   * @private\r\n   * @param {object} comparison filter object for operator 'propertyislike'\r\n   * @param {string|number} value Feature property value.\r\n   * @param {object} getProperty A function with parameters (feature, propertyName) to extract\r\n   * the value of a property from a feature.\r\n   */\r\n  function propertyIsLike(comparison, feature, getProperty) {\r\n    var value = evaluate(comparison.expression1, feature, getProperty);\r\n    if (isNullOrUndefined(value)) {\r\n      return false;\r\n    }\r\n\r\n    var pattern = evaluate(comparison.expression2, feature, getProperty);\r\n    if (isNullOrUndefined(pattern)) {\r\n      return false;\r\n    }\r\n\r\n    // Create regex string from match pattern.\r\n    var wildcard = comparison.wildcard;\n    var singlechar = comparison.singlechar;\n    var escapechar = comparison.escapechar;\n    var matchcase = comparison.matchcase;\r\n\r\n    // Replace wildcard by '.*'\r\n    var patternAsRegex = pattern.replace(new RegExp((\"[\" + wildcard + \"]\"), 'g'), '.*');\r\n\r\n    // Replace single char match by '.'\r\n    patternAsRegex = patternAsRegex.replace(\r\n      new RegExp((\"[\" + singlechar + \"]\"), 'g'),\r\n      '.'\r\n    );\r\n\r\n    // Replace escape char by '\\' if escape char is not already '\\'.\r\n    if (escapechar !== '\\\\') {\r\n      patternAsRegex = patternAsRegex.replace(\r\n        new RegExp((\"[\" + escapechar + \"]\"), 'g'),\r\n        '\\\\'\r\n      );\r\n    }\r\n\r\n    // Bookend the regular expression.\r\n    patternAsRegex = \"^\" + patternAsRegex + \"$\";\r\n\r\n    var rex =\r\n      matchcase === false\r\n        ? new RegExp(patternAsRegex, 'i')\r\n        : new RegExp(patternAsRegex);\r\n    return rex.test(value);\r\n  }\r\n\r\n  /**\r\n   * Test feature properties against a comparison filter.\r\n   * @private\r\n   * @param  {Filter} comparison A comparison filter object.\r\n   * @param  {object} feature A feature object.\r\n   * @param  {Function} getProperty A function with parameters (feature, propertyName)\r\n   * to extract a single property value from a feature.\r\n   * @return {bool}  does feature fullfill comparison\r\n   */\r\n  function doComparison(comparison, feature, getProperty) {\r\n    switch (comparison.operator) {\r\n      case 'propertyislessthan':\r\n        return propertyIsLessThan(comparison, feature, getProperty);\r\n      case 'propertyisequalto':\r\n        return propertyIsEqualTo(comparison, feature, getProperty);\r\n      case 'propertyislessthanorequalto':\r\n        return (\r\n          propertyIsEqualTo(comparison, feature, getProperty) ||\r\n          propertyIsLessThan(comparison, feature, getProperty)\r\n        );\r\n      case 'propertyisnotequalto':\r\n        return propertyIsNotEqualTo(comparison, feature, getProperty);\r\n      case 'propertyisgreaterthan':\r\n        return propertyIsGreaterThan(comparison, feature, getProperty);\r\n      case 'propertyisgreaterthanorequalto':\r\n        return (\r\n          propertyIsEqualTo(comparison, feature, getProperty) ||\r\n          propertyIsGreaterThan(comparison, feature, getProperty)\r\n        );\r\n      case 'propertyisbetween':\r\n        return propertyIsBetween(comparison, feature, getProperty);\r\n      case 'propertyisnull':\r\n        return propertyIsNull(comparison, feature, getProperty);\r\n      case 'propertyislike':\r\n        return propertyIsLike(comparison, feature, getProperty);\r\n      default:\r\n        throw new Error((\"Unkown comparison operator \" + (comparison.operator)));\r\n    }\r\n  }\r\n\r\n  function doFIDFilter(fids, featureId) {\r\n    for (var i = 0; i < fids.length; i += 1) {\r\n      if (fids[i] === featureId) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Get feature properties from a GeoJSON feature.\r\n   * @param {object} feature GeoJSON feature.\r\n   * @returns {object} Feature properties.\r\n   *\r\n   */\r\n  function getGeoJSONProperty(feature, propertyName) {\r\n    return feature.properties[propertyName];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Gets feature id from a GeoJSON feature.\r\n   * @param {object} feature GeoJSON feature.\r\n   * @returns {number|string} Feature ID.\r\n   */\r\n  function getGeoJSONFeatureId(feature) {\r\n    return feature.id;\r\n  }\r\n\r\n  /**\r\n   * Calls functions from Filter object to test if feature passes filter.\r\n   * Functions are called with filter part they match and feature.\r\n   * @private\r\n   * @param  {Filter} filter\r\n   * @param  {object} feature feature\r\n   * @param  {object} options Custom filter options.\r\n   * @param  {Function} options.getProperty An optional function with parameters (feature, propertyName)\r\n   * that can be used to extract properties from a feature.\r\n   * When not given, properties are read from feature.properties directly.\r\n   * @param  {Function} options.getFeatureId An optional function to extract the feature id from a feature.\r\n   * When not given, feature id is read from feature.id.\r\n   * @return {boolean} True if the feature passes the conditions described by the filter object.\r\n   */\r\n  function filterSelector(filter, feature, options) {\n    if ( options === void 0 ) options = {};\n\r\n    var getProperty =\r\n      typeof options.getProperty === 'function'\r\n        ? options.getProperty\r\n        : getGeoJSONProperty;\r\n\r\n    var getFeatureId =\r\n      typeof options.getFeatureId === 'function'\r\n        ? options.getFeatureId\r\n        : getGeoJSONFeatureId;\r\n\r\n    var type = filter.type;\r\n    switch (type) {\r\n      case 'featureid':\r\n        return doFIDFilter(filter.fids, getFeatureId(feature));\r\n\r\n      case 'comparison':\r\n        return doComparison(filter, feature, getProperty);\r\n\r\n      case 'and': {\r\n        if (!filter.predicates) {\r\n          throw new Error('And filter must have predicates array.');\r\n        }\r\n\r\n        // And without predicates should return false.\r\n        if (filter.predicates.length === 0) {\r\n          return false;\r\n        }\r\n\r\n        return filter.predicates.every(function (predicate) { return filterSelector(predicate, feature, options); }\r\n        );\r\n      }\r\n\r\n      case 'or': {\r\n        if (!filter.predicates) {\r\n          throw new Error('Or filter must have predicates array.');\r\n        }\r\n\r\n        return filter.predicates.some(function (predicate) { return filterSelector(predicate, feature, options); }\r\n        );\r\n      }\r\n\r\n      case 'not': {\r\n        if (!filter.predicate) {\r\n          throw new Error('Not filter must have predicate.');\r\n        }\r\n\r\n        return !filterSelector(filter.predicate, feature, options);\r\n      }\r\n\r\n      default:\r\n        throw new Error((\"Unknown filter type: \" + type));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * [scaleSelector description]\r\n   * The \"standardized rendering pixel size\" is defined to be 0.28mm × 0.28mm\r\n   * @private\r\n   * @param  {Rule} rule\r\n   * @param  {number} resolution  m/px\r\n   * @return {boolean}\r\n   */\r\n  function scaleSelector(rule, resolution) {\r\n    if (\r\n      rule.maxscaledenominator !== undefined &&\r\n      rule.minscaledenominator !== undefined\r\n    ) {\r\n      if (\r\n        resolution / 0.00028 < rule.maxscaledenominator &&\r\n        resolution / 0.00028 > rule.minscaledenominator\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    if (rule.maxscaledenominator !== undefined) {\r\n      return resolution / 0.00028 < rule.maxscaledenominator;\r\n    }\r\n    if (rule.minscaledenominator !== undefined) {\r\n      return resolution / 0.00028 > rule.minscaledenominator;\r\n    }\r\n    return true;\r\n  }\n\n  /**\r\n   * get all layer names in sld\r\n   * @param {StyledLayerDescriptor} sld\r\n   * @return {string[]} registered layernames\r\n   */\r\n  function getLayerNames(sld) {\r\n    return sld.layers.map(function (l) { return l.name; });\r\n  }\r\n\r\n  /**\r\n   * Get layer definition from sld\r\n   * @param  {StyledLayerDescriptor} sld       [description]\r\n   * @param  {string} [layername] optional layername\r\n   * @return {Layer}           [description]\r\n   */\r\n  function getLayer(sld, layername) {\r\n    if (!layername) {\r\n      return sld.layers['0'];\r\n    }\r\n    return sld.layers.find(function (l) { return l.name === layername; });\r\n  }\r\n\r\n  /**\r\n   * getStyleNames, notice name is not required for userstyle, you might get undefined\r\n   * @param  {Layer} layer [description]\r\n   * @return {string[]}       [description]\r\n   */\r\n  function getStyleNames(layer) {\r\n    return layer.styles.map(function (s) { return s.name; });\r\n  }\r\n\r\n  /**\r\n   * get style from array layer.styles, if name is undefined it returns default style.\r\n   * null is no style found\r\n   * @param  {Layer} layer [description]\r\n   * @param {string} [name] of style. If not given, the style marked as default will be returned.\r\n   * If there is no default style, the first one will be returned.\r\n   * @return {object} the style from layer.styles matching the name\r\n   */\r\n  function getStyle(layer, name) {\r\n    if (name) {\r\n      return layer.styles.find(function (s) { return s.name === name; });\r\n    }\r\n\r\n    var defaultStyle = layer.styles.find(function (s) { return s.default; });\r\n    if (defaultStyle) {\r\n      return defaultStyle;\r\n    }\r\n\r\n    return layer.styles[0];\r\n  }\r\n\r\n  /**\r\n   * get rules for specific feature after applying filters\r\n   * @example\r\n   * const style = getStyle(sldLayer, stylename);\r\n   * getRules(style.featuretypestyles['0'], geojson, resolution);\r\n   * @param  {FeatureTypeStyle} featureTypeStyle\r\n   * @param  {object} feature geojson\r\n   * @param  {number} resolution m/px\r\n   * @param  {Function} options.getProperty An optional function with parameters (feature, propertyName)\r\n   * that can be used to extract a property value from a feature.\r\n   * When not given, properties are read from feature.properties directly.Error\r\n   * @param  {Function} options.getFeatureId An optional function to extract the feature id from a feature.Error\r\n   * When not given, feature id is read from feature.id.\r\n   * @return {Rule[]}\r\n   */\r\n  function getRules(featureTypeStyle, feature, resolution, options) {\n    if ( options === void 0 ) options = {};\n\r\n    var validRules = [];\r\n    var elseFilterCount = 0;\r\n    for (var j = 0; j < featureTypeStyle.rules.length; j += 1) {\r\n      var rule = featureTypeStyle.rules[j];\r\n      // Only keep rules that pass the rule's min/max scale denominator checks.\r\n      if (scaleSelector(rule, resolution)) {\r\n        if (rule.elsefilter) {\r\n          // In the first rule selection step, keep all rules with an ElseFilter.\r\n          validRules.push(rule);\r\n          elseFilterCount += 1;\r\n        } else if (!rule.filter) {\r\n          // Rules without filter always apply.\r\n          validRules.push(rule);\r\n        } else if (filterSelector(rule.filter, feature, options)) {\r\n          // If a rule has a filter, only keep it if the feature passes the filter.\r\n          validRules.push(rule);\r\n        }\r\n      }\r\n    }\r\n\r\n    // When eligible rules contain only rules with ElseFilter, return them all.\r\n    // Note: the spec does not forbid more than one ElseFilter remaining at a given scale,\r\n    // but leaves handling this case up to the implementor.\r\n    // The SLDLibrary chooses to keep them all.\r\n    if (elseFilterCount === validRules.length) {\r\n      return validRules;\r\n    }\r\n\r\n    // If a mix of rules with and without ElseFilter remains, only keep rules without ElseFilter.\r\n    return validRules.filter(function (rule) { return !rule.elsefilter; });\r\n  }\r\n\r\n  /**\r\n   * Get all symbolizers inside a given rule.\r\n   * Note: this will be a mix of Point/Line/Polygon/Text symbolizers.\r\n   * @param {object} rule SLD rule object.\r\n   * @returns {Array<object>} Array of all symbolizers in a rule.\r\n   */\r\n  function getRuleSymbolizers(rule) {\r\n    var allSymbolizers = (rule.polygonsymbolizer || []).concat( (rule.linesymbolizer || []),\r\n      (rule.pointsymbolizer || []),\r\n      (rule.textsymbolizer || []) );\r\n\r\n    return allSymbolizers;\r\n  }\r\n\r\n  /**\r\n   * Gets a nested property from an object according to a property path.\r\n   * Note: path fragments may not contain a \".\".\r\n   * Note: returns undefined if input obj is falsy.\r\n   * @private\r\n   * @example\r\n   * getByPath({ a: { b: { c: 42 } } }, \"a.b.c\") // returns 42.\r\n   * getByPath({ a: { b: { c: 42 } } }, \"a.d.c\") // returns undefined, because obj.a has no property .d.\r\n   * @param {object} obj Object.\r\n   * @param {string} path Property path.\r\n   * @returns {any} Value of property at given path inside object, or undefined if any property\r\n   * in the path does not exist on the object.\r\n   */\r\n  function getByPath(obj, path) {\r\n    if (!obj) {\r\n      return undefined;\r\n    }\r\n\r\n    // Start from the given object.\r\n    var value = obj;\r\n\r\n    // Walk the object property path.\r\n    var fragments = (path || '').split('.');\r\n    for (var k = 0; k < fragments.length; k += 1) {\r\n      var fragment = fragments[k];\r\n      // Return undefined if any partial path does not exist in the object.\r\n      if (!(fragment in value)) {\r\n        return undefined;\r\n      }\r\n      value = value[fragment];\r\n    }\r\n\r\n    return value;\r\n  }\n\n  /**\r\n   * Get styling from rules per geometry type\r\n   * @param  {Rule[]} rules [description]\r\n   * @return {CategorizedSymbolizers}\r\n   */\r\n  function categorizeSymbolizers(rules) {\r\n    var result = {\r\n      polygonSymbolizers: [],\r\n      lineSymbolizers: [],\r\n      pointSymbolizers: [],\r\n      textSymbolizers: [],\r\n    };\r\n\r\n    (rules || []).forEach(function (rule) {\r\n      if (rule.polygonsymbolizer) {\r\n        result.polygonSymbolizers = ( result.polygonSymbolizers ).concat( rule.polygonsymbolizer );\r\n      }\r\n      if (rule.linesymbolizer) {\r\n        result.lineSymbolizers = ( result.lineSymbolizers ).concat( rule.linesymbolizer );\r\n      }\r\n      if (rule.pointsymbolizer) {\r\n        result.pointSymbolizers = ( result.pointSymbolizers ).concat( rule.pointsymbolizer );\r\n      }\r\n      if (rule.textsymbolizer) {\r\n        result.textSymbolizers = ( result.textSymbolizers ).concat( rule.textsymbolizer );\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @typedef CategorizedSymbolizers\r\n   * @name CategorizedSymbolizers\r\n   * @description contains for each geometry type the symbolizer from an array of rules\r\n   * @property {PolygonSymbolizer[]} polygonSymbolizers polygonsymbolizers\r\n   * @property {LineSymbolizer[]} lineSymbolizers  linesymbolizers\r\n   * @property {PointSymbolizer[]} pointSymbolizers  pointsymbolizers, same as graphic prop from PointSymbolizer\r\n   * @property {TextSymbolizer[]} textSymbolizers  textsymbolizers\r\n   */\n\n  var IMAGE_LOADING = 'IMAGE_LOADING';\r\n  var IMAGE_LOADED = 'IMAGE_LOADED';\r\n  var IMAGE_ERROR = 'IMAGE_ERROR';\r\n\r\n  // SLD Spec: Default size for Marks without Size should be 6 pixels.\r\n  var DEFAULT_MARK_SIZE = 6; // pixels\r\n  // SLD Spec: Default size for ExternalGraphic with an unknown native size,\r\n  // like SVG without dimensions, should be 16 pixels.\r\n  var DEFAULT_EXTERNALGRAPHIC_SIZE = 16; // pixels\r\n\r\n  // QGIS Graphic stroke placement options\r\n  var PLACEMENT_DEFAULT = 'PLACEMENT_DEFAULT';\r\n  var PLACEMENT_FIRSTPOINT = 'PLACEMENT_FIRSTPOINT';\r\n  var PLACEMENT_LASTPOINT = 'PLACEMENT_LASTPOINT';\n\n  /* eslint-disable no-continue */\r\n\r\n  // These are possible locations for an external graphic inside a symbolizer.\r\n  var externalGraphicPaths = [\r\n    'graphic.externalgraphic',\r\n    'stroke.graphicstroke.graphic.externalgraphic',\r\n    'fill.graphicfill.graphic.externalgraphic' ];\r\n\r\n  /**\r\n   * @private\r\n   * Global image cache. A map of image Url -> {\r\n   *   url: image url,\r\n   *   image: an Image instance containing image data,\r\n   *   width: image width in pixels,\r\n   *   height: image height in pixels\r\n   * }\r\n   */\r\n  var imageCache = {};\r\n  function setCachedImage(url, imageData) {\r\n    imageCache[url] = imageData;\r\n  }\r\n  function getCachedImage(url) {\r\n    return imageCache[url];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Global image loading state cache.\r\n   * A map of image Url -> one of 'IMAGE_LOADING', 'IMAGE_LOADED', 'IMAGE_ERROR'\r\n   */\r\n  var imageLoadingStateCache = {};\r\n  function setImageLoadingState(url, loadingState) {\r\n    imageLoadingStateCache[url] = loadingState;\r\n  }\r\n  function getImageLoadingState(url) {\r\n    return imageLoadingStateCache[url];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * A cache of image loading promises.\r\n   * A map of image Url -> Promise\r\n   * This used to prevent duplicate loading when a style references an image that's already being loaded.\r\n   */\r\n  var _imageLoaderCache = {};\r\n  function getImageLoader(url) {\r\n    return _imageLoaderCache[url];\r\n  }\r\n  function setImageLoader(url, loaderPromise) {\r\n    _imageLoaderCache[url] = loaderPromise;\r\n  }\r\n\r\n  function invalidateExternalGraphicSymbolizers(symbolizer, imageUrl) {\r\n    // Look at all possible paths where an externalgraphic may be present within a symbolizer.\r\n    // When such an externalgraphic has been found, and its url equals imageUrl, invalidate the symbolizer.\r\n    for (var k = 0; k < externalGraphicPaths.length; k += 1) {\r\n      // Note: this process assumes that each symbolizer has at most one external graphic element.\r\n      var path = externalGraphicPaths[k];\r\n      var externalgraphic = getByPath(symbolizer, path);\r\n      if (externalgraphic && externalgraphic.onlineresource === imageUrl) {\r\n        symbolizer.__invalidated = true;\r\n        // If the symbolizer contains a graphic stroke symbolizer,\r\n        // also update the nested graphicstroke symbolizer object.\r\n        if (path.indexOf('graphicstroke') > -1) {\r\n          symbolizer.stroke.graphicstroke.__invalidated = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateSymbolizerInvalidatedState(ruleSymbolizer, imageUrl) {\r\n    if (!ruleSymbolizer) {\r\n      return;\r\n    }\r\n\r\n    // Watch out! A symbolizer inside a rule may be a symbolizer, or an array of symbolizers.\r\n    // Todo: refactor so rule.symbolizers property is always an array with 0..n symbolizer objects.\r\n    if (!Array.isArray(ruleSymbolizer)) {\r\n      invalidateExternalGraphicSymbolizers(ruleSymbolizer, imageUrl);\r\n    } else {\r\n      for (var k = 0; k < ruleSymbolizer.length; k += 1) {\r\n        invalidateExternalGraphicSymbolizers(ruleSymbolizer[k], imageUrl);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Invalidate all symbolizers inside a featureTypeStyle's rules having an ExternalGraphic matching the image url\r\n   * @param {object} featureTypeStyle A feature type style object.\r\n   * @param {string} imageUrl The image url.\r\n   */\r\n  function invalidateExternalGraphics(featureTypeStyle, imageUrl) {\r\n    if (!featureTypeStyle.rules) {\r\n      return;\r\n    }\r\n\r\n    featureTypeStyle.rules.forEach(function (rule) {\r\n      updateSymbolizerInvalidatedState(rule.pointsymbolizer, imageUrl);\r\n      updateSymbolizerInvalidatedState(rule.linesymbolizer, imageUrl);\r\n      updateSymbolizerInvalidatedState(rule.polygonsymbolizer, imageUrl);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Creates a promise that loads an image and store it in the image cache.\r\n   * Calling this method with the same image url twice will return the loader promise\r\n   * that was created when this method was called the first time for that specific image url.\r\n   * @param {string} imageUrl Image url.\r\n   * @returns {Promise} A promise that resolves when the image is loaded and fails when the\r\n   * image didn't load correctly.\r\n   */\r\n  function getCachingImageLoader(imageUrl) {\r\n    // Check of a load is already in progress for an image.\r\n    // If so, return the loader.\r\n    var loader = getImageLoader(imageUrl);\r\n    if (loader) {\r\n      return loader;\r\n    }\r\n\r\n    // If no load is in progress, create a new loader and store it in the image loader cache before returning it.\r\n    loader = new Promise(function (resolve, reject) {\r\n      var image = new Image();\r\n\r\n      image.onload = function () {\r\n        setCachedImage(imageUrl, {\r\n          url: imageUrl,\r\n          image: image,\r\n          width: image.naturalWidth,\r\n          height: image.naturalHeight,\r\n        });\r\n        setImageLoadingState(imageUrl, IMAGE_LOADED);\r\n        resolve(imageUrl);\r\n      };\r\n\r\n      image.onerror = function () {\r\n        setImageLoadingState(imageUrl, IMAGE_ERROR);\r\n        reject();\r\n      };\r\n\r\n      image.src = imageUrl;\r\n    });\r\n\r\n    // Cache the new image loader and return it.\r\n    setImageLoadingState(imageUrl, IMAGE_LOADING);\r\n    setImageLoader(imageUrl, loader);\r\n    return loader;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Load and cache an image that's used as externalGraphic inside a symbolizer.\r\n   * When the image is loaded, all symbolizers within the feature type style referencing this image are invalidated,\r\n   * and the imageLoadedCallback is called with the loaded image url.\r\n   * @param {url} imageUrl Image url.\r\n   * @param {object} featureTypeStyle Feature type style object.\r\n   * @param {Function} imageLoadedCallback Will be called with the image url when image\r\n   * has loaded. Will be called with undefined if the loading the image resulted in an error.\r\n   */\r\n  function loadExternalGraphic(\r\n    imageUrl,\r\n    featureTypeStyle,\r\n    imageLoadedCallback\r\n  ) {\r\n    invalidateExternalGraphics(featureTypeStyle, imageUrl);\r\n    getCachingImageLoader(imageUrl)\r\n      .then(function () {\r\n        invalidateExternalGraphics(featureTypeStyle, imageUrl);\r\n        if (typeof imageLoadedCallback === 'function') {\r\n          imageLoadedCallback(imageUrl);\r\n        }\r\n      })\r\n      .catch(function () {\r\n        invalidateExternalGraphics(featureTypeStyle, imageUrl);\r\n        if (typeof imageLoadedCallback === 'function') {\r\n          imageLoadedCallback();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Start loading images used in rules that have a pointsymbolizer with an externalgraphic.\r\n   * @param {Array<object>} rules Array of SLD rule objects that pass the filter for a single feature.\r\n   * @param {FeatureTypeStyle} featureTypeStyle The feature type style object for a layer.\r\n   * @param {Function} imageLoadedCallback Function to call when an image has loaded.\r\n   */\r\n  function processExternalGraphicSymbolizers(\r\n    rules,\r\n    featureTypeStyle,\r\n    imageLoadedCallback,\r\n    callbackRef\r\n  ) {\r\n    // Walk over all symbolizers inside all given rules.\r\n    // Dive into the symbolizers to find ExternalGraphic elements and for each ExternalGraphic,\r\n    // check if the image url has been encountered before.\r\n    // If not -> start loading the image into the global image cache.\r\n    rules.forEach(function (rule) {\r\n      var allSymbolizers = getRuleSymbolizers(rule);\r\n      allSymbolizers.forEach(function (symbolizer) {\r\n        externalGraphicPaths.forEach(function (path) {\r\n          var exgraphic = getByPath(symbolizer, path);\r\n          if (!exgraphic) {\r\n            return;\r\n          }\r\n          var imageUrl = exgraphic.onlineresource;\r\n          var imageLoadingState = getImageLoadingState(imageUrl);\r\n          if (!imageLoadingState || imageLoadingState === IMAGE_LOADING) {\r\n            // Prevent adding imageLoadedCallback more than once per image per created style function\r\n            // by inspecting the callbackRef object passed by the style function creator function.\r\n            // Each style function has its own callbackRef dictionary.\r\n            if (!callbackRef[imageUrl]) {\r\n              callbackRef[imageUrl] = true;\r\n              // Load image and when loaded, invalidate all symbolizers referencing the image\r\n              // and invoke the imageLoadedCallback.\r\n              loadExternalGraphic(\r\n                imageUrl,\r\n                featureTypeStyle,\r\n                imageLoadedCallback\r\n              );\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Create an OL Icon style for an external graphic.\r\n   * The Graphic must be already loaded and present in the global imageCache.\r\n   * @param {string} imageUrl Url of the external graphic.\r\n   * @param {number} size Requested size in pixels.\r\n   * @param {number} [rotationDegrees] Image rotation in degrees (clockwise). Default 0.\r\n   */\r\n  function createCachedImageStyle(imageUrl, size, rotationDegrees) {\n    if ( rotationDegrees === void 0 ) rotationDegrees = 0.0;\n\r\n    var ref = getCachedImage(imageUrl);\n    var image = ref.image;\n    var width = ref.width;\n    var height = ref.height;\r\n    return new style.Style({\r\n      image: new style.Icon({\r\n        img: image,\r\n        imgSize: [width, height],\r\n        // According to SLD spec, if size is given, image height should equal the given size.\r\n        scale: size / height || 1,\r\n        rotation: (Math.PI * rotationDegrees) / 180.0,\r\n      }),\r\n    });\r\n  }\n\n  var emptyStyle = new style.Style({});\r\n\r\n  var defaultPointStyle = new style.Style({\r\n    image: new style.Circle({\r\n      radius: 8,\r\n      fill: new style.Fill({\r\n        color: 'blue',\r\n        fillOpacity: 0.7,\r\n      }),\r\n    }),\r\n  });\r\n\r\n  var imageLoadingPointStyle = new style.Style({\r\n    image: new style.Circle({\r\n      radius: 5,\r\n      fill: new style.Fill({\r\n        color: '#DDDDDD',\r\n      }),\r\n      stroke: new style.Stroke({\r\n        width: 1,\r\n        color: '#888888',\r\n      }),\r\n    }),\r\n  });\r\n\r\n  var imageLoadingPolygonStyle = new style.Style({\r\n    fill: new style.Fill({\r\n      color: '#DDDDDD',\r\n    }),\r\n    stroke: new style.Stroke({\r\n      color: '#888888',\r\n      width: 1,\r\n    }),\r\n  });\r\n\r\n  var imageErrorPointStyle = new style.Style({\r\n    image: new style.RegularShape({\r\n      angle: Math.PI / 4,\r\n      fill: new style.Fill({\r\n        color: 'red',\r\n      }),\r\n      points: 4,\r\n      radius: 8,\r\n      radius2: 0,\r\n      stroke: new style.Stroke({\r\n        color: 'red',\r\n        width: 4,\r\n      }),\r\n    }),\r\n  });\r\n\r\n  var imageErrorPolygonStyle = new style.Style({\r\n    fill: new style.Fill({\r\n      color: 'red',\r\n    }),\r\n    stroke: new style.Stroke({\r\n      color: 'red',\r\n      width: 1,\r\n    }),\r\n  });\n\n  /**\r\n   * Function to memoize style conversion functions that convert sld symbolizers to OpenLayers style instances.\r\n   * The memoized version of the style converter returns the same OL style instance if the symbolizer is the same object.\r\n   * Uses a WeakMap internally.\r\n   * Note: This only works for constant symbolizers.\r\n   * @private\r\n   * @param {Function} styleFunction Function that accepts a single symbolizer object and returns the corresponding OpenLayers style object.\r\n   * @returns {Function} The memoized function of the style conversion function.\r\n   */\r\n  function memoizeStyleFunction(styleFunction) {\r\n    var styleCache = new WeakMap();\r\n\r\n    return function (symbolizer) {\r\n      var olStyle = styleCache.get(symbolizer);\r\n\r\n      // Create a new style if no style has been created yet, or when symbolizer has been invalidated.\r\n      if (!olStyle || symbolizer.__invalidated) {\r\n        olStyle = styleFunction(symbolizer);\r\n        // Clear invalidated flag after creating a new style instance.\r\n        symbolizer.__invalidated = false;\r\n        styleCache.set(symbolizer, olStyle);\r\n      }\r\n\r\n      return olStyle;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Convert a hex color (like #AABBCC) to an rgba-string.\r\n   * @private\r\n   * @param  {string} hex   eg #AA00FF\r\n   * @param  {Number} alpha eg 0.5\r\n   * @return {string}       rgba(0,0,0,0)\r\n   */\r\n  function hexToRGB(hex, alpha) {\r\n    var r = parseInt(hex.slice(1, 3), 16);\r\n    var g = parseInt(hex.slice(3, 5), 16);\r\n    var b = parseInt(hex.slice(5, 7), 16);\r\n    if (alpha || alpha === 0) {\r\n      return (\"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\");\r\n    }\r\n    return (\"rgb(\" + r + \", \" + g + \", \" + b + \")\");\r\n  }\r\n\r\n  /**\r\n   * Get color string for OpenLayers. Encodes opacity into color string if it's a number less than 1.\r\n   * @private\r\n   * @param {string} color Color string, encoded as #AABBCC.\r\n   * @param {number} opacity Opacity. Non-numeric values will be treated as 1.\r\n   * @returns {string} OpenLayers color string.\r\n   */\r\n  function getOLColorString(color, opacity) {\r\n    if (opacity !== null && opacity < 1.0 && color.startsWith('#')) {\r\n      return hexToRGB(color, opacity);\r\n    }\r\n    return color;\r\n  }\r\n\r\n  /**\r\n   * Calculate the center-to-center distance for graphics placed along a line within a GraphicSymbolizer.\r\n   * @private\r\n   * @param {object} lineSymbolizer SLD line symbolizer object.\r\n   * @param {number} graphicWidth Width of the symbolizer graphic in pixels. This size may be dependent on feature properties,\r\n   * so it has to be supplied separately from the line symbolizer object.\r\n   * @returns {number} Center-to-center distance for graphics along a line.\r\n   */\r\n  function calculateGraphicSpacing(lineSymbolizer, graphicWidth) {\r\n    var ref = lineSymbolizer.stroke;\n    var graphicstroke = ref.graphicstroke;\n    var styling = ref.styling;\r\n    if ('gap' in graphicstroke) {\r\n      // Note: gap should be a numeric property after parsing (check reader.test).\r\n      return graphicstroke.gap + graphicWidth;\r\n    }\r\n\r\n    // If gap is not given, use strokeDasharray to space graphics.\r\n    // First digit represents size of graphic, second the relative space, e.g.\r\n    // size = 20, dash = [2 6] -> 2 ~ 20 then 6 ~ 60, total segment length should be 20 + 60 = 80\r\n    var multiplier = 1; // default, i.e. a segment is the size of the graphic (without stroke/outline).\r\n    if (styling && styling.strokeDasharray) {\r\n      var dash = styling.strokeDasharray.split(' ');\r\n      if (dash.length >= 2 && dash[0] !== 0) {\r\n        multiplier = dash[1] / dash[0] + 1;\r\n      }\r\n    }\r\n    return multiplier * graphicWidth;\r\n  }\r\n\r\n  /**\r\n   * Get initial gap size from line symbolizer.\r\n   * @private\r\n   * @param {object} lineSymbolizer SLD line symbolizer object.\r\n   * @returns {number} Inital gap size. Defaults to 0 if not present.\r\n   */\r\n  function getInitialGapSize(lineSymbolizer) {\r\n    var ref = lineSymbolizer.stroke;\n    var graphicstroke = ref.graphicstroke;\r\n    return graphicstroke.initialgap || 0.0;\r\n  }\n\n  /**\r\n   * @private\r\n   * Create an OL point style corresponding to a well known symbol identifier.\r\n   * @param {string} wellKnownName SLD Well Known Name for symbolizer.\r\n   * Can be 'circle', 'square', 'triangle', 'star', 'cross', 'x', 'hexagon', 'octagon'.\r\n   * @param {number} size Symbol size in pixels.\r\n   * @param {ol/style/stroke} stroke OpenLayers Stroke instance.\r\n   * @param {ol/style/fill} fill OpenLayers Fill instance.\r\n   * @param {number} rotationDegrees Symbol rotation in degrees (clockwise). Default 0.\r\n   */\r\n  function getWellKnownSymbol(\r\n    wellKnownName,\r\n    size,\r\n    stroke,\r\n    fill,\r\n    rotationDegrees\r\n  ) {\n    if ( rotationDegrees === void 0 ) rotationDegrees = 0.0;\n\r\n    var radius = size / 2;\r\n    var rotationRadians = (Math.PI * rotationDegrees) / 180.0;\r\n\r\n    var fillColor;\r\n    if (fill && fill.getColor()) {\r\n      fillColor = fill.getColor();\r\n    }\r\n\r\n    switch (wellKnownName) {\r\n      case 'circle':\r\n        return new style.Circle({\r\n          fill: fill,\r\n          radius: radius,\r\n          stroke: stroke,\r\n        });\r\n\r\n      case 'triangle':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 3,\r\n          radius: radius,\r\n          stroke: stroke,\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'star':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 5,\r\n          radius: radius,\r\n          radius2: radius / 2.5,\r\n          stroke: stroke,\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'cross':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 4,\r\n          radius: radius,\r\n          radius2: 0,\r\n          stroke:\r\n            stroke ||\r\n            new style.Stroke({\r\n              color: fillColor,\r\n              width: radius / 2,\r\n            }),\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'hexagon':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 6,\r\n          radius: radius,\r\n          stroke:\r\n            stroke ||\r\n            new style.Stroke({\r\n              color: fillColor,\r\n              width: radius / 2,\r\n            }),\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'octagon':\r\n        return new style.RegularShape({\r\n          angle: Math.PI / 8,\r\n          fill: fill,\r\n          points: 8,\r\n          radius: radius / Math.cos(Math.PI / 8),\r\n          stroke:\r\n            stroke ||\r\n            new style.Stroke({\r\n              color: fillColor,\r\n              width: radius / 2,\r\n            }),\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'cross2': // cross2 is used by QGIS for the x symbol.\r\n      case 'x':\r\n        return new style.RegularShape({\r\n          angle: Math.PI / 4,\r\n          fill: fill,\r\n          points: 4,\r\n          radius: Math.sqrt(2.0) * radius,\r\n          radius2: 0,\r\n          stroke:\r\n            stroke ||\r\n            new style.Stroke({\r\n              color: fillColor,\r\n              width: radius / 2,\r\n            }),\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'diamond':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 4,\r\n          radius: radius,\r\n          stroke: stroke,\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'horline':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 2,\r\n          radius: radius,\r\n          angle: Math.PI / 2,\r\n          stroke: stroke,\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'line':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 2,\r\n          radius: radius,\r\n          angle: 0,\r\n          stroke: stroke,\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'backslash':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 2,\r\n          radius: radius * Math.sqrt(2),\r\n          angle: -Math.PI / 4,\r\n          stroke: stroke,\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      case 'slash':\r\n        return new style.RegularShape({\r\n          fill: fill,\r\n          points: 2,\r\n          radius: radius * Math.sqrt(2),\r\n          angle: Math.PI / 4,\r\n          stroke: stroke,\r\n          rotation: rotationRadians,\r\n        });\r\n\r\n      default:\r\n        // Default is `square`\r\n        return new style.RegularShape({\r\n          angle: Math.PI / 4,\r\n          fill: fill,\r\n          points: 4,\r\n          // For square, scale radius so the height of the square equals the given size.\r\n          radius: radius * Math.sqrt(2.0),\r\n          stroke: stroke,\r\n          rotation: rotationRadians,\r\n        });\r\n    }\r\n  }\n\n  /* eslint-disable import/prefer-default-export */\r\n\r\n  /**\r\n   * Get an OL style/Stroke instance from the css/svg properties of the .stroke property\r\n   * of an SLD symbolizer object.\r\n   * @private\r\n   * @param  {object} stroke SLD symbolizer.stroke object.\r\n   * @return {object} OpenLayers style/Stroke instance. Returns undefined when input is null or undefined.\r\n   */\r\n  function getSimpleStroke(stroke) {\r\n    // According to SLD spec, if no Stroke element is present inside a symbolizer element,\r\n    // no stroke is to be rendered.\r\n    if (!stroke) {\r\n      return undefined;\r\n    }\r\n\r\n    var styleParams = stroke.styling || {};\r\n\r\n    // Options that have a default value.\r\n    var strokeColor = evaluate(styleParams.stroke, null, null, '#000000');\r\n\r\n    var strokeOpacity = evaluate(styleParams.strokeOpacity, null, null, 1.0);\r\n\r\n    var strokeWidth = evaluate(styleParams.strokeWidth, null, null, 1.0);\r\n\r\n    var strokeLineDashOffset = evaluate(\r\n      styleParams.strokeDashoffset,\r\n      null,\r\n      null,\r\n      0.0\r\n    );\r\n\r\n    var strokeOptions = {\r\n      color: getOLColorString(strokeColor, strokeOpacity),\r\n      width: strokeWidth,\r\n      lineDashOffset: strokeLineDashOffset,\r\n    };\r\n\r\n    // Optional parameters that will be added to stroke options when present in SLD.\r\n    var strokeLineJoin = evaluate(styleParams.strokeLinejoin, null, null);\r\n    if (strokeLineJoin !== null) {\r\n      strokeOptions.lineJoin = strokeLineJoin;\r\n    }\r\n\r\n    var strokeLineCap = evaluate(styleParams.strokeLinecap, null, null);\r\n    if (strokeLineCap !== null) {\r\n      strokeOptions.lineCap = strokeLineCap;\r\n    }\r\n\r\n    var strokeDashArray = evaluate(styleParams.strokeDasharray, null, null);\r\n    if (strokeDashArray !== null) {\r\n      strokeOptions.lineDash = strokeDashArray.split(' ');\r\n    }\r\n\r\n    return new style.Stroke(strokeOptions);\r\n  }\r\n\r\n  /**\r\n   * Get an OL style/Fill instance from the css/svg properties of the .fill property\r\n   * of an SLD symbolizer object.\r\n   * @private\r\n   * @param  {object} fill SLD symbolizer.fill object.\r\n   * @return {object} OpenLayers style/Fill instance. Returns undefined when input is null or undefined.\r\n   */\r\n  function getSimpleFill(fill) {\r\n    // According to SLD spec, if no Fill element is present inside a symbolizer element,\r\n    // no fill is to be rendered.\r\n    if (!fill) {\r\n      return undefined;\r\n    }\r\n\r\n    var styleParams = fill.styling || {};\r\n\r\n    var fillColor = evaluate(styleParams.fill, null, null, '#808080');\r\n\r\n    var fillOpacity = evaluate(styleParams.fillOpacity, null, null, 1.0);\r\n\r\n    return new style.Fill({ color: getOLColorString(fillColor, fillOpacity) });\r\n  }\n\n  /**\r\n   * Change OL Style fill properties for dynamic symbolizer style parameters.\r\n   * Modification happens in-place on the given style instance.\r\n   * @private\r\n   * @param {ol/style/Style} olStyle OL Style instance.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @param {ol/Feature|GeoJSON} feature OL Feature instance or GeoJSON feature object.\r\n   * @param {Function} getProperty Property getter (feature, propertyName) => propertyValue.\r\n   * @returns {bool} Returns true if any property-dependent fill style changes have been made.\r\n   */\r\n  function applyDynamicFillStyling(\r\n    olStyle,\r\n    symbolizer,\r\n    feature,\r\n    getProperty\r\n  ) {\r\n    var olFill = olStyle.getFill();\r\n    if (!olFill) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof getProperty !== 'function') {\r\n      return false;\r\n    }\r\n\r\n    var somethingChanged = false;\r\n\r\n    var fill = symbolizer.fill || {};\r\n    var styling = fill.styling || {};\r\n\r\n    // Change fill color if either color or opacity is property based.\r\n    if (\r\n      isDynamicExpression(styling.fill) ||\r\n      isDynamicExpression(styling.fillOpacity)\r\n    ) {\r\n      var fillColor = evaluate(styling.fill, feature, getProperty, '#808080');\r\n      var fillOpacity = evaluate(\r\n        styling.fillOpacity,\r\n        feature,\r\n        getProperty,\r\n        1.0\r\n      );\r\n      olFill.setColor(getOLColorString(fillColor, fillOpacity));\r\n      somethingChanged = true;\r\n    }\r\n\r\n    return somethingChanged;\r\n  }\r\n\r\n  /**\r\n   * Change OL Style stroke properties for dynamic symbolizer style parameters.\r\n   * Modification happens in-place on the given style instance.\r\n   * @private\r\n   * @param {ol/style/Style} olStyle OL Style instance.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @param {ol/Feature|GeoJSON} feature OL Feature instance or GeoJSON feature object.\r\n   * @param {Function} getProperty Property getter (feature, propertyName) => propertyValue.\r\n   * @returns {bool} Returns true if any property-dependent stroke style changes have been made.\r\n   */\r\n  function applyDynamicStrokeStyling(\r\n    olStyle,\r\n    symbolizer,\r\n    feature,\r\n    getProperty\r\n  ) {\r\n    var olStroke = olStyle.getStroke();\r\n    if (!olStroke) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof getProperty !== 'function') {\r\n      return false;\r\n    }\r\n\r\n    var somethingChanged = false;\r\n\r\n    var stroke = symbolizer.stroke || {};\r\n    var styling = stroke.styling || {};\r\n\r\n    // Change stroke width if it's property based.\r\n    if (isDynamicExpression(styling.strokeWidth)) {\r\n      var strokeWidth = evaluate(\r\n        styling.strokeWidth,\r\n        feature,\r\n        getProperty,\r\n        1.0\r\n      );\r\n      olStroke.setWidth(strokeWidth);\r\n      somethingChanged = true;\r\n    }\r\n\r\n    // Change stroke color if either color or opacity is property based.\r\n    if (\r\n      isDynamicExpression(styling.stroke) ||\r\n      isDynamicExpression(styling.strokeOpacity)\r\n    ) {\r\n      var strokeColor = evaluate(\r\n        styling.stroke,\r\n        feature,\r\n        getProperty,\r\n        '#000000'\r\n      );\r\n      var strokeOpacity = evaluate(\r\n        styling.strokeOpacity,\r\n        feature,\r\n        getProperty,\r\n        1.0\r\n      );\r\n      olStroke.setColor(getOLColorString(strokeColor, strokeOpacity));\r\n      somethingChanged = true;\r\n    }\r\n\r\n    return somethingChanged;\r\n  }\r\n\r\n  /**\r\n   * Change OL Text properties for dynamic symbolizer style parameters.\r\n   * Modification happens in-place on the given style instance.\r\n   * @private\r\n   * @param {ol/style/Style} olStyle OL Style instance.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @param {ol/Feature|GeoJSON} feature OL Feature instance or GeoJSON feature object.\r\n   * @param {Function} getProperty Property getter (feature, propertyName) => propertyValue.\r\n   * @returns {bool} Returns true if any property-dependent stroke style changes have been made.\r\n   */\r\n  function applyDynamicTextStyling(\r\n    olStyle,\r\n    symbolizer,\r\n    feature,\r\n    getProperty\r\n  ) {\r\n    var olText = olStyle.getText();\r\n    if (!olText) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof getProperty !== 'function') {\r\n      return false;\r\n    }\r\n\r\n    // Text fill style has to be applied to text color, so it has to be set as olText stroke.\r\n    if (\r\n      symbolizer.fill &&\r\n      symbolizer.fill.styling &&\r\n      (isDynamicExpression(symbolizer.fill.styling.fill) ||\r\n        isDynamicExpression(symbolizer.fill.styling.fillOpacity))\r\n    ) {\r\n      var textStrokeSymbolizer = {\r\n        stroke: {\r\n          styling: {\r\n            stroke: symbolizer.fill.styling.fill,\r\n            strokeOpacity: symbolizer.fill.styling.fillOpacity,\r\n          },\r\n        },\r\n      };\r\n      applyDynamicStrokeStyling(\r\n        olText,\r\n        textStrokeSymbolizer,\r\n        feature,\r\n        getProperty\r\n      );\r\n    }\r\n\r\n    // Halo fill has to be applied as olText fill.\r\n    if (\r\n      symbolizer.halo &&\r\n      symbolizer.halo.fill &&\r\n      symbolizer.halo.fill.styling &&\r\n      (isDynamicExpression(symbolizer.halo.fill.styling.fill) ||\r\n        isDynamicExpression(symbolizer.halo.fill.styling.fillOpacity))\r\n    ) {\r\n      applyDynamicFillStyling(olText, symbolizer.halo, feature, getProperty);\r\n    }\r\n\r\n    // Halo radius has to be applied as olText.stroke width.\r\n    if (symbolizer.halo && isDynamicExpression(symbolizer.halo.radius)) {\r\n      var haloRadius = evaluate(\r\n        symbolizer.halo.radius,\r\n        feature,\r\n        getProperty,\r\n        1.0\r\n      );\r\n      var olStroke = olText.getStroke();\r\n      if (olStroke) {\r\n        var haloStrokeWidth =\r\n          (haloRadius === 2 || haloRadius === 4\r\n            ? haloRadius - 0.00001\r\n            : haloRadius) * 2;\r\n        olStroke.setWidth(haloStrokeWidth);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\n\n  var defaultMarkFill = getSimpleFill({ styling: { fill: '#888888' } });\r\n  var defaultMarkStroke = getSimpleStroke({ styling: { stroke: {} } });\r\n\r\n  /**\r\n   * @private\r\n   * @param  {PointSymbolizer} pointsymbolizer [description]\r\n   * @return {object} openlayers style\r\n   */\r\n  function pointStyle(pointsymbolizer) {\r\n    var style$1 = pointsymbolizer.graphic;\r\n\r\n    // If the point size is a dynamic expression, use the default point size and update in-place later.\r\n    var pointSizeValue = evaluate(style$1.size, null, null, DEFAULT_MARK_SIZE);\r\n\r\n    // If the point rotation is a dynamic expression, use 0 as default rotation and update in-place later.\r\n    var rotationDegrees = evaluate(style$1.rotation, null, null, 0.0);\r\n\r\n    if (style$1.externalgraphic && style$1.externalgraphic.onlineresource) {\r\n      // For external graphics: the default size is the native image size.\r\n      // In that case, set pointSizeValue to null, so no scaling is calculated for the image.\r\n      if (!style$1.size) {\r\n        pointSizeValue = null;\r\n      }\r\n\r\n      var imageUrl = style$1.externalgraphic.onlineresource;\r\n\r\n      // Use fallback point styles when image hasn't been loaded yet.\r\n      switch (getImageLoadingState(imageUrl)) {\r\n        case IMAGE_LOADED:\r\n          return createCachedImageStyle(\r\n            imageUrl,\r\n            pointSizeValue,\r\n            rotationDegrees\r\n          );\r\n        case IMAGE_LOADING:\r\n          return imageLoadingPointStyle;\r\n        case IMAGE_ERROR:\r\n          return imageErrorPointStyle;\r\n        default:\r\n          // A symbolizer should have loading state metadata, but return IMAGE_LOADING just in case.\r\n          return imageLoadingPointStyle;\r\n      }\r\n    }\r\n\r\n    if (style$1.mark) {\r\n      var ref = style$1.mark;\n      var wellknownname = ref.wellknownname;\r\n      var olFill = getSimpleFill(style$1.mark.fill);\r\n      var olStroke = getSimpleStroke(style$1.mark.stroke);\r\n\r\n      return new style.Style({\r\n        // Note: size will be set dynamically later.\r\n        image: getWellKnownSymbol(\r\n          wellknownname,\r\n          pointSizeValue,\r\n          olStroke,\r\n          olFill,\r\n          rotationDegrees\r\n        ),\r\n      });\r\n    }\r\n\r\n    // SLD spec: when no ExternalGraphic or Mark is specified,\r\n    // use a square of 6 pixels with 50% gray fill and a black outline.\r\n    return new style.Style({\r\n      image: getWellKnownSymbol(\r\n        'square',\r\n        pointSizeValue,\r\n        defaultMarkStroke,\r\n        defaultMarkFill,\r\n        rotationDegrees\r\n      ),\r\n    });\r\n  }\r\n\r\n  var cachedPointStyle = memoizeStyleFunction(pointStyle);\r\n\r\n  /**\r\n   * @private\r\n   * Get an OL point style instance for a feature according to a symbolizer.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @param {ol/Feature} feature OpenLayers Feature.\r\n   * @param {Function} getProperty A property getter: (feature, propertyName) => property value.\r\n   * @returns {ol/Style} OpenLayers style instance.\r\n   */\r\n  function getPointStyle(symbolizer, feature, getProperty) {\r\n    // According to SLD spec, when a point symbolizer has no Graphic, nothing will be rendered.\r\n    if (!(symbolizer && symbolizer.graphic)) {\r\n      return emptyStyle;\r\n    }\r\n\r\n    var olStyle = cachedPointStyle(symbolizer);\r\n\r\n    // Reset previous calculated point geometry left by evaluating point style for a line or polygon feature.\r\n    olStyle.setGeometry(null);\r\n\r\n    var olImage = olStyle.getImage();\r\n\r\n    // Apply dynamic values to the cached OL style instance before returning it.\r\n\r\n    var graphic = symbolizer.graphic;\r\n\r\n    // Calculate size and rotation values first.\r\n    var size = graphic.size;\n    var rotation = graphic.rotation;\r\n    var sizeValue =\r\n      Number(evaluate(size, feature, getProperty)) || DEFAULT_MARK_SIZE;\r\n    var rotationDegrees =\r\n      Number(evaluate(rotation, feature, getProperty)) || 0.0;\r\n\r\n    // --- Update dynamic size ---\r\n    if (isDynamicExpression(size)) {\r\n      if (graphic.externalgraphic && graphic.externalgraphic.onlineresource) {\r\n        var height = olImage.getSize()[1];\r\n        var scale = sizeValue / height || 1;\r\n        olImage.setScale(scale);\r\n      } else if (graphic.mark && graphic.mark.wellknownname === 'circle') {\r\n        // Note: only ol/style/Circle has a setter for radius. RegularShape does not.\r\n        olImage.setRadius(sizeValue * 0.5);\r\n      } else {\r\n        // For a non-Circle RegularShape, create a new olImage in order to update the size.\r\n        olImage = getWellKnownSymbol(\r\n          (graphic.mark && graphic.mark.wellknownname) || 'square',\r\n          sizeValue,\r\n          // Note: re-use stroke and fill instances for a (small?) performance gain.\r\n          olImage.getStroke(),\r\n          olImage.getFill(),\r\n          rotationDegrees\r\n        );\r\n        olStyle.setImage(olImage);\r\n      }\r\n    }\r\n\r\n    // --- Update dynamic rotation ---\r\n    if (isDynamicExpression(rotation)) {\r\n      // Note: OL angles are in radians.\r\n      var rotationRadians = (Math.PI * rotationDegrees) / 180.0;\r\n      olImage.setRotation(rotationRadians);\r\n    }\r\n\r\n    // --- Update stroke and fill ---\r\n    if (graphic.mark) {\r\n      var strokeChanged = applyDynamicStrokeStyling(\r\n        olImage,\r\n        graphic.mark,\r\n        feature,\r\n        getProperty\r\n      );\r\n\r\n      var fillChanged = applyDynamicFillStyling(\r\n        olImage,\r\n        graphic.mark,\r\n        feature,\r\n        getProperty\r\n      );\r\n\r\n      if (strokeChanged || fillChanged) {\r\n        // Create a new olImage in order to force a re-render to see the style changes.\r\n        olImage = getWellKnownSymbol(\r\n          (graphic.mark && graphic.mark.wellknownname) || 'square',\r\n          sizeValue,\r\n          olImage.getStroke(),\r\n          olImage.getFill(),\r\n          rotationDegrees\r\n        );\r\n        olStyle.setImage(olImage);\r\n      }\r\n    }\r\n\r\n    // Update displacement\r\n    var displacement = graphic.displacement;\r\n    if (displacement) {\r\n      var displacementx = displacement.displacementx;\n      var displacementy = displacement.displacementy;\r\n      if (\r\n        typeof displacementx !== 'undefined' ||\r\n        typeof displacementy !== 'undefined'\r\n      ) {\r\n        var dx = evaluate(displacementx, feature, getProperty) || 0.0;\r\n        var dy = evaluate(displacementy, feature, getProperty) || 0.0;\r\n        if (dx !== 0.0 || dy !== 0.0) {\r\n          olImage.setDisplacement([dx, dy]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return olStyle;\r\n  }\n\n  function calculatePointsDistance(coord1, coord2) {\r\n    var dx = coord1[0] - coord2[0];\r\n    var dy = coord1[1] - coord2[1];\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  }\r\n\r\n  function calculateSplitPointCoords(startCoord, endCoord, distanceFromStart) {\r\n    var distanceBetweenNodes = calculatePointsDistance(startCoord, endCoord);\r\n    var d = distanceFromStart / distanceBetweenNodes;\r\n    var x = startCoord[0] + (endCoord[0] - startCoord[0]) * d;\r\n    var y = startCoord[1] + (endCoord[1] - startCoord[1]) * d;\r\n    return [x, y];\r\n  }\r\n\r\n  /**\r\n   * Calculate the angle of a vector in radians clockwise from the positive x-axis.\r\n   * Example: (0,0) -> (1,1) --> -pi/4 radians.\r\n   * @private\r\n   * @param {Array<number>} p1 Start of the line segment as [x,y].\r\n   * @param {Array<number>} p2 End of the line segment as [x,y].\r\n   * @param {boolean} invertY If true, calculate with Y-axis pointing downwards.\r\n   * @returns {number} Angle in radians, clockwise from the positive x-axis.\r\n   */\r\n  function calculateAngle(p1, p2, invertY) {\r\n    var dX = p2[0] - p1[0];\r\n    var dY = p2[1] - p1[1];\r\n    var angle = -Math.atan2(invertY ? -dY : dY, dX);\r\n    return angle;\r\n  }\r\n\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  function splitLineString(geometry, graphicSpacing, _options) {\n    if ( _options === void 0 ) _options = {};\n\r\n    var defaultOptions = {\r\n      minimumGraphicSpacing: 0,\r\n    };\r\n\r\n    var splitOptions = Object.assign(defaultOptions, _options);\r\n\r\n    var coords = geometry.getCoordinates();\r\n\r\n    // Handle degenerate cases.\r\n    // LineString without points\r\n    if (coords.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    // LineString containing only one point.\r\n    if (coords.length === 1) {\r\n      return [( coords[0] ).concat( [0])];\r\n    }\r\n\r\n    // Handle first point placement case.\r\n    if (splitOptions.placement === PLACEMENT_FIRSTPOINT) {\r\n      var p1 = coords[0];\r\n      var p2 = coords[1];\r\n      return [[p1[0], p1[1], calculateAngle(p1, p2, splitOptions.invertY)]];\r\n    }\r\n\r\n    // Handle last point placement case.\r\n    if (splitOptions.placement === PLACEMENT_LASTPOINT) {\r\n      var p1$1 = coords[coords.length - 2];\r\n      var p2$1 = coords[coords.length - 1];\r\n      return [[p2$1[0], p2$1[1], calculateAngle(p1$1, p2$1, splitOptions.invertY)]];\r\n    }\r\n\r\n    var totalLength = geometry.getLength();\r\n    var gapSize = Math.max(graphicSpacing, splitOptions.minimumGraphicSpacing);\r\n\r\n    // Measure along line to place the next point.\r\n    // Can start at a nonzero value if initialGap is used.\r\n    var nextPointMeasure = splitOptions.initialGap || 0.0;\r\n    var pointIndex = 0;\r\n    var currentSegmentStart = [].concat( coords[0] );\r\n    var currentSegmentEnd = [].concat( coords[1] );\r\n\r\n    // Cumulative measure of the line where each segment's length is added in succession.\r\n    var cumulativeMeasure = 0;\r\n\r\n    var splitPoints = [];\r\n\r\n    // Keep adding points until the next point measure lies beyond the line length.\r\n    while (nextPointMeasure <= totalLength) {\r\n      var currentSegmentLength = calculatePointsDistance(\r\n        currentSegmentStart,\r\n        currentSegmentEnd\r\n      );\r\n      if (cumulativeMeasure + currentSegmentLength < nextPointMeasure) {\r\n        // If the current segment is too short to reach the next point, go to the next segment.\r\n        if (pointIndex === coords.length - 2) {\r\n          // Stop if there is no next segment to process.\r\n          break;\r\n        }\r\n        currentSegmentStart[0] = currentSegmentEnd[0];\r\n        currentSegmentStart[1] = currentSegmentEnd[1];\r\n        currentSegmentEnd[0] = coords[pointIndex + 2][0];\r\n        currentSegmentEnd[1] = coords[pointIndex + 2][1];\r\n        pointIndex += 1;\r\n        cumulativeMeasure += currentSegmentLength;\r\n      } else {\r\n        // Next point lies on the current segment.\r\n        // Calculate its position and increase next point measure by gap size.\r\n        var distanceFromSegmentStart = nextPointMeasure - cumulativeMeasure;\r\n        var splitPointCoords = calculateSplitPointCoords(\r\n          currentSegmentStart,\r\n          currentSegmentEnd,\r\n          distanceFromSegmentStart\r\n        );\r\n        var angle = calculateAngle(\r\n          currentSegmentStart,\r\n          currentSegmentEnd,\r\n          splitOptions.invertY\r\n        );\r\n        if (\r\n          !splitOptions.extent ||\r\n          extent.containsCoordinate(splitOptions.extent, splitPointCoords)\r\n        ) {\r\n          splitPointCoords.push(angle);\r\n          splitPoints.push(splitPointCoords);\r\n        }\r\n        nextPointMeasure += gapSize;\r\n      }\r\n    }\r\n\r\n    return splitPoints;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Get the point located at the middle along a line string.\r\n   * @param {ol/geom/LineString} geometry An OpenLayers LineString geometry.\r\n   * @returns {Array<number>} An [x, y] coordinate array.\r\n   */\r\n  function getLineMidpoint(geometry) {\r\n    // Use the splitpoints routine to distribute points over the line with\r\n    // a point-to-point distance along the line equal to half line length.\r\n    // This results in three points. Take the middle point.\r\n    var splitPoints = splitLineString(geometry, geometry.getLength() / 2);\r\n    var ref = splitPoints[1];\n    var x = ref[0];\n    var y = ref[1];\r\n    return [x, y];\r\n  }\n\n  // A flag to prevent multiple renderer patches.\r\n  var rendererPatched = false;\r\n  function patchRenderer(renderer) {\r\n    if (rendererPatched) {\r\n      return;\r\n    }\r\n\r\n    // Add setImageStyle2 function that does the same as setImageStyle, except that it sets rotation\r\n    // to a given value instead of taking it from imageStyle.getRotation().\r\n    // This fixes a problem with re-use of the (cached) image style instance when drawing\r\n    // many points inside a single line feature that are aligned according to line segment direction.\r\n    var rendererProto = Object.getPrototypeOf(renderer);\r\n    // eslint-disable-next-line\r\n    rendererProto.setImageStyle2 = function (imageStyle, rotation) {\r\n      // First call the original setImageStyle method.\r\n      rendererProto.setImageStyle.call(this, imageStyle);\r\n\r\n      // Then set rotation according to the given parameter.\r\n      // This overrides the following line in setImageStyle:\r\n      // this.imageRotation_ = imageStyle.getRotation()\r\n      if (this.image_) {\r\n        this.imageRotation_ = rotation;\r\n      }\r\n    };\r\n\r\n    rendererPatched = true;\r\n  }\r\n\r\n  /**\r\n   * Directly render graphic stroke marks for a line onto canvas.\r\n   * @private\r\n   * @param {ol/render/canvas/Immediate} render Instance of CanvasImmediateRenderer used to paint stroke marks directly to the canvas.\r\n   * @param {Array<Array<number>>} pixelCoords A line as array of [x,y] point coordinate arrays in pixel space.\r\n   * @param {number} graphicSpacing The center-to-center distance in pixels for stroke marks distributed along the line.\r\n   * @param {ol/style/Style} pointStyle OpenLayers style instance used for rendering stroke marks.\r\n   * @param {number} pixelRatio Ratio of device pixels to css pixels.\r\n   * @returns {void}\r\n   */\r\n  function renderStrokeMarks(\r\n    render,\r\n    pixelCoords,\r\n    graphicSpacing,\r\n    pointStyle,\r\n    pixelRatio,\r\n    options\r\n  ) {\r\n    if (!pixelCoords) {\r\n      return;\r\n    }\r\n\r\n    // The first element of the first pixelCoords entry should be a number (x-coordinate of first point).\r\n    // If it's an array instead, then we're dealing with a multiline or (multi)polygon.\r\n    // In that case, recursively call renderStrokeMarks for each child coordinate array.\r\n    if (Array.isArray(pixelCoords[0][0])) {\r\n      pixelCoords.forEach(function (pixelCoordsChildArray) {\r\n        renderStrokeMarks(\r\n          render,\r\n          pixelCoordsChildArray,\r\n          graphicSpacing,\r\n          pointStyle,\r\n          pixelRatio,\r\n          options\r\n        );\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Line should be a proper line with at least two coordinates.\r\n    if (pixelCoords.length < 2) {\r\n      return;\r\n    }\r\n\r\n    // Don't render anything when the pointStyle has no image.\r\n    var image = pointStyle.getImage();\r\n    if (!image) {\r\n      return;\r\n    }\r\n\r\n    var splitPoints = splitLineString(\r\n      new geom.LineString(pixelCoords),\r\n      graphicSpacing * pixelRatio,\r\n      {\r\n        invertY: true, // Pixel y-coordinates increase downwards in screen space.\r\n        extent: render.extent_,\r\n        placement: options.placement,\r\n        initialGap: options.initialGap,\r\n        // Use graphic spacing of at least 0.1 px to prevent an infinite number of split points happening by accident.\r\n        minimumGraphicSpacing: 0.1,\r\n      }\r\n    );\r\n\r\n    splitPoints.forEach(function (point) {\r\n      var splitPointAngle = image.getRotation() + point[2];\r\n      render.setImageStyle2(image, splitPointAngle);\r\n      render.drawPoint(new geom.Point([point[0] / pixelRatio, point[1] / pixelRatio]));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a renderer function for renderining GraphicStroke marks\r\n   * to be used inside an OpenLayers Style.renderer function.\r\n   * @private\r\n   * @param {LineSymbolizer} linesymbolizer SLD line symbolizer object.\r\n   * @param {Function} getProperty A property getter: (feature, propertyName) => property value.\r\n   * @returns {ol/style/Style~RenderFunction} A style renderer function (pixelCoords, renderState) => void.\r\n   */\r\n  function getGraphicStrokeRenderer(linesymbolizer, getProperty) {\r\n    if (!(linesymbolizer.stroke && linesymbolizer.stroke.graphicstroke)) {\r\n      throw new Error(\r\n        'getGraphicStrokeRenderer error: symbolizer.stroke.graphicstroke null or undefined.'\r\n      );\r\n    }\r\n\r\n    var ref = linesymbolizer.stroke;\n    var graphicstroke = ref.graphicstroke;\r\n\r\n    var options = {\r\n      placement: PLACEMENT_DEFAULT,\r\n    };\r\n\r\n    // QGIS vendor options to override graphicstroke symbol placement.\r\n    if (linesymbolizer.vendoroptions) {\r\n      if (linesymbolizer.vendoroptions.placement === 'firstPoint') {\r\n        options.placement = PLACEMENT_FIRSTPOINT;\r\n      } else if (linesymbolizer.vendoroptions.placement === 'lastPoint') {\r\n        options.placement = PLACEMENT_LASTPOINT;\r\n      }\r\n    }\r\n\r\n    return function (pixelCoords, renderState) {\r\n      // Abort when feature geometry is (Multi)Point.\r\n      var geometryType = renderState.feature.getGeometry().getType();\r\n      if (geometryType === 'Point' || geometryType === 'MultiPoint') {\r\n        return;\r\n      }\r\n\r\n      var pixelRatio = renderState.pixelRatio || 1.0;\r\n\r\n      // TODO: Error handling, alternatives, etc.\r\n      var render$1 = render.toContext(renderState.context);\r\n      patchRenderer(render$1);\r\n\r\n      var defaultGraphicSize = DEFAULT_MARK_SIZE;\r\n      if (graphicstroke.graphic && graphicstroke.graphic.externalgraphic) {\r\n        defaultGraphicSize = DEFAULT_EXTERNALGRAPHIC_SIZE;\r\n      }\r\n\r\n      var pointStyle = getPointStyle(\r\n        graphicstroke,\r\n        renderState.feature,\r\n        getProperty\r\n      );\r\n\r\n      // Calculate graphic spacing.\r\n      // Graphic spacing equals the center-to-center distance of graphics along the line.\r\n      // If there's no gap, segment length will be equal to graphic size.\r\n      var graphicSizeExpression =\r\n        (graphicstroke.graphic && graphicstroke.graphic.size) ||\r\n        defaultGraphicSize;\r\n      var graphicSize = Number(\r\n        evaluate(\r\n          graphicSizeExpression,\r\n          renderState.feature,\r\n          getProperty,\r\n          defaultGraphicSize\r\n        )\r\n      );\r\n\r\n      var graphicSpacing = calculateGraphicSpacing(linesymbolizer, graphicSize);\r\n      options.initialGap = getInitialGapSize(linesymbolizer);\r\n\r\n      renderStrokeMarks(\r\n        render$1,\r\n        pixelCoords,\r\n        graphicSpacing,\r\n        pointStyle,\r\n        pixelRatio,\r\n        options\r\n      );\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create an OpenLayers style for rendering line symbolizers with a GraphicStroke.\r\n   * @private\r\n   * @param {LineSymbolizer} linesymbolizer SLD line symbolizer object.\r\n   * @param {Function} getProperty A property getter: (feature, propertyName) => property value.\r\n   * @returns {ol/style/Style} An OpenLayers style instance.\r\n   */\r\n  function getGraphicStrokeStyle(linesymbolizer, getProperty) {\r\n    if (!(linesymbolizer.stroke && linesymbolizer.stroke.graphicstroke)) {\r\n      throw new Error(\r\n        'getGraphicStrokeStyle error: linesymbolizer.stroke.graphicstroke null or undefined.'\r\n      );\r\n    }\r\n\r\n    return new style.Style({\r\n      renderer: getGraphicStrokeRenderer(linesymbolizer, getProperty),\r\n    });\r\n  }\n\n  /**\r\n   * @private\r\n   * @param  {object} symbolizer SLD symbolizer object.\r\n   * @return {object} OpenLayers style instance corresponding to the stroke of the given symbolizer.\r\n   */\r\n  function lineStyle(symbolizer) {\r\n    if (symbolizer.stroke && symbolizer.stroke.graphicstroke) {\r\n      return getGraphicStrokeStyle(symbolizer);\r\n    }\r\n\r\n    return new style.Style({\r\n      stroke: getSimpleStroke(symbolizer.stroke),\r\n    });\r\n  }\r\n\r\n  var cachedLineStyle = memoizeStyleFunction(lineStyle);\r\n\r\n  /**\r\n   * @private\r\n   * Get an OL line style instance for a feature according to a symbolizer.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @returns {ol/Style} OpenLayers style instance.\r\n   */\r\n  function getLineStyle(symbolizer, feature, getProperty) {\r\n    var olStyle = cachedLineStyle(symbolizer);\r\n\r\n    // Apply dynamic properties.\r\n    applyDynamicStrokeStyling(olStyle, symbolizer, feature, getProperty);\r\n\r\n    return olStyle;\r\n  }\n\n  var dense1Pixels = [[1, 1]];\r\n  var dense2Pixels = [\r\n    [0, 0],\r\n    [2, 2] ];\r\n  var dense3Pixels = [\r\n    [0, 0],\r\n    [1, 1],\r\n    [2, 2],\r\n    [3, 3],\r\n    [2, 0],\r\n    [0, 2] ];\r\n  var dense4Pixels = [\r\n    [0, 0],\r\n    [1, 1] ];\r\n\r\n  function fillPixels(context, xyCoords) {\r\n    xyCoords.forEach(function (ref) {\n      var x = ref[0];\n      var y = ref[1];\n\r\n      context.fillRect(x, y, 1, 1);\r\n    });\r\n  }\r\n\r\n  function clearPixels(context, xyCoords) {\r\n    xyCoords.forEach(function (ref) {\n      var x = ref[0];\n      var y = ref[1];\n\r\n      context.clearRect(x, y, 1, 1);\r\n    });\r\n  }\r\n\r\n  function createCanvasPattern(canvas) {\r\n    var context = canvas.getContext('2d');\r\n\r\n    // Scale pixel pattern according to device pixel ratio if necessary.\r\n    if (has.DEVICE_PIXEL_RATIO === 1) {\r\n      return context.createPattern(canvas, 'repeat');\r\n    }\r\n\r\n    var scaledCanvas = document.createElement('canvas');\r\n    scaledCanvas.width = canvas.width * has.DEVICE_PIXEL_RATIO;\r\n    scaledCanvas.height = canvas.height * has.DEVICE_PIXEL_RATIO;\r\n\r\n    var scaledContext = scaledCanvas.getContext('2d');\r\n    scaledContext.imageSmoothingEnabled = false;\r\n    scaledContext.drawImage(\r\n      canvas,\r\n      0,\r\n      0,\r\n      canvas.width,\r\n      canvas.height,\r\n      0,\r\n      0,\r\n      scaledCanvas.width,\r\n      scaledCanvas.height\r\n    );\r\n\r\n    return scaledContext.createPattern(scaledCanvas, 'repeat');\r\n  }\r\n\r\n  function createPixelPattern(size, color, pixels) {\r\n    var canvas = document.createElement('canvas');\r\n    canvas.width = size;\r\n    canvas.height = size;\r\n    var context = canvas.getContext('2d');\r\n\r\n    context.fillStyle = color;\r\n    fillPixels(context, pixels);\r\n\r\n    return createCanvasPattern(canvas);\r\n  }\r\n\r\n  function createInversePixelPattern(size, color, pixels) {\r\n    var canvas = document.createElement('canvas');\r\n    canvas.width = size;\r\n    canvas.height = size;\r\n    var context = canvas.getContext('2d');\r\n\r\n    context.fillStyle = color;\r\n    context.fillRect(0, 0, size, size);\r\n    clearPixels(context, pixels);\r\n\r\n    return createCanvasPattern(canvas);\r\n  }\r\n\r\n  function getQGISBrushFill(brushName, fillColor) {\r\n    var fill = null;\r\n    switch (brushName) {\r\n      case 'brush://dense1':\r\n        fill = new style.Fill({\r\n          color: createInversePixelPattern(4, fillColor, dense1Pixels),\r\n        });\r\n        break;\r\n\r\n      case 'brush://dense2':\r\n        fill = new style.Fill({\r\n          color: createInversePixelPattern(4, fillColor, dense2Pixels),\r\n        });\r\n        break;\r\n\r\n      case 'brush://dense3':\r\n        fill = new style.Fill({\r\n          color: createInversePixelPattern(4, fillColor, dense3Pixels),\r\n        });\r\n        break;\r\n\r\n      case 'brush://dense4':\r\n        fill = new style.Fill({\r\n          color: createPixelPattern(2, fillColor, dense4Pixels),\r\n        });\r\n        break;\r\n\r\n      case 'brush://dense5':\r\n        fill = new style.Fill({\r\n          color: createPixelPattern(4, fillColor, dense3Pixels),\r\n        });\r\n        break;\r\n\r\n      case 'brush://dense6':\r\n        fill = new style.Fill({\r\n          color: createPixelPattern(4, fillColor, dense2Pixels),\r\n        });\r\n        break;\r\n\r\n      case 'brush://dense7':\r\n        fill = new style.Fill({\r\n          color: createPixelPattern(4, fillColor, dense1Pixels),\r\n        });\r\n        break;\r\n\r\n      default:\r\n        fill = new style.Fill({ color: fillColor });\r\n        break;\r\n    }\r\n\r\n    return fill;\r\n  }\n\n  /* eslint-disable function-call-argument-newline */\r\n\r\n  function createPattern(graphic) {\r\n    var ref = getCachedImage(\r\n      graphic.externalgraphic.onlineresource\r\n    );\n    var image = ref.image;\n    var width = ref.width;\n    var height = ref.height;\r\n    var cnv = document.createElement('canvas');\r\n    var ctx = cnv.getContext('2d');\r\n\r\n    // Calculate image scale factor.\r\n    var imageRatio = has.DEVICE_PIXEL_RATIO;\r\n    if (graphic.size && height !== graphic.size) {\r\n      imageRatio *= graphic.size / height;\r\n    }\r\n\r\n    // Draw image to canvas directly if no scaling necessary.\r\n    if (imageRatio === 1) {\r\n      return ctx.createPattern(image, 'repeat');\r\n    }\r\n\r\n    // Scale the image by drawing onto a temp canvas.\r\n    var tempCanvas = document.createElement('canvas');\r\n    var tCtx = tempCanvas.getContext('2d');\r\n    tempCanvas.width = width * imageRatio;\r\n    tempCanvas.height = height * imageRatio;\r\n    // prettier-ignore\r\n    tCtx.drawImage(\r\n      image,\r\n      0, 0, width, height,\r\n      0, 0, width * imageRatio, height * imageRatio\r\n    );\r\n\r\n    return ctx.createPattern(tempCanvas, 'repeat');\r\n  }\r\n\r\n  function getExternalGraphicFill(symbolizer) {\r\n    var ref = symbolizer.fill.graphicfill;\n    var graphic = ref.graphic;\r\n    var fillImageUrl = graphic.externalgraphic.onlineresource;\r\n\r\n    // Use fallback style when graphicfill image hasn't been loaded yet.\r\n    switch (getImageLoadingState(fillImageUrl)) {\r\n      case IMAGE_LOADED:\r\n        return new style.Fill({\r\n          color: createPattern(symbolizer.fill.graphicfill.graphic),\r\n        });\r\n      case IMAGE_LOADING:\r\n        return imageLoadingPolygonStyle.getFill();\r\n      case IMAGE_ERROR:\r\n        return imageErrorPolygonStyle.getFill();\r\n      default:\r\n        // Load state of an image should be known at this time, but return 'loading' style as fallback.\r\n        return imageLoadingPolygonStyle.getFill();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scale mark graphic fill symbol with given scale factor to improve mark fill rendering.\r\n   * Scale factor will be applied to stroke width depending on the original value for visual fidelity.\r\n   * @private\r\n   * @param {object} graphicfill GraphicFill symbolizer object.\r\n   * @param {number} scaleFactor Scale factor.\r\n   * @returns {object} A new GraphifFill symbolizer object with scale factor applied.\r\n   */\r\n  function scaleMarkGraphicFill(graphicfill, scaleFactor) {\r\n    if (!graphicfill.graphic) {\r\n      return graphicfill;\r\n    }\r\n\r\n    // Create a deep clone of the original symbolizer.\r\n    var newFill = JSON.parse(JSON.stringify(graphicfill));\r\n    var graphic = newFill.graphic;\r\n    var oriSize = Number(graphic.size) || DEFAULT_MARK_SIZE;\r\n    graphic.size = scaleFactor * oriSize;\r\n    var mark = graphic.mark;\r\n    if (mark && mark.stroke) {\r\n      // Apply SLD defaults to stroke parameters.\r\n      // Todo: do this at the SLDReader parsing stage already.\r\n      if (!mark.stroke.styling) {\r\n        mark.stroke.styling = {\r\n          stroke: '#000000',\r\n          strokeWidth: 1.0,\r\n        };\r\n      }\r\n\r\n      if (!mark.stroke.styling.strokeWidth) {\r\n        mark.stroke.styling.strokeWidth =\r\n          Number(mark.stroke.styling.strokeWidth) || 1;\r\n      }\r\n\r\n      // If original stroke width is 1 or less, do not scale it.\r\n      // This gives better visual results than using a stroke width of 2 and downsizing.\r\n      var oriStrokeWidth = mark.stroke.styling.strokeWidth;\r\n      if (oriStrokeWidth > 1) {\r\n        mark.stroke.styling.strokeWidth = scaleFactor * oriStrokeWidth;\r\n      }\r\n    }\r\n\r\n    return newFill;\r\n  }\r\n\r\n  function getMarkGraphicFill(symbolizer) {\r\n    var ref = symbolizer.fill;\n    var graphicfill = ref.graphicfill;\r\n    var graphic = graphicfill.graphic;\r\n    var mark = graphic.mark;\r\n    var ref$1 = mark || {};\n    var wellknownname = ref$1.wellknownname;\r\n\r\n    // If it's a QGIS brush fill, use direct pixel manipulation to create the fill.\r\n    if (wellknownname && wellknownname.indexOf('brush://') === 0) {\r\n      var brushFillColor = '#000000';\r\n      if (mark.fill && mark.fill.styling && mark.fill.styling.fill) {\r\n        brushFillColor = mark.fill.styling.fill;\r\n      }\r\n      return getQGISBrushFill(wellknownname, brushFillColor);\r\n    }\r\n\r\n    // Create mark graphic fill by drawing a single mark on a square canvas.\r\n    var graphicSize = Number(graphic.size) || DEFAULT_MARK_SIZE;\r\n    var canvasSize = graphicSize * has.DEVICE_PIXEL_RATIO;\r\n    var fill = null;\r\n\r\n    // The graphic symbol will be rendered at a larger size and then scaled back to the graphic size.\r\n    // This is done to mitigate visual artifacts that occur when drawing between pixels.\r\n    var scaleFactor = 2.0;\r\n\r\n    try {\r\n      var scaledCanvas = document.createElement('canvas');\r\n      scaledCanvas.width = canvasSize * scaleFactor;\r\n      scaledCanvas.height = canvasSize * scaleFactor;\r\n      var context = scaledCanvas.getContext('2d');\r\n\r\n      // Point symbolizer function expects an object with a .graphic property.\r\n      // The point symbolizer is stored as graphicfill in the polygon symbolizer.\r\n      var scaledGraphicFill = scaleMarkGraphicFill(graphicfill, scaleFactor);\r\n      var pointStyle = getPointStyle(scaledGraphicFill);\r\n\r\n      // Let OpenLayers draw a point with the given point style on the temp canvas.\r\n      // Note: OL rendering context size params are always in css pixels, while the temp canvas may\r\n      // be larger depending on the device pixel ratio.\r\n      var olContext = render.toContext(context, {\r\n        size: [graphicSize * scaleFactor, graphicSize * scaleFactor],\r\n      });\r\n\r\n      // Disable image smoothing to ensure crisp graphic fill pattern.\r\n      context.imageSmoothingEnabled = false;\r\n\r\n      // Let OpenLayers draw the symbol to the canvas directly.\r\n      olContext.setStyle(pointStyle);\r\n\r\n      var centerX = scaleFactor * (graphicSize / 2);\r\n      var centerY = scaleFactor * (graphicSize / 2);\r\n      olContext.drawGeometry(new geom.Point([centerX, centerY]));\r\n\r\n      // For (back)slash marks, draw extra copies to the sides to ensure complete tiling coverage when used as a pattern.\r\n      // S = symbol, C = copy.\r\n      //     +---+\r\n      //     | C |\r\n      // +---+---+---+\r\n      // | C | S | C |\r\n      // +---+---+---+\r\n      //     | C |\r\n      //     +---+\r\n      if (wellknownname && wellknownname.indexOf('slash') > -1) {\r\n        olContext.drawGeometry(\r\n          new geom.Point([centerX - scaleFactor * graphicSize, centerY])\r\n        );\r\n        olContext.drawGeometry(\r\n          new geom.Point([centerX + scaleFactor * graphicSize, centerY])\r\n        );\r\n        olContext.drawGeometry(\r\n          new geom.Point([centerX, centerY - scaleFactor * graphicSize])\r\n        );\r\n        olContext.drawGeometry(\r\n          new geom.Point([centerX, centerY + scaleFactor * graphicSize])\r\n        );\r\n      }\r\n\r\n      // Downscale the drawn mark back to original graphic size.\r\n      var patternCanvas = document.createElement('canvas');\r\n      patternCanvas.width = canvasSize;\r\n      patternCanvas.height = canvasSize;\r\n      var patternContext = patternCanvas.getContext('2d');\r\n      patternContext.drawImage(\r\n        scaledCanvas,\r\n        0,\r\n        0,\r\n        canvasSize * scaleFactor,\r\n        canvasSize * scaleFactor,\r\n        0,\r\n        0,\r\n        canvasSize,\r\n        canvasSize\r\n      );\r\n\r\n      // Turn the generated image into a repeating pattern, just like a regular image fill.\r\n      var pattern = patternContext.createPattern(patternCanvas, 'repeat');\r\n      fill = new style.Fill({\r\n        color: pattern,\r\n      });\r\n    } catch (e) {\r\n      // Default black fill as backup plan.\r\n      fill = new style.Fill({\r\n        color: '#000000',\r\n      });\r\n    }\r\n\r\n    return fill;\r\n  }\r\n\r\n  function polygonStyle(symbolizer) {\r\n    var fillImageUrl =\r\n      symbolizer.fill &&\r\n      symbolizer.fill.graphicfill &&\r\n      symbolizer.fill.graphicfill.graphic &&\r\n      symbolizer.fill.graphicfill.graphic.externalgraphic &&\r\n      symbolizer.fill.graphicfill.graphic.externalgraphic.onlineresource;\r\n\r\n    var fillMark =\r\n      symbolizer.fill &&\r\n      symbolizer.fill.graphicfill &&\r\n      symbolizer.fill.graphicfill.graphic &&\r\n      symbolizer.fill.graphicfill.graphic.mark;\r\n\r\n    var polygonFill = null;\r\n    if (fillImageUrl) {\r\n      polygonFill = getExternalGraphicFill(symbolizer);\r\n    } else if (fillMark) {\r\n      polygonFill = getMarkGraphicFill(symbolizer);\r\n    } else {\r\n      polygonFill = getSimpleFill(symbolizer.fill);\r\n    }\r\n\r\n    // When a polygon has a GraphicStroke, use a custom renderer to combine\r\n    // GraphicStroke with fill. This is needed because a custom renderer\r\n    // ignores any stroke, fill and image present in the style.\r\n    if (symbolizer.stroke && symbolizer.stroke.graphicstroke) {\r\n      var renderGraphicStroke = getGraphicStrokeRenderer(symbolizer);\r\n      return new style.Style({\r\n        renderer: function (pixelCoords, renderState) {\r\n          // First render the fill (if any).\r\n          if (polygonFill) {\r\n            var feature = renderState.feature;\n            var context = renderState.context;\r\n            var render$1 = render.toContext(context);\r\n            render$1.setFillStrokeStyle(polygonFill, undefined);\r\n            var geometryType = feature.getGeometry().getType();\r\n            if (geometryType === 'Polygon') {\r\n              render$1.drawPolygon(new geom.Polygon(pixelCoords));\r\n            } else if (geometryType === 'MultiPolygon') {\r\n              render$1.drawMultiPolygon(new geom.MultiPolygon(pixelCoords));\r\n            }\r\n          }\r\n\r\n          // Then, render the graphic stroke.\r\n          renderGraphicStroke(pixelCoords, renderState);\r\n        },\r\n      });\r\n    }\r\n\r\n    var polygonStroke = getSimpleStroke(symbolizer.stroke);\r\n\r\n    return new style.Style({\r\n      fill: polygonFill,\r\n      stroke: polygonStroke,\r\n    });\r\n  }\r\n\r\n  var cachedPolygonStyle = memoizeStyleFunction(polygonStyle);\r\n\r\n  /**\r\n   * @private\r\n   * Get an OL line style instance for a feature according to a symbolizer.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @returns {ol/Style} OpenLayers style instance.\r\n   */\r\n  function getPolygonStyle(symbolizer, feature, getProperty) {\r\n    var olStyle = cachedPolygonStyle(symbolizer);\r\n\r\n    // Apply dynamic properties.\r\n    applyDynamicFillStyling(olStyle, symbolizer, feature, getProperty);\r\n    applyDynamicStrokeStyling(olStyle, symbolizer, feature, getProperty);\r\n\r\n    return olStyle;\r\n  }\n\n  /**\r\n   * @private\r\n   * Get the static OL style instance for a text symbolizer.\r\n   * The text and placement properties will be set on the style object at runtime.\r\n   * @param {object} textsymbolizer SLD text symbolizer object.\r\n   * @return {object} openlayers style\r\n   */\r\n  function textStyle(textsymbolizer) {\r\n    if (!(textsymbolizer && textsymbolizer.label)) {\r\n      return emptyStyle;\r\n    }\r\n\r\n    // If the label is dynamic, set text to empty string.\r\n    // In that case, text will be set at runtime.\r\n    var labelText = evaluate(textsymbolizer.label, null, null, '');\r\n\r\n    var fontStyling = textsymbolizer.font\r\n      ? textsymbolizer.font.styling || {}\r\n      : {};\r\n    var fontFamily = evaluate(fontStyling.fontFamily, null, null, 'sans-serif');\r\n    var fontSize = evaluate(fontStyling.fontSize, null, null, 10);\r\n    var fontStyle = evaluate(fontStyling.fontStyle, null, null, '');\r\n    var fontWeight = evaluate(fontStyling.fontWeight, null, null, '');\r\n    var olFontString = fontStyle + \" \" + fontWeight + \" \" + fontSize + \"px \" + fontFamily;\r\n\r\n    var pointplacement =\r\n      textsymbolizer &&\r\n      textsymbolizer.labelplacement &&\r\n      textsymbolizer.labelplacement.pointplacement\r\n        ? textsymbolizer.labelplacement.pointplacement\r\n        : {};\r\n\r\n    // If rotation is dynamic, default to 0. Rotation will be set at runtime.\r\n    var labelRotationDegrees = evaluate(\r\n      pointplacement.rotation,\r\n      null,\r\n      null,\r\n      0.0\r\n    );\r\n\r\n    var displacement =\r\n      pointplacement && pointplacement.displacement\r\n        ? pointplacement.displacement\r\n        : {};\r\n    var offsetX = evaluate(displacement.displacementx, null, null, 0.0);\r\n    // Positive offsetY shifts the label downwards. Positive displacementY in SLD means shift upwards.\r\n    var offsetY = -evaluate(displacement.displacementy, null, null, 0.0);\r\n\r\n    // OpenLayers does not support fractional alignment, so snap the anchor to the most suitable option.\r\n    var anchorpoint = (pointplacement && pointplacement.anchorpoint) || {};\r\n\r\n    var textAlign = 'center';\r\n    var anchorPointX = evaluate(anchorpoint.anchorpointx, null, null, NaN);\r\n    if (anchorPointX < 0.25) {\r\n      textAlign = 'left';\r\n    } else if (anchorPointX > 0.75) {\r\n      textAlign = 'right';\r\n    }\r\n\r\n    var textBaseline = 'middle';\r\n    var anchorPointY = evaluate(anchorpoint.anchorpointy, null, null, NaN);\r\n    if (anchorPointY < 0.25) {\r\n      textBaseline = 'bottom';\r\n    } else if (anchorPointY > 0.75) {\r\n      textBaseline = 'top';\r\n    }\r\n\r\n    var fillStyling = textsymbolizer.fill ? textsymbolizer.fill.styling : {};\r\n    var textFillColor = evaluate(fillStyling.fill, null, null, '#000000');\r\n    var textFillOpacity = evaluate(fillStyling.fillOpacity, null, null, 1.0);\r\n\r\n    // Assemble text style options.\r\n    var textStyleOptions = {\r\n      text: labelText,\r\n      font: olFontString,\r\n      offsetX: offsetX,\r\n      offsetY: offsetY,\r\n      rotation: (Math.PI * labelRotationDegrees) / 180.0,\r\n      textAlign: textAlign,\r\n      textBaseline: textBaseline,\r\n      fill: new style.Fill({\r\n        color: getOLColorString(textFillColor, textFillOpacity),\r\n      }),\r\n    };\r\n\r\n    // Convert SLD halo to text symbol stroke.\r\n    if (textsymbolizer.halo) {\r\n      var haloStyling =\r\n        textsymbolizer.halo && textsymbolizer.halo.fill\r\n          ? textsymbolizer.halo.fill.styling\r\n          : {};\r\n      var haloFillColor = evaluate(haloStyling.fill, null, null, '#FFFFFF');\r\n      var haloFillOpacity = evaluate(haloStyling.fillOpacity, null, null, 1.0);\r\n      var haloRadius = evaluate(textsymbolizer.halo.radius, null, null, 1.0);\r\n      textStyleOptions.stroke = new style.Stroke({\r\n        color: getOLColorString(haloFillColor, haloFillOpacity),\r\n        // wrong position width radius equal to 2 or 4\r\n        width:\r\n          (haloRadius === 2 || haloRadius === 4\r\n            ? haloRadius - 0.00001\r\n            : haloRadius) * 2,\r\n      });\r\n    }\r\n\r\n    return new style.Style({\r\n      text: new style.Text(textStyleOptions),\r\n    });\r\n  }\r\n\r\n  var cachedTextStyle = memoizeStyleFunction(textStyle);\r\n\r\n  /**\r\n   * @private\r\n   * Get an OL text style instance for a feature according to a symbolizer.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @param {ol/Feature} feature OpenLayers Feature.\r\n   * @param {Function} getProperty A property getter: (feature, propertyName) => property value.\r\n   * @returns {ol/Style} OpenLayers style instance.\r\n   */\r\n  function getTextStyle(symbolizer, feature, getProperty) {\r\n    var olStyle = cachedTextStyle(symbolizer);\r\n    var olText = olStyle.getText();\r\n    if (!olText) {\r\n      return olStyle;\r\n    }\r\n\r\n    // Read text from feature and set it on the text style instance.\r\n    var label = symbolizer.label;\n    var labelplacement = symbolizer.labelplacement;\r\n\r\n    // Set text only if the label expression is dynamic.\r\n    if (isDynamicExpression(label)) {\r\n      var labelText = evaluate(label, feature, getProperty, '');\r\n      // Important! OpenLayers expects the text property to always be a string.\r\n      olText.setText(labelText.toString());\r\n    }\r\n\r\n    // Set rotation if expression is dynamic.\r\n    if (labelplacement) {\r\n      var pointPlacementRotation =\r\n        (labelplacement.pointplacement &&\r\n          labelplacement.pointplacement.rotation) ||\r\n        0.0;\r\n      if (isDynamicExpression(pointPlacementRotation)) {\r\n        var labelRotationDegrees = evaluate(\r\n          pointPlacementRotation,\r\n          feature,\r\n          getProperty,\r\n          0.0\r\n        );\r\n        olText.setRotation((Math.PI * labelRotationDegrees) / 180.0); // OL rotation is in radians.\r\n      }\r\n    }\r\n\r\n    // Set line or point placement according to geometry type.\r\n    var geometry = feature.getGeometry\r\n      ? feature.getGeometry()\r\n      : feature.geometry;\r\n    var geometryType = geometry.getType ? geometry.getType() : geometry.type;\r\n    var lineplacement =\r\n      symbolizer &&\r\n      symbolizer.labelplacement &&\r\n      symbolizer.labelplacement.lineplacement\r\n        ? symbolizer.labelplacement.lineplacement\r\n        : null;\r\n    var placement =\r\n      geometryType !== 'point' && lineplacement ? 'line' : 'point';\r\n    olText.setPlacement(placement);\r\n\r\n    // Apply dynamic style properties.\r\n    applyDynamicTextStyling(olStyle, symbolizer, feature, getProperty);\r\n\r\n    // Adjust font if one or more font svgparameters are dynamic.\r\n    if (symbolizer.font && symbolizer.font.styling) {\r\n      var fontStyling = symbolizer.font.styling || {};\r\n      if (\r\n        isDynamicExpression(fontStyling.fontFamily) ||\r\n        isDynamicExpression(fontStyling.fontStyle) ||\r\n        isDynamicExpression(fontStyling.fontWeight) ||\r\n        isDynamicExpression(fontStyling.fontSize)\r\n      ) {\r\n        var fontFamily = evaluate(\r\n          fontStyling.fontFamily,\r\n          feature,\r\n          getProperty,\r\n          'sans-serif'\r\n        );\r\n        var fontStyle = evaluate(\r\n          fontStyling.fontStyle,\r\n          feature,\r\n          getProperty,\r\n          ''\r\n        );\r\n        var fontWeight = evaluate(\r\n          fontStyling.fontWeight,\r\n          feature,\r\n          getProperty,\r\n          ''\r\n        );\r\n        var fontSize = evaluate(fontStyling.fontSize, feature, getProperty, 10);\r\n        var olFontString = fontStyle + \" \" + fontWeight + \" \" + fontSize + \"px \" + fontFamily;\r\n        olText.setFont(olFontString);\r\n      }\r\n    }\r\n\r\n    return olStyle;\r\n  }\n\n  /**\r\n   * @private\r\n   * Get an OL point style instance for a line feature according to a symbolizer.\r\n   * The style will render a point on the middle of the line.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @param {ol/Feature} feature OpenLayers Feature.\r\n   * @returns {ol/Style} OpenLayers style instance.\r\n   */\r\n  function getLinePointStyle(symbolizer, feature) {\r\n    if (typeof feature.getGeometry !== 'function') {\r\n      return null;\r\n    }\r\n\r\n    var geom$1 = feature.getGeometry();\r\n    if (!geom$1) {\r\n      return null;\r\n    }\r\n\r\n    var pointStyle = null;\r\n    var geomType = geom$1.getType();\r\n    if (geomType === 'LineString') {\r\n      pointStyle = getPointStyle(symbolizer, feature);\r\n      pointStyle.setGeometry(new geom.Point(getLineMidpoint(geom$1)));\r\n    } else if (geomType === 'MultiLineString') {\r\n      var lineStrings = geom$1.getLineStrings();\r\n      var multiPointCoords = lineStrings.map(getLineMidpoint);\r\n      pointStyle = getPointStyle(symbolizer, feature);\r\n      pointStyle.setGeometry(new geom.MultiPoint(multiPointCoords));\r\n    }\r\n\r\n    return pointStyle;\r\n  }\n\n  /**\r\n   * @private\r\n   * Get the point located at the centroid of a polygon.\r\n   * @param {ol/geom/Polygon} geometry An OpenLayers Polygon geometry.\r\n   * @returns {Array<number>} An [x, y] coordinate array.\r\n   */\r\n  function getInteriorPoint(geometry) {\r\n    // Use OpenLayers getInteriorPoint method to get a 'good' interior point.\r\n    var ref = geometry.getInteriorPoint().getCoordinates();\n    var x = ref[0];\n    var y = ref[1];\r\n    return [x, y];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Get an OL point style instance for a line feature according to a symbolizer.\r\n   * The style will render a point on the middle of the line.\r\n   * @param {object} symbolizer SLD symbolizer object.\r\n   * @param {ol/Feature} feature OpenLayers Feature.\r\n   * @returns {ol/Style} OpenLayers style instance.\r\n   */\r\n  function getPolygonPointStyle(symbolizer, feature) {\r\n    if (typeof feature.getGeometry !== 'function') {\r\n      return null;\r\n    }\r\n\r\n    var geom$1 = feature.getGeometry();\r\n    if (!geom$1) {\r\n      return null;\r\n    }\r\n\r\n    var pointStyle = null;\r\n    var geomType = geom$1.getType();\r\n    if (geomType === 'Polygon') {\r\n      pointStyle = getPointStyle(symbolizer, feature);\r\n      pointStyle.setGeometry(new geom.Point(getInteriorPoint(geom$1)));\r\n    } else if (geomType === 'MultiPolygon') {\r\n      var polygons = geom$1.getPolygons();\r\n      var multiPointCoords = polygons.map(getInteriorPoint);\r\n      pointStyle = getPointStyle(symbolizer, feature);\r\n      pointStyle.setGeometry(new geom.MultiPoint(multiPointCoords));\r\n    }\r\n\r\n    return pointStyle;\r\n  }\n\n  var defaultStyles = [defaultPointStyle];\r\n\r\n  /**\r\n   * @private\r\n   * Convert symbolizers together with the feature to OL style objects and append them to the OL styles array.\r\n   * @example appendStyles(styles, point[j], feature, getPointStyle);\r\n   * @param {Array<ol/style>} styles Array of OL styles.\r\n   * @param {Array<object>} symbolizers Array of feature symbolizers.\r\n   * @param {ol/feature} feature OpenLayers feature.\r\n   * @param {Function} styleFunction Function for getting the OL style object. Signature (symbolizer, feature) => OL style.\r\n   * @param {Function} getProperty A property getter: (feature, propertyName) => property value.\r\n   */\r\n  function appendStyles(\r\n    styles,\r\n    symbolizers,\r\n    feature,\r\n    styleFunction,\r\n    getProperty\r\n  ) {\r\n    (symbolizers || []).forEach(function (symbolizer) {\r\n      var olStyle = styleFunction(symbolizer, feature, getProperty);\r\n      if (olStyle) {\r\n        styles.push(olStyle);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create openlayers style\r\n   * @example OlStyler(getGeometryStyles(rules), geojson.geometry.type);\r\n   * @param {object} categorizedSymbolizers Symbolizers categorized by type, e.g. .pointSymbolizers = [array of point symbolizer objects].\r\n   * @param {object|Feature} feature {@link http://geojson.org|geojson}\r\n   *  or {@link https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html|ol/Feature} Changed in 0.0.04 & 0.0.5!\r\n   * @param {Function} getProperty A property getter: (feature, propertyName) => property value.\r\n   * @param {object} [options] Optional options object.\r\n   * @param {boolean} [options.strictGeometryMatch] Default false. When true, only apply symbolizers to the corresponding geometry type.\r\n   * E.g. point symbolizers will not be applied to lines and polygons. Default false (according to SLD spec).\r\n   * @param {boolean} [options.useFallbackStyles] Default true. When true, provides default OL styles as fallback for unknown geometry types.\r\n   * @return ol.style.Style or array of it\r\n   */\r\n  function OlStyler(\r\n    categorizedSymbolizers,\r\n    feature,\r\n    getProperty,\r\n    options\r\n  ) {\n    if ( options === void 0 ) options = {};\n\r\n    var polygonSymbolizers = categorizedSymbolizers.polygonSymbolizers;\n    var lineSymbolizers = categorizedSymbolizers.lineSymbolizers;\n    var pointSymbolizers = categorizedSymbolizers.pointSymbolizers;\n    var textSymbolizers = categorizedSymbolizers.textSymbolizers;\r\n\r\n    var defaultOptions = {\r\n      strictGeometryMatch: false,\r\n      useFallbackStyles: true,\r\n    };\r\n\r\n    var styleOptions = Object.assign({}, defaultOptions, options);\r\n\r\n    var geometry = feature.getGeometry\r\n      ? feature.getGeometry()\r\n      : feature.geometry;\r\n    var geometryType = geometry.getType ? geometry.getType() : geometry.type;\r\n\r\n    var styles = [];\r\n    switch (geometryType) {\r\n      case 'Point':\r\n      case 'MultiPoint':\r\n        appendStyles(\r\n          styles,\r\n          pointSymbolizers,\r\n          feature,\r\n          getPointStyle,\r\n          getProperty\r\n        );\r\n        appendStyles(styles, textSymbolizers, feature, getTextStyle, getProperty);\r\n        break;\r\n\r\n      case 'LineString':\r\n      case 'MultiLineString':\r\n        appendStyles(styles, lineSymbolizers, feature, getLineStyle, getProperty);\r\n        if (!styleOptions.strictGeometryMatch) {\r\n          appendStyles(\r\n            styles,\r\n            pointSymbolizers,\r\n            feature,\r\n            getLinePointStyle,\r\n            getProperty\r\n          );\r\n        }\r\n        appendStyles(styles, textSymbolizers, feature, getTextStyle, getProperty);\r\n        break;\r\n\r\n      case 'Polygon':\r\n      case 'MultiPolygon':\r\n        appendStyles(\r\n          styles,\r\n          polygonSymbolizers,\r\n          feature,\r\n          getPolygonStyle,\r\n          getProperty\r\n        );\r\n        if (!styleOptions.strictGeometryMatch) {\r\n          appendStyles(\r\n            styles,\r\n            lineSymbolizers,\r\n            feature,\r\n            getLineStyle,\r\n            getProperty\r\n          );\r\n        }\r\n        appendStyles(\r\n          styles,\r\n          pointSymbolizers,\r\n          feature,\r\n          getPolygonPointStyle,\r\n          getProperty\r\n        );\r\n        appendStyles(styles, textSymbolizers, feature, getTextStyle, getProperty);\r\n        break;\r\n\r\n      default:\r\n        if (styleOptions.useFallbackStyles) {\r\n          styles = defaultStyles;\r\n        }\r\n    }\r\n\r\n    // Set z-index of styles explicitly to fix a bug where GraphicStroke is always rendered above a line symbolizer.\r\n    styles.forEach(function (style, index) { return style.setZIndex(index); });\r\n\r\n    return styles;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Extract feature id from an OpenLayers Feature.\r\n   * @param {Feature} feature {@link https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html|ol/Feature}\r\n   * @returns {string} Feature id.\r\n   */\r\n  function getOlFeatureId(feature) {\r\n    return feature.getId();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Extract a property value from an OpenLayers Feature.\r\n   * @param {Feature} feature {@link https://openlayers.org/en/latest/apidoc/module-ol_Feature-Feature.html|ol/Feature}\r\n   * @param {string} propertyName The name of the feature property to read.\r\n   * @returns {object} Property value.\r\n   */\r\n  function getOlFeatureProperty(feature, propertyName) {\r\n    return feature.get(propertyName);\r\n  }\r\n\r\n  /**\r\n   * Create an OpenLayers style function from a FeatureTypeStyle object extracted from an SLD document.\r\n   *\r\n   * **Important!** When using externalGraphics for point styling, make sure to call .changed() on the layer\r\n   * inside options.imageLoadedCallback to immediately see the loaded image. If you do not do this, the\r\n   * image icon will only become visible the next time OpenLayers draws the layer (after pan or zoom).\r\n   * @param {FeatureTypeStyle} featureTypeStyle Feature Type Style object.\r\n   * @param {object} options Options\r\n   * @param {function} options.convertResolution An optional function to convert the resolution in map units/pixel to resolution in meters/pixel.\r\n   * When not given, the map resolution is used as-is.\r\n   * @param {function} options.imageLoadedCallback Optional callback that will be called with the url of an externalGraphic when\r\n   * an image has been loaded (successfully or not). Call .changed() inside the callback on the layer to see the loaded image.\r\n   * @param {function} options.getProperty Optional custom property getter: (feature, propertyName) => property value.\r\n   * @returns {Function} A function that can be set as style function on an OpenLayers vector style layer.\r\n   * @example\r\n   * myOlVectorLayer.setStyle(SLDReader.createOlStyleFunction(featureTypeStyle, {\r\n   *   imageLoadedCallback: () => { myOlVectorLayer.changed(); }\r\n   * }));\r\n   */\r\n  function createOlStyleFunction(featureTypeStyle, options) {\n    if ( options === void 0 ) options = {};\n\r\n    var imageLoadedCallback = options.imageLoadedCallback || (function () {});\r\n\r\n    // Keep track of whether a callback has been registered per image url.\r\n    var callbackRef = {};\r\n\r\n    return function (feature, mapResolution) {\r\n      // Determine resolution in meters/pixel.\r\n      var resolution =\r\n        typeof options.convertResolution === 'function'\r\n          ? options.convertResolution(mapResolution)\r\n          : mapResolution;\r\n\r\n      var getProperty =\r\n        typeof options.getProperty === 'function'\r\n          ? options.getProperty\r\n          : getOlFeatureProperty;\r\n\r\n      // Determine applicable style rules for the feature, taking feature properties and current resolution into account.\r\n      var rules = getRules(featureTypeStyle, feature, resolution, {\r\n        getProperty: getProperty,\r\n        getFeatureId: getOlFeatureId,\r\n      });\r\n\r\n      // Start loading images for external graphic symbolizers and when loaded:\r\n      // * update symbolizers to use the cached image.\r\n      // * call imageLoadedCallback with the image url.\r\n      processExternalGraphicSymbolizers(\r\n        rules,\r\n        featureTypeStyle,\r\n        imageLoadedCallback,\r\n        callbackRef\r\n      );\r\n\r\n      // Convert style rules to style rule lookup categorized by geometry type.\r\n      var categorizedSymbolizers = categorizeSymbolizers(rules);\r\n\r\n      // Determine style rule array.\r\n      var olStyles = OlStyler(categorizedSymbolizers, feature, getProperty);\r\n\r\n      return olStyles;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create an array of OpenLayers style instances for features with the chosen geometry type from a style rule.\r\n   * Since this function creates a static OpenLayers style and not a style function,\r\n   * usage of this function is only suitable for simple symbolizers that do not depend on feature properties\r\n   * and do not contain external graphics. External graphic marks will be shown as a grey circle instead.\r\n   * @param {StyleRule} styleRule Feature Type Style Rule object.\r\n   * @param {string} geometryType One of 'Point', 'LineString' or 'Polygon'\r\n   * @returns {Array<ol.Style>} An array of OpenLayers style instances.\r\n   * @example\r\n   * myOlVectorLayer.setStyle(SLDReader.createOlStyle(featureTypeStyle.rules[0], 'Point');\r\n   */\r\n  function createOlStyle(styleRule, geometryType) {\r\n    var categorizedSymbolizers = categorizeSymbolizers([styleRule]);\r\n\r\n    var olStyles = OlStyler(\r\n      categorizedSymbolizers,\r\n      { geometry: { type: geometryType } },\r\n      function () { return null; },\r\n      { strictGeometryMatch: true, useFallbackStyles: false }\r\n    );\r\n\r\n    return olStyles.filter(function (style) { return style !== null; });\r\n  }\n\n  /**\r\n   *\r\n   * @param {any} input Input value.\r\n   * @returns The string representation of the input value.\r\n   * It will always return a valid string and return an empty string for null and undefined values.\r\n   * Other types of input will be returned as their type name.\r\n   */\r\n  // eslint-disable-next-line import/prefer-default-export\r\n  function asString(input) {\r\n    if (input === null) {\r\n      return '';\r\n    }\r\n    var inputType = typeof input;\r\n    switch (inputType) {\r\n      case 'string':\r\n        return input;\r\n      case 'number':\r\n      case 'bigint':\r\n      case 'boolean':\r\n        return input.toString();\r\n      case 'undefined':\r\n        return '';\r\n      default:\r\n        // object, function, symbol, bigint, boolean, other?\r\n        return inputType;\r\n    }\r\n  }\n\n  // The functions below are taken from the Geoserver function list.\r\n  // https://docs.geoserver.org/latest/en/user/filter/function_reference.html#string-functions\r\n  // Note: implementation details may be different from Geoserver implementations.\r\n  // SLDReader function parameters are not strictly typed and will convert inputs in a sensible manner.\r\n\r\n  /**\r\n   * Converts the text representation of the input value to lower case.\r\n   * @private\r\n   * @param {any} input Input value.\r\n   * @returns Lower case version of the text representation of the input value.\r\n   */\r\n  function strToLowerCase(input) {\r\n    return asString(input).toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Converts the text representation of the input value to upper case.\r\n   * @private\r\n   * @param {any} input Input value.\r\n   * @returns Upper case version of the text representation of the input value.\r\n   */\r\n  function strToUpperCase(input) {\r\n    return asString(input).toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * Extract a substring from the input text.\r\n   * @private\r\n   * @param {any} input Input value.\r\n   * @param {number} start Integer representing start position to extract beginning with 1;\r\n   * if start is negative, the return string will begin at the end of the string minus the start value.\r\n   * @param {number} [length] Optional integer representing length of string to extract;\r\n   * if length is negative, the return string will omit the given length of characters from the end of the string\r\n   * @returns {string} The extracted substring.\r\n   * @example\r\n   * * qgisSubstr('HELLO WORLD', 3, 5) --> 'LLO W'.\r\n   * * qgisSubstr('HELLO WORLD', -5) --> 'WORLD'.\r\n   */\r\n  function qgisSubstr(input, start, length) {\r\n    var startIndex = Number(start);\r\n    var lengthInt = Number(length);\r\n    if (Number.isNaN(startIndex)) {\r\n      return '';\r\n    }\r\n\r\n    // Note: implementation specification taken from https://docs.qgis.org/3.28/en/docs/user_manual/expressions/functions_list.html#substr\r\n    var text = asString(input);\r\n    if (Number.isNaN(lengthInt)) {\r\n      if (startIndex > 0) {\r\n        return text.slice(startIndex - 1);\r\n      }\r\n      return text.slice(startIndex);\r\n    }\r\n\r\n    if (lengthInt === 0) {\r\n      return '';\r\n    }\r\n\r\n    if (startIndex > 0) {\r\n      if (lengthInt > 0) {\r\n        return text.slice(startIndex - 1, startIndex - 1 + lengthInt);\r\n      }\r\n      return text.slice(startIndex - 1, lengthInt);\r\n    }\r\n\r\n    if (lengthInt > 0) {\r\n      if (startIndex + lengthInt < 0) {\r\n        return text.slice(startIndex, startIndex + lengthInt);\r\n      }\r\n      return text.slice(startIndex);\r\n    }\r\n\r\n    return text.slice(startIndex, lengthInt);\r\n  }\r\n\r\n  /**\r\n   * Extract a substring given a begin and end index.\r\n   * @private\r\n   * @param {any} input Input value.\r\n   * @param {number} begin Begin index (0-based).\r\n   * @param {number} end End index (0-based).\r\n   * @returns {string} The substring starting at the begin index up to,\r\n   * but not incuding the character at the end index.\r\n   * @example\r\n   * * strSubstring('HELLO', 2, 4) --> 'LL'.\r\n   */\r\n  function strSubstring(input, begin, end) {\r\n    var text = asString(input);\r\n    var beginIndex = Number(begin);\r\n    var endIndex = Number(end);\r\n    if (Number.isNaN(beginIndex) || Number.isNaN(endIndex)) {\r\n      return '';\r\n    }\r\n\r\n    return text.slice(beginIndex, endIndex);\r\n  }\r\n\r\n  /**\r\n   * Extract a substring from a begin index until the end.\r\n   * @private\r\n   * @param {any} input Input value.\r\n   * @param {number} begin Begin index (0-based).\r\n   * Using a negative index -N starts at N characters from the end.\r\n   * @returns {string} The substring starting at the begin index until the end.\r\n   * @example\r\n   * * strSubstringStart('HELLO', 1) --> 'ELLO'.\r\n   * * strSubstringStart('HELLO', -2) --> 'LO'.\r\n   */\r\n  function strSubstringStart(input, begin) {\r\n    var text = asString(input);\r\n    var beginIndex = Number(begin);\r\n    if (Number.isNaN(beginIndex)) {\r\n      return '';\r\n    }\r\n\r\n    return text.slice(beginIndex);\r\n  }\r\n\r\n  /**\r\n   * Get the geometry type of an OpenLayers geometry instance.\r\n   * Calls geom.getType() and returns the result.\r\n   * See https://openlayers.org/en/latest/apidoc/module-ol_geom_Geometry.html#~Type\r\n   * for possible values.\r\n   * @private\r\n   * @param {ol/geom/x} olGeometry OpenLayers Geometry instance.\r\n   * @returns {string} The OpenLayers geometry type.\r\n   */\r\n  function geometryType(olGeometry) {\r\n    if (olGeometry && typeof olGeometry.getType === 'function') {\r\n      return olGeometry.getType();\r\n    }\r\n\r\n    return 'Unknown';\r\n  }\r\n\r\n  /**\r\n   * Get the dimension of a geometry. Multipart geometries will return the dimension of their separate parts.\r\n   * @private\r\n   * @param {ol/geom/x} olGeometry OpenLayers Geometry instance.\r\n   * @returns {number} The dimension of the geometry. Will return 0 for GeometryCollection or unknown type.\r\n   */\r\n  function dimension(olGeometry) {\r\n    switch (geometryType(olGeometry)) {\r\n      case 'Point':\r\n      case 'MultiPoint':\r\n        return 0;\r\n      case 'LineString':\r\n      case 'LinearRing':\r\n      case 'Circle':\r\n      case 'MultiLineString':\r\n        return 1;\r\n      case 'Polygon':\r\n      case 'MultiPolygon':\r\n        return 2;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine the type of an OpenLayers geometry. Does not differentiate between multipart and single part.\r\n   * @private\r\n   * @param {ol/geom/x} olGeometry OpenLayers Geometry instance.\r\n   * @returns {string} The geometry type: one of Point, Line, Polygon, or Unknown (geometry collection).\r\n   */\r\n  function qgisGeometryType(olGeometry) {\r\n    switch (geometryType(olGeometry)) {\r\n      case 'Point':\r\n      case 'MultiPoint':\r\n        return 'Point';\r\n      case 'LineString':\r\n      case 'LinearRing':\r\n      case 'Circle':\r\n      case 'MultiLineString':\r\n        return 'Line';\r\n      case 'Polygon':\r\n      case 'MultiPolygon':\r\n        return 'Polygon';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test if the first argument is the same as any of the other arguments.\r\n   * Equality is determined by comparing test and candidates as strings.\r\n   * @private\r\n   * @param  {...any} inputArgs Input arguments.\r\n   * @returns {boolean} True if the first argument is the same as any of the other arguments\r\n   * using string-based comparison.\r\n   */\r\n  function stringIn() {\n    var inputArgs = [], len = arguments.length;\n    while ( len-- ) inputArgs[ len ] = arguments[ len ];\n\r\n    var test = inputArgs[0];\n    var candidates = inputArgs.slice(1);\r\n    // Compare test with candidates as string.\r\n    var testString = asString(test);\r\n    return candidates.some(function (candidate) { return asString(candidate) === testString; });\r\n  }\r\n\r\n  /**\r\n   * Register all builtin functions at once.\r\n   * @private\r\n   */\r\n  function addBuiltInFunctions() {\r\n    // QGIS functions\r\n    registerFunction('lower', strToLowerCase);\r\n    registerFunction('upper', strToUpperCase);\r\n    registerFunction('geometry_type', qgisGeometryType);\r\n    registerFunction('substr', qgisSubstr);\r\n\r\n    // Geoserver functions\r\n    registerFunction('strToLowerCase', strToLowerCase);\r\n    registerFunction('strToUpperCase', strToUpperCase);\r\n    registerFunction('strSubstring', strSubstring);\r\n    registerFunction('strSubstringStart', strSubstringStart);\r\n    registerFunction('geometryType', geometryType);\r\n    registerFunction('dimension', dimension);\r\n    registerFunction('in', stringIn);\r\n    // Also register in2/in10 as alias for the in function.\r\n    // This is done for backwards compatibility with older geoservers, which have explicit 'in'\r\n    // function versions for 2 to 10 parameters.\r\n    for (var k = 2; k <= 10; k += 1) {\r\n      registerFunction((\"in\" + k), stringIn);\r\n    }\r\n\r\n    // Math operators as functions\r\n    registerFunction('__fe:Add__', function (a, b) { return Number(a) + Number(b); });\r\n    registerFunction('__fe:Sub__', function (a, b) { return Number(a) - Number(b); });\r\n    registerFunction('__fe:Mul__', function (a, b) { return Number(a) * Number(b); });\r\n    registerFunction('__fe:Div__', function (a, b) { return Number(a) / Number(b); });\r\n  }\n\n  // Add support for a handful of built-in SLD function implementations.\r\n  addBuiltInFunctions();\n\n  exports.OlStyler = OlStyler;\n  exports.Reader = Reader;\n  exports.categorizeSymbolizers = categorizeSymbolizers;\n  exports.createOlStyle = createOlStyle;\n  exports.createOlStyleFunction = createOlStyleFunction;\n  exports.getByPath = getByPath;\n  exports.getFunction = getFunction;\n  exports.getLayer = getLayer;\n  exports.getLayerNames = getLayerNames;\n  exports.getRuleSymbolizers = getRuleSymbolizers;\n  exports.getRules = getRules;\n  exports.getStyle = getStyle;\n  exports.getStyleNames = getStyleNames;\n  exports.registerFunction = registerFunction;\n\n}));\n","// MapViewer.js\n\nimport {css, html, LitElement} from 'lit';\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport {Tile as TileLayer} from 'ol/layer';\nimport {WMTS} from 'ol/source';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport WMTSTileGrid from 'ol/tilegrid/WMTS';\nimport {Circle, Fill, Stroke, Style} from 'ol/style';\nimport GML32 from 'ol/format/GML32';\nimport {register} from 'ol/proj/proj4';\nimport {get, getPointResolution} from 'ol/proj';\nimport proj4 from 'proj4';\nimport Overlay from 'ol/Overlay';\nimport * as SLDReader from '@nieuwlandgeo/sldreader';\nimport {extend} from 'ol/extent';\n\n// Define and register the projection for EPSG:25832\nproj4.defs('EPSG:25832', '+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs +axis=enu');\nproj4.defs('http://www.opengis.net/def/crs/EPSG/0/25832', proj4.defs('EPSG:25832'));\nregister(proj4);\n\n// Get the EPSG:25832 projection\nconst epsg25832 = get('EPSG:25832');\n\nexport class MapViewer extends LitElement {\n  static styles = css`\n\n      :host {\n          display: block;\n          width: var(--map-viewer-width, 100%);\n          height: var(--map-viewer-height, 100%);\n          border: var(--map-viewer-border, none);\n          box-shadow: var(--map-viewer-box-shadow, none);\n      }\n\n      .map-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          width: 100%;\n          height: 100%;\n          position: relative;\n      }\n\n      .map {\n          width: 100%;\n          height: 100%;\n      }\n\n\n      #compass-container {\n          position: absolute;\n          top: 1rem;\n          right: 1rem;\n          display: flex;\n          flex-direction: column;\n          padding: 1rem;\n          width: 3rem;\n          height: 3rem;\n      }\n\n      #controls-container {\n          position: absolute;\n          bottom: 1rem;\n          right: 1rem;\n          display: flex;\n          flex-direction: column;\n          gap: 0.5rem;\n          background: rgba(255, 255, 255, 0.8);\n          border-radius: 1rem;\n          padding: 1rem;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      }\n      \n      #layer-switcher {\n          position: absolute;\n          bottom: 1rem;\n          right: 6rem;\n          display: flex;\n          flex-direction: row-reverse;\n          gap: 0.5rem;\n          background: rgba(255, 255, 255, 0.8);\n          border-radius: 1rem;\n          padding: 1rem;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      }\n\n      .control-icon {\n          width: 2.5rem;\n          height: 2.5rem;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background-color: white;\n          border: 1px solid #ccc;\n          border-radius: 50%;\n          cursor: pointer;\n          transition: background-color 0.3s, transform 0.2s;\n      }\n\n      #map-legend {\n          position: absolute;\n          bottom: 1rem;\n          left: 1rem;\n          background: rgba(255, 255, 255, 0.8);\n          border-radius: 8px;\n          padding: 0.75rem;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          display: none;\n      }\n      input {\n          accent-color: green;\n      }\n\n      button:hover, label:hover {\n          transform: scale(1.1);\n      }\n\n      label svg {\n          width: 1.25rem;\n          height: 1.25rem;\n          fill: #333;\n      }\n\n      input[type=\"file\"] {\n          display: none;\n      }\n      \n      .radio-options {\n          display: none;\n      }\n  `;\n\n  // Define custom properties\n  static properties = {\n    gmlFile: { type: String, reflect: true },\n    xmlFile: { type: String, reflect: true },\n    sldFile: { type: String, reflect: true },\n  };\n\n  // Initialize custom properties\n  constructor() {\n    super();\n    this.vectorLayers = [];\n    this.styles = {\n      fillColor: '#ffffff',\n      strokeColor: '#000000',\n      strokeWidth: 1,\n    };\n    // Initialize to null, but don't rely on constructor for attribute retrieval\n    this.gmlFile = null;\n    this.sldFile = null;\n    this.xmlFile = null;\n  }\n\n  /**\n   * Called when the component is added to the DOM. Retrieve the GML, SLD and metadata\n   * files and pass them to the respective loading functions.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (this.gmlFile) {\n      // Fetch the GML file\n      fetch(this.gmlFile)\n        .then(response => response.text())\n        .then(gmlString => {\n          if (this.sldFile) {\n            // Fetch the SLD file if it exists\n            return fetch(this.sldFile)\n              .then(response => response.text())\n              .then(sldString => {\n                // Load the GML with the SLD file\n                this.loadGML(gmlString, sldString);\n              });\n          }\n          // Load the GML without an SLD file\n          this.loadGML(gmlString, null);\n        })\n        .catch(error => console.error('Error loading GML or SLD:', error));\n    }\n\n    if (this.xmlFile) {\n      // Fetch the metadata XML file\n      fetch(this.xmlFile)\n        .then(response => response.text())\n        .then(xmlData => {\n          // Load the metadata from the XML file\n          this.loadMetadata(xmlData);\n        })\n        .catch(error => console.error('Error loading XML:', error));\n    }\n  }\n\n  firstUpdated() {\n    // Initialize the two maps\n    this.initMaps();\n    // Initialize the hover popup\n    this.initHoverPopup();\n  }\n\n// Initialize the map\n  initMaps() {\n    // Define the two base layers\n    this.baseLayer1 = new TileLayer({\n      visible: true,\n      type: 'base',\n      size: [256, 256],\n      source: new WMTS({\n        url: 'https://services.datafordeler.dk/DKskaermkort/topo_skaermkort_daempet/1.0.0/wmts?username=QKJBQATHVS&password=ytxCA8UGM5n0Z*zi',\n        layer: 'topo_skaermkort_daempet',\n        matrixSet: 'View1',\n        format: 'image/jpeg',\n        style: 'default',\n        tileGrid: new WMTSTileGrid({\n          extent: [120000, 5900000, 1000000, 6500000],\n          resolutions: [1638.4, 819.2, 409.6, 204.8, 102.4, 51.2, 25.6, 12.8, 6.4, 3.2, 1.6, 0.8, 0.4, 0.2],\n          matrixIds: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13']\n        }),\n      }),\n      view: new View({\n          maxZoom: 14,\n          minZoom: 0\n      })\n    });\n    this.baseLayer2 = new TileLayer({\n      visible: false, // Initially hidden\n      source: new WMTS({\n        url: 'https://services.datafordeler.dk/GeoDanmarkOrto/orto_foraar_wmts/1.0.0/wmts?username=RNIOENOTLD&password=LaKage!7562Hesten',\n        layer: 'orto_foraar_wmts',\n        matrixSet: 'KortforsyningTilingDK',\n        style: 'default',\n        format: 'image/jpeg',\n        tileGrid: new WMTSTileGrid({\n          extent: [120000, 5900000, 1000000, 6500000],\n          resolutions: [1638.4, 819.2, 409.6, 204.8, 102.4, 51.2, 25.6, 12.8, 6.4, 3.2, 1.6, 0.8, 0.4, 0.2],\n          matrixIds: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13']\n        }),\n      }),\n    });\n    // Create the map\n    this.map = new Map({\n      target: this.shadowRoot.getElementById('map'),\n      layers: [this.baseLayer1, this.baseLayer2],\n      view: new View({\n        center: [600000, 6225000],\n        zoom: 9,\n        projection: epsg25832,\n      }),\n      controls: [],\n    });\n\n    // Add event listener to switch layers\n    this.updateComplete.then(() => {\n      const layerSwitcher = this.shadowRoot.getElementById('layer-switcher');\n      const radioOptions = this.shadowRoot.querySelector('.radio-options');\n\n      if (layerSwitcher && radioOptions) {\n        // Toggle radio button visibility when clicking the SVG\n        layerSwitcher.addEventListener('click', (event) => {\n          if (event.target.closest('svg')) {\n            radioOptions.style.display = radioOptions.style.display === 'none' || !radioOptions.style.display ? 'block' : 'none';\n          }\n        });\n\n        // Listen for changes in radio selection\n        layerSwitcher.addEventListener('change', (event) => {\n          if (event.target.name === 'base-layer') {\n            const selectedLayer = event.target.value;\n            this.baseLayer1.setVisible(selectedLayer === \"1\");\n            this.baseLayer2.setVisible(selectedLayer === \"2\");\n          }\n        });\n      } else {\n        console.error(\"Layer switcher element or radio options not found\");\n      }\n    });\n\n  }\n\n  initHoverPopup() {\n    const container = document.createElement('div');\n    container.id = 'popup';\n    container.style.cssText = `\n      background: white;\n      border: 1px solid black;\n      padding: 0.5rem;\n      border-radius: 1rem;\n      font-size: 12px;\n      box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);\n      pointer-events: none;\n      position: absolute;\n      display: none;\n      width: max-content;\n    `;\n\n    // Append the container to the shadow root\n    this.shadowRoot.appendChild(container);\n\n    // Create an overlay using the container\n    this.overlay = new Overlay({\n      element: container, offset: [10, 10], positioning: 'center-left',\n    });\n\n    // Add overlay to the map\n    this.map.addOverlay(this.overlay);\n\n    // Set up hover event to display feature information\n    this.map.on('pointermove', (event) => {\n      const feature = this.map.forEachFeatureAtPixel(event.pixel, (feat) => feat);\n      if (feature) {\n        const rgeoNavn = feature.get('navn');\n        const rgeoType = feature.get('type');\n\n        // Build the popup content dynamically\n        let popupContent = '';\n        if (rgeoNavn) popupContent += `<strong>${rgeoNavn}</strong><br/>`;\n        if (rgeoType) popupContent += `Type: ${rgeoType}`;\n\n        // Display the popup if there's any content to show\n        if (popupContent) {\n          container.innerHTML = popupContent;\n          container.style.display = 'block';\n          this.overlay.setPosition(event.coordinate);\n        } else {\n          container.style.display = 'none';\n        }\n      } else {\n        container.style.display = 'none';\n      }\n    });\n  }\n\n  // Zoom in on map\n  zoomIn() {\n    const view = this.map.getView();\n    view.setZoom(view.getZoom() + 1);\n  }\n  // Zoom out on map\n  zoomOut() {\n    const view = this.map.getView();\n    view.setZoom(view.getZoom() - 1);\n  }\n\n  /**\n   * Uploads the given files to the map.\n   * @param {Event} event The event containing the files.\n   */\n  uploadFiles(event) {\n    const files = [...event.target.files];\n    const gmlFile = files.find(file => file.name.endsWith('.gml'));\n    const sldFile = files.find(file => file.name.endsWith('.sld'));\n    const geojsonFile = files.find(file => file.name.endsWith('.geojson'));\n    const xmlFile = files.find(file => file.name.endsWith('.xml'));\n\n    if (gmlFile) {\n      const gmlReader = new FileReader();\n      gmlReader.onload = () => {\n        if (sldFile) {\n          const sldFileReader = new FileReader();\n          sldFileReader.onload = () => {\n            /**\n             * Loads the GML file onto the map using the given SLD style.\n             * @param {string} gml The GML file contents.\n             * @param {string} sld The SLD file contents.\n             */\n            this.loadGML(gmlReader.result, sldFileReader.result);\n          };\n          sldFileReader.readAsText(sldFile);\n        } else {\n          /**\n           * Loads the GML file onto the map without any SLD style.\n           * @param {string} gml The GML file contents.\n           */\n          this.loadGML(gmlReader.result, null);\n        }\n      };\n      gmlReader.readAsText(gmlFile);\n    }\n\n    if (geojsonFile) {\n      const geojsonReader = new FileReader();\n      geojsonReader.onload = () => {\n        /**\n         * Loads the metadata from the given GeoJSON file.\n         * @param {string} geojson The GeoJSON file contents.\n         */\n        this.loadMetadata(JSON.parse(geojsonReader.result));\n      };\n      geojsonReader.readAsText(geojsonFile);\n    }\n    if (xmlFile) {\n      const xmlReader = new FileReader();\n      xmlReader.onload = () => {\n        /**\n         * Loads the metadata from the given XML file.\n         * @param {string} xml The XML file contents.\n         */\n        this.loadMetadata(xmlReader.result);\n      };\n      xmlReader.readAsText(xmlFile);\n    }\n  }\n\n  /**\n   * Loads metadata from a given string or object.\n   *\n   * If the metadata is a string, it is assumed to be in XML format and is parsed using a DOMParser.\n   * If the metadata is an object, it is assumed to have a 'properties' property that contains the metadata.\n   *\n   * The metadata is then displayed on the map or in a designated UI element.\n   *\n   * @param {string|object} metadata - The metadata to load.\n   */\n  loadMetadata(metadata) {\n    let properties;\n\n    if (typeof metadata === 'string') {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(metadata, 'application/xml');\n      properties = Array.from(xmlDoc.documentElement.children).reduce((acc, child) => {\n        acc[child.tagName] = child.textContent;\n        return acc;\n      }, {});\n    } else if (metadata.properties) {\n      properties = metadata.properties;\n    } else {\n      console.warn('Unsupported metadata format.');\n      return;\n    }\n\n    // Locate the map container\n    const mapContainer = this.shadowRoot.querySelector('#map-container');\n    if (!mapContainer) {\n      console.error('Map container not found');\n      return;\n    }\n\n    // Create or update the metadata box\n    let metadataBox = mapContainer.querySelector('#metadata-box');\n    if (!metadataBox) {\n      metadataBox = document.createElement('div');\n      metadataBox.id = 'metadata-box';\n      metadataBox.style.cssText = `\n      position: absolute;\n      top: 1rem;\n      left: 1rem;\n      background: rgba(255, 255, 255, 0.95);\n      padding: 1rem;\n      border-radius: 0.5rem;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n      max-height: 52rem;\n      overflow-y: auto;\n      max-width: 25rem;\n      z-index: 10;\n    `;\n      mapContainer.appendChild(metadataBox);\n    }\n\n// Generate styled HTML for properties\n    let contentHtml = ``;\n    for (const [key, value] of Object.entries(properties)) {\n      // Remove \"mdb:\" prefix (case-insensitive) and format the display key\n      const displayKey = key\n        .replace(/^mdb:/i, '') // Remove \"mdb:\" prefix\n        .replace(/([A-Z])/g, ' $1') // Add spaces before uppercase letters\n        .trim(); // Trim any leading/trailing spaces\n      const formattedKey = displayKey.charAt(0).toUpperCase() + displayKey.slice(1); // Capitalize first letter\n      contentHtml += `<div style=\"margin-bottom: 8px;\"><strong>${formattedKey}:</strong> ${value}</div>`;\n    }\n\n\n\n    // Toggleable metadata content\n    metadataBox.innerHTML = `\n    <button id=\"toggle-metadata\" style=\"background:none; border:none; font-size:1rem; cursor:pointer;\">\n        Metadata ▼\n    </button>\n    <div id=\"metadata-content\" style=\"display:none; margin-top:10px;\">\n        ${contentHtml}\n    </div>\n  `;\n\n    const toggleButton = metadataBox.querySelector('#toggle-metadata');\n    const contentBox = metadataBox.querySelector('#metadata-content');\n    toggleButton.addEventListener('click', () => {\n      const isVisible = contentBox.style.display === 'block';\n      contentBox.style.display = isVisible ? 'none' : 'block';\n      toggleButton.textContent = isVisible ? 'Metadata ▼' : 'Metadata ▲';\n    });\n  }\n\n  /**\n   * Loads GML data from a given string and applies it to the map.\n   *\n   * The GML data is parsed using a DOMParser and then grouped by feature type.\n   * The feature groups are then applied to the map using the applyFeatureGroupsToMap method.\n   *\n   * @param {string} gmlString - The GML data to load.\n   * @param {string} [sldString] - The SLD data to use for styling.\n   */\n  loadGML(gmlString, sldString = null) {\n    // Parse the GML data and get the features\n    this.shadowRoot.getElementById('map-legend').style.display = 'block'\n    const {features, xmlDoc} = this.parseGML(gmlString);\n    const featureGroups = this.groupFeaturesByType(features, xmlDoc);\n\n    // Reset existing layers\n    this.resetLayers();\n\n    // Apply the feature groups to the map (same as original logic)\n    this.applyFeatureGroupsToMap(featureGroups, sldString);\n\n    // Calculate the combined extent of all features (same as original logic)\n    const allFeaturesExtent = features.length > 0 ? features[0].getGeometry().getExtent().slice() : null;\n    features.forEach((feature) => {\n      const geometryExtent = feature.getGeometry().getExtent();\n      if (allFeaturesExtent) {\n        extend(allFeaturesExtent, geometryExtent);\n      }\n    });\n    // Adjust the map view to fit all features\n    if (allFeaturesExtent) {\n      this.map.getView().fit(allFeaturesExtent, {\n        size: this.map.getSize(),\n        padding: [50, 50, 50, 50],\n        maxZoom: 18,\n      });\n    }\n  }\n\n  /**\n   * Parses GML data from a given string, returning features and the XML document.\n   *\n   * This function attempts to parse the provided GML string using the GML32 format.\n   * It returns an object containing the parsed features and the XML document.\n   *\n   * @param {string} gmlString - The GML data to parse.\n   * @returns {Object} An object with 'features' array and 'xmlDoc' XML document.\n   */\n  parseGML(gmlString) {\n    try {\n      const format = new GML32();\n      const parser = new DOMParser();\n      let xmlDoc = parser.parseFromString(gmlString, 'application/xml');\n\n      // Normalize custom prefixes by replacing `rgeo:` with `gml:`\n      const serialized = new XMLSerializer().serializeToString(xmlDoc);\n      const normalizedGML = serialized.replace(/<rgeo:/g, '<gml:').replace(/<\\/rgeo:/g, '</gml:');\n\n      // Parse the modified GML\n      const features = format.readFeatures(normalizedGML, {\n        featureProjection: epsg25832, dataProjection: epsg25832,\n      });\n\n      return { features, xmlDoc };\n    } catch (error) {\n      console.error(\"Failed to parse GML file:\", error);\n      return { features: [], xmlDoc: null };\n    }\n  }\n\n  /**\n   * Applies SLD styles to the map.\n   *\n   * This function takes an SLD object, a feature type and the view projection as input and\n   * applies the SLD styles to the map. If the SLD object is null, null is returned. If the\n   * feature type is not found in the SLD object, a warning is logged and null is returned. If\n   * the feature type is found but the style is not found, a warning is logged and null is\n   * returned.\n   *\n   * @param {Object} sldObject - The SLD object to apply styles from.\n   * @param {string} type - The feature type to apply the styles to.\n   * @param {ol/proj/Projection} viewProjection - The view projection of the map.\n   * @returns {ol/style/StyleFunction} The style function to apply to the map.\n   */\n  applySLDStyles(sldObject, type, viewProjection) {\n    if (!sldObject) return null;\n\n    const sldLayer = SLDReader.getLayer(sldObject, type);\n    if (!sldLayer) {\n      console.warn(\"No named layer found for \" + type);\n      return null;\n    }\n\n    const sldStyle = SLDReader.getStyle(sldLayer);\n    if (!sldStyle) {\n      console.warn(\"No style found for layer \" + sldLayer);\n      return null;\n    }\n\n    const featureTypeStyle = sldStyle.featuretypestyles[0];\n    return SLDReader.createOlStyleFunction(featureTypeStyle, {\n      convertResolution: viewResolution => {\n        const viewCenter = this.map.getView().getCenter();\n        return getPointResolution(viewProjection, viewResolution, viewCenter);\n      }, imageLoadedCallback: () => {\n        this.map.changed();\n      },\n    });\n  }\n\n  /**\n   * Applies feature groups to the map, optionally using SLD styles for styling.\n   *\n   * This function iterates over the feature groups and adds them to the map with appropriate styles.\n   * If SLD data is provided, it will attempt to apply the SLD styles to the features.\n   *\n   * @param {Object} featureGroups - An object containing groups of features categorized by type.\n   * @param {string} [sldString] - The SLD data to use for styling the features.\n   */\n  applyFeatureGroupsToMap(featureGroups, sldString) {\n    const viewProjection = this.map.getView().getProjection();\n    const sldObject = sldString ? SLDReader.Reader(sldString) : null;\n\n    Object.keys(featureGroups).forEach(type => {\n      const vectorSource = new VectorSource({features: featureGroups[type]});\n      const sldStyleFunction = this.applySLDStyles(sldObject, type, viewProjection);\n      this.addLayerWithControls(type, vectorSource, sldStyleFunction || this.getStyle(type));\n    });\n\n    this.map.render();\n    this.requestUpdate();\n  }\n\n  /**\n   * Groups features by their feature type.\n   *\n   * This function takes the parsed features and an XML document as input and\n   * groups the features by their feature type. The feature type is determined by\n   * the local name of the first child element of the feature member element.\n   *\n   * @param {Array<ol/Feature>} features - The parsed features to group.\n   * @param {XMLDocument} xmlDoc - The XML document containing the feature members.\n   * @returns {Object} An object with feature type as keys and arrays of features as values.\n   */\n  groupFeaturesByType(features, xmlDoc) {\n    return features.reduce((groups, feature, index) => {\n      const featureMembers = xmlDoc.getElementsByTagNameNS('*', 'featureMember');\n      const featureMember = featureMembers[index];\n      const firstChildElement = featureMember ? featureMember.firstElementChild : null;\n      const featureType = firstChildElement ? firstChildElement.localName : 'Unknown Type';\n\n      if (!groups[featureType]) groups[featureType] = [];\n      groups[featureType].push(feature);\n      return groups;\n    }, {});\n  }\n\n  /**\n   * Removes all vector layers from the map and resets the data toggle.\n   *\n   * This function is called when a new GML file is selected and we want to remove all the\n   * previously added vector layers from the map and reset the data toggle.\n   */\n  resetLayers() {\n    this.vectorLayers.forEach((layer) => {\n      this.map.removeLayer(layer)\n    })\n    this.vectorLayers = []\n    const toggleElement = this.shadowRoot.getElementById('map-legend')\n    toggleElement.innerHTML = 'Vælg Lag:'\n  }\n\n\n  /**\n * Adds a vector layer to the map with controls for visibility and styling.\n *\n * This function creates a vector layer using the provided vector source and style function.\n * It also adds a checkbox to toggle the visibility of the layer, and color pickers\n * for adjusting the layer's fill color, stroke color, and stroke width.\n *\n * @param {string} type - The type or name of the layer.\n * @param {ol/source/Vector} vectorSource - The vector source for the layer.\n * @param {function} [sldStyleFunction] - Optional style function for the layer.\n */\n  addLayerWithControls(type, vectorSource, sldStyleFunction) {\n    const vectorLayer = new VectorLayer({\n      source: vectorSource, style: sldStyleFunction || ((feature) => this.getStyle(feature.getGeometry().getType())),\n    });\n\n    this.map.addLayer(vectorLayer);\n    this.vectorLayers.push(vectorLayer);\n\n    // Create a checkbox and color pickers for the layer\n    const layerToggleDiv = document.createElement('div');\n    layerToggleDiv.classList.add('legend-element');\n\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.checked = true;\n    checkbox.addEventListener('change', () => {\n      vectorLayer.setVisible(checkbox.checked);\n    });\n\n    const label = document.createElement('label');\n    label.textContent = type;\n\n    layerToggleDiv.appendChild(checkbox);\n    layerToggleDiv.appendChild(label);\n\n    this.shadowRoot.getElementById('map-legend').appendChild(layerToggleDiv);\n  }\n\n  // Drag and Drop Functions\n  onDragOver(event) {\n    event.preventDefault();\n    const dropZone = this.shadowRoot.getElementById('drop-zone');\n    dropZone.classList.add('dragover');\n  }\n\n  onDragLeave() {\n    const dropZone = this.shadowRoot.getElementById('drop-zone');\n    dropZone.classList.remove('dragover');\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    const dropZone = this.shadowRoot.getElementById('drop-zone');\n    dropZone.classList.remove('dragover');\n\n    const files = [...event.dataTransfer.files];\n    const gmlFile = files.find(file => file.name.endsWith('.gml'));\n    const xmlFile = files.find(file => file.name.endsWith('.xml'));\n    const sldFile = files.find(file => file.name.endsWith('.sld'));\n\n    if (gmlFile || sldFile || xmlFile) {\n      const fileInput = document.createElement('input');\n      fileInput.type = 'file';\n      fileInput.files = new DataTransfer().files; // Simulate input with dropped files\n      fileInput.dispatchEvent(new Event('change', {bubbles: true}));\n      this.uploadFiles({target: {files}});\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"map-container\" class=\"map-container\" id=\"map-container\" @dragover=\"${this.onDragOver}\" @dragleave=\"${this.onDragLeave}\" @drop=\"${this.onDrop}\">\n        <div id=\"map\" class=\"map\"></div>\n\n        <div id=\"map-legend\"></div>\n        \n        <div id=\"metadata\"></div>\n        \n\n        <div id=\"controls-container\">\n          <label class=\"control-icon\" title=\"Zoom In\" @click=\"${this.zoomIn}\">\n            <svg class=\"ds-icon\" width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <g stroke=\"var(--ds-icon-color, black)\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"var(--ds-icon-stroke, 1)\">\n                <path d=\"M0.5 14.5H28.5M14.5 0.5L14.5 28.5\"/>\n              </g>\n            </svg>\n          </label>\n          <label class=\"control-icon\" title=\"Zoom Out\" @click=\"${this.zoomOut}\">\n            <svg class=\"ds-icon\" width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <g stroke=\"var(--ds-icon-color, black)\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"var(--ds-icon-stroke, 1)\">\n                <path d=\"M0.5 14.5H28.5\"/>\n              </g>\n            </svg>\n          </label>\n          <label class=\"control-icon\" id=\"drop-zone\" title=\"Upload Files\">\n            <input type=\"file\" multiple @change=\"${this.uploadFiles}\"/>\n            <svg class=\"ds-icon\" width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <g stroke=\"var(--ds-icon-color, black)\" stroke-linecap=\"round\" fill=\"none\" stroke-width=\"var(--ds-icon-stroke, 1)\">\n                <path d=\"M1.5 26.5H27.5\"/>\n                <path d=\"M2 13.0858L13.7929 1.29292C14.1834 0.902398 14.8166 0.902399 15.2071 1.29292L27 13.0858M14.5 1.08582L14.5 20.4999\"/>\n              </g>\n            </svg>\n          </label>\n        </div>\n        <div id=\"layer-switcher\">\n          <svg class=\"ds-icon\" width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g stroke=\"var(--ds-icon-color, black)\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"var(--ds-icon-stroke, 1)\">\n              <path d=\"M1.5 14L14.5 20.5L27.5 14M1.5 20L14.5 26.5L27.5 20M14.5 2.5L1.5 8L14.5 14.5L27.5 8L14.5 2.5Z\"></path>\n            </g>\n          </svg>\n\n          <div class=\"radio-options\">\n            <label>\n              <input type=\"radio\" name=\"base-layer\" value=\"1\" checked> Skærmkort\n            </label>\n            <label>\n              <input type=\"radio\" name=\"base-layer\" value=\"2\"> Ortofoto\n            </label>\n          </div>\n        </div>\n        <div id=\"map\"></div>\n        <div id=\"compass-container\">\n          <svg class=\"ds-icon\" width=\"40\" height=\"40\" viewBox=\"0 0 31 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"15.5\" cy=\"15.5\" r=\"15\" fill=\"var(--c8, black)\" stroke=\"var(--white, white)\" stroke-width=\"var(--ds-icon-stroke, 1)\"/>\n            <g stroke=\"var(--white, white)\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path id=\"west\" d=\"M3.9 16.79L7.12 15.5L3.9 14.21\"/>\n              <path id=\"east\" d=\"M23.88 16.79L27.1 14.21M25.81 16.79H25.16C24.45 16.79 23.88 16.21 23.88 15.5C23.88 14.79 24.45 14.21 25.16 14.21H25.81C26.52 14.21 27.1 14.79 27.1 15.5C27.1 16.21 26.52 16.79 25.81 16.79Z\"/>\n              <path id=\"south\" d=\"M14.21 26.46C14.21 26.81 14.5 27.1 14.86 27.1H16.06C16.46 27.1 16.79 26.78 16.79 26.38C16.79 26.05 16.56 25.76 16.24 25.68L14.76 25.3C14.44 25.22 14.21 24.93 14.21 24.6C14.21 24.2 14.54 23.88 14.93 23.88H16.14C16.5 23.88 16.79 24.17 16.79 24.52\"/>\n              <path id=\"north\" d=\"M14.21 7.12L14.22 3.9L16.79 7.12V3.9\"/>\n            </g>\n            <path id=\"north-pointer\" d=\"M12.13 15.49C12.12 15.02 12.29 14.72 12.45 14.41L14.96 9.4C15.15 8.99 15.8 9.01 15.99 9.37L18.63 14.65C18.73 14.87 18.85 15.16 18.84 15.49L17.21 15.49C17.21 15.49 17.12 13.78 15.49 13.77C13.86 13.76 13.75 15.49 13.75 15.49L12.13 15.49Z\" fill=\"var(--r5, red)\"/>\n            <path id=\"south-pointer\" d=\"M12.12 15.5C12.12 15.96 12.28 16.26 12.44 16.58L14.95 21.58C15.14 21.99 15.79 21.97 15.98 21.61L18.62 16.33C18.73 16.12 18.84 15.82 18.83 15.49L17.2 15.49C17.2 15.49 17.12 17.2 15.48 17.21C13.85 17.22 13.75 15.5 13.75 15.5L12.12 15.5Z\" fill=\"var(--white, white)\"/>\n            <path d=\"M5.19 5.19L7.77 7.77M25.81 5.19L23.23 7.77M25.81 25.81L23.23 23.23M5.19 25.81L7.77 23.23\" stroke=\"white\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"var(--ds-icon-stroke, 1)\"/>\n          </svg>\n        </div>\n      </div>\n    `;\n  }\n}\n","import { LitElement, html, css } from 'lit';\n\nexport class MapTemplate extends LitElement {\n  static styles = css`\n      /* Add your styles here */\n  `;\n\n  render() {\n\n    const gmlFile = ''; // Change this to your GML file\n    const xmlFile = ''; // Change this to your metadata file\n    const sldFile = ''; // Change this to your SLD file\n\n    return html`\n      <map-viewer\n        .gmlFile=\"${gmlFile}\"\n        .xmlFile=\"${xmlFile}\"\n        .sldFile=\"${sldFile}\">\n      </map-viewer>\n    `;\n  }\n}\n","import { LitElement, html, css } from 'lit';\n\nexport class MapExample extends LitElement {\n\tstatic styles = css``;\n\n\trender() {\n      const gmlFile = './examples/2019/713/data_demo.gml';\n      const xmlFile = './examples/2019/713/metadata.xml';\n      const sldFile = './examples/2019/713/styles.sld';\n\n      return html`\n          <map-viewer\n              .gmlFile=\"${gmlFile}\"\n              .xmlFile=\"${xmlFile}\"\n              .sldFile=\"${sldFile}\">\n          </map-viewer>\n      `;\n  }\n}\n","import {html} from '../../node_modules/lit-element/lit-element.js';\n\n/**\n * Given a route, returns the appropriate content.\n * @param {string} route - route to match\n * @returns {LitElement} - appropriate content\n */\nexport function routing(route) {\n  if (route === '#map-viewer') {\n    return html`\n    <map-viewer></map-viewer>`\n  }\n  if (route === '#map-example') {\n    return html`\n    <map-example></map-example>`\n  }\n  if (route === '#map-template') {\n    return html`\n    <map-template></map-template>`\n  }\n}\n","// src/main.js\nimport { html, LitElement } from './node_modules/lit-element/lit-element.js';\nimport './src/MapViewer.js';\nimport './index.css';\nimport { MapViewer } from './src/MapViewer.js';\nimport { MapTemplate } from './src/MapTemplate.js';\nimport { MapExample } from './src/MapExample.js';\nimport { routing } from './src/router/router.js';\n\n\nexport class Main extends LitElement {\n  static properties = {\n    route: { type: String }, // Dynamic route property\n  };\n\n  constructor() {\n    super();\n    this.route = window.location.hash || '#map-viewer'; // Set initial route\n    this._setupRouting(); // Initialize hashchange listener\n  }\n\n  /**\n   * Initializes a hashchange listener to update the route dynamically.\n   * The hashchange event is dispatched when the fragment identifier of the URL changes.\n   * @private\n   */\n  _setupRouting() {\n    window.addEventListener('hashchange', () => {\n      this.route = window.location.hash || '#map-viewer'; // Update route dynamically\n    });\n  }\n\n  render() {\n    return html`\n      <main>\n        ${routing(this.route)} <!-- Pass the current route to the router -->\n        <div>\n        <div><a href=\"#map-template\" role=\"button\">MapTemplate</a> - Viser et tomt kort, der referer til skabelonen MapTemplate.js, hvor man let kan udfylde med egen data</div>\n        <div><a href=\"#map-example\" role=\"button\">MapExample</a> - Viser et kort med udfyldt datasæt. Samme opsætning som ved MapTemplate</div>\n        <div><a href=\"#map-viewer\" role=\"button\">Kort</a> - Viser et tomt kort, der betegner selve MapViewer.js</div>\n        </div>\n      </main>\n    `;\n  }\n\n  // Optional: Render into the light DOM (if required for styling)\n  createRenderRoot() {\n    return this;\n  }\n}\n\n\n\n\n// Register custom elements\ncustomElements.define('main-component', Main);\ncustomElements.define('map-viewer', MapViewer);\ncustomElements.define('map-template', MapTemplate);\ncustomElements.define('map-example', MapExample);\n\nexport { MapViewer, MapTemplate, MapExample };\n"],"names":["t","e","s","o","n$2","r","n","i","S","c","h","a","l","p","d","u","f","y","b","_a","v","_","m","g","$","x","T","E","A","C","P","V","N","H","I","L","k","_b","M$1","R","z","R$1","M","j","B","CollectionEventType","ObjectEventType","EventType","Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","descending","linearFindNearest","arr","target","direction","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","toPromise","getter","promiseGetter","value","err","clear","object","property","isEmpty","BaseEvent","type","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","len","keys","unByKey","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","eventType","silent","source","Property","CollectionEvent","element","Collection","array","options","elem","prev","except","MapEvent","map","frameState","MapBrowserEvent","originalEvent","dragging","activePointers","pixel","coordinate","MapBrowserEventType","ua","FIREFOX","SAFARI","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","CREATE_IMAGE_BITMAP","PASSIVE_EVENT_LISTENERS","passive","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","id","pointerId","doc","MapEventType","MapProperty","TileState","assert","assertion","errorMessage","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","TileQueue","tilePriorityFunction","tileChangeCallback","added","tile","state","tileKey","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","center","deltaX","deltaY","ViewHint","ViewProperty","clamp","min","max","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","floor","ceil","wrap","range","createExtent","extent","onlyCenter","smooth","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","none","Relationship","boundingExtent","coordinates","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","createOrUpdate","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","intersection","getIntersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","multiWorld","add","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","worldsAway","getWorldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","linear","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","warn","args","METERS_PER_UNIT","Projection$1","global","tileGrid","worldExtent","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","Projection","code","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","transforms","destination","sourceCode","destinationCode","K0","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","toLonLat","easting","northing","zone","mu","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","d2","d3","d4","d5","d6","latitude","longitude","zoneToCentralLongitude","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","match","number","north","makeTransformFunction","transformer","coord","makeProjection","makeTransforms","transformFactories","makeUTMTransforms","projectionFactories","makeUTMProjection","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","projUnits","getTransformFromProjections","vertices","metersPerUnit","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","sourceProjection","destinationProjection","transform","transformExtent","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","createSafeCoordinateTransform","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmp_","create","multiply","transform1","transform2","a1","b1","d1","e1","f1","b2","e2","f2","set","setFromArray","apply","compose","dx1","dy1","sx","sy","dx2","dy2","sin","cos","makeInverse","det","determinant","matrixPrecision","toString","transform2D","destinationStride","anchor","anchorX","anchorY","translate","tmpTransform","createTransform","tmpPoint","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","projTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","LinearRing","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","startOrientation","orientation","Polygon","polygon","linearRingsArea","flatCenter","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","DEFAULT_MIN_ZOOM","View","properties","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","geometry","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","minZoom","maxZoom","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","style","createCanvasContext2D","canvasPool","settings","canvas","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","outerWidth","outerHeight","replaceNode","newNode","oldNode","parent","removeChildren","node","replaceChildren","children","oldChildren","oldChild","newChild","Control","mapEvent","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","label","activeLabel","cssClasses","layers","visibleAttributions","layer","item","collapsible","attributions","attribution","visible","collapsed","Rotate","compassClassName","button","view","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","defaults","controls","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","stopEvent","browserEvent","all","conditions","pass","altShiftKeysOnly","focus","targetElement","rootNode","activeElement","focusWithTabindex","always","mouseActionButton","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","distance","centerpx","DragRotate","RenderBox","startPixel","endPixel","px","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragZoom","Key","KeyboardPan","keyEvent","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchZoom","scaleDelta","interactions","kinetic","LayerProperty","BaseLayer","managed","zIndex","states","background","opacity","zindex","GroupEvent","LayerGroup","baseOptions","layersArray","listenerKeys","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","RenderEventType","Layer","layerExtent","inView","getAttributions","layerRenderer","renderEvent","layerStatesArray","arrayLayerState","viewState","quickselect","left","defaultCompare","sd","newLeft","newRight","swap","RBush$1","maxEntries","bbox","toBBox","nodesToSearch","child","childBBox","tmpNode","createNode","equalsFn","path","indexes","goingUp","findItem","items","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","names$z","baseHues","parse","cstr","parts","alpha","space","names","base","isShort","name","dims","rgb","hsl","t3","rgba","color","parsed","xyz","_xyz","white","luv","arg","_u","_v","xn","yn","zn","un","vn","yr","lchuv","hr","NO_COLOR","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","isSpecific","typeName","namedType","includesType","broad","specific","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","encoded","expectedType","colorFromString","parseCallExpression","Ops","parsers","createCallExpressionParser","hasArgsCount","withGetArgs","withVarArgs","usesFeatureId","withNoArgs","withArgsOfType","usesGeometryType","usesMapState","withArgsOfReturnType","hasEvenArgs","withMatchArgs","withInterpolateArgs","hasOddArgs","withCaseArgs","withInArgs","withPaletteArgs","returnType","argsCount","operation","minArgs","maxArgs","argCount","plural","expression","argType","inputType","fallback","interpolationType","interpolation","stop","needleType","colors","parsedColors","validators","parser","computeGeometryType","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","compileConvertExpression","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","ImageState","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","error","load","src","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","iconImage","crossOrigin","getCacheKey","pattern","update","maxCacheSize","colorString","shared","taintedTestContext","IconImage","imageState","pixelRatio","ctx","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","weight","family","families","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","executeLabelInstructions","contextInstructions","ImageStyle","displacement","rotateWithView","RegularShape","fill","fillKey","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineCap","lineDash","lineDashOffset","strokeStyle","maxRadius","radius2","startAngle","step","angle0","radiusC","CircleStyle","Fill","patternImage","calculateScale","wantedWidth","wantedHeight","Icon","onload","imageSize","iconImageSize","Stroke","Style","defaultGeometryFunction","renderer","feature","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","repeat","keepUpright","textAlign","justify","textBaseline","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","declutterMode","optionalDeclutterMode","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","BaseVectorLayer","declutterGroup","RBush","renderOrder","styleLike","toStyleLike","toStyleFunction","declutter","RenderEvent","inversePixelTransform","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","expireIconCache","CompositeMapRenderer","container","renderedLayerStates","previousElement","sourceState","removeLayerMapProperty","setLayerMapProperty","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","features","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","group","viewCoordinate","currentDoc","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","targetRoot","time","previousFrameState","viewHints","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","Feature","geometryOrProperties","createStyleFunction","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","LineString","lineString","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","CanvasImmediateRenderer","viewRotation","userTransform","pixelCoordinates","localTransform","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","circleReplay","textReplay","renderFeature","replayGroup","loadingPromises","loading","renderFeatureInternal","renderGeometry","geometryRenderer","declutterBuilderGroup","lineStringReplay","polygonReplay","hasText","imageReplay","hasImage","toContext","scaleTransform","getVectorContext","canvasPixelRatio","multiplyTransform","getRenderPixel","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","dataProjection","circleExtent","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiPoint","multiPoint","MultiPolygon","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","RenderFeature","RBush_","extents","uid","rbush","Source","adaptAttributions","self","attributionLike","VectorEventType","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","featureKey","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","clearEvent","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","removed","featureChangeKeys","idString","loader","overlaps","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","dashArray","dash","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","CanvasInstruction","hitDetectionInstructions","instruction","createFill","applyStroke","endGeometryInstruction","CanvasImageBuilder","myBegin","filteredFlatCoordinates","sharedData","origin","CanvasLineStringBuilder","moveToLineToInstruction","CanvasPolygonBuilder","numEnds","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","geometryType","flatOffset","oo","cc","chunk","chunkBegin","geometryWidths","beg","keep","backgroundFill","backgroundStroke","p0","p1","p2","p3","hitDetectionBackgroundFill","strokeKey","textKey","baseline","textKeepUpright","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","ZIndexContext","__publicField","render","instructionsAtIndex","instructionAtIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","Executor","deferredRendering","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","featureCallback","hitExtent","declutterTree","zIndexContext","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","imageDeclutter","renderImage","renderText","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","maxStaleKeys","LayerRenderer","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","topLeft","topRight","bottomRight","bottomLeft","inverted","canvasTransform","toTransformString","CanvasVectorLayerRenderer","vectorLayer","executorGroup","declutterable","vectorSource","endWorld","world","intersectsExtent","getSquaredRenderTolerance","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","ready","dirty","replayGroupInstructions","VectorLayer","Tile","tileCoord","asImageLike","disposedError","defaultSize","DataTile","ImageTile","tileLoadFunction","getBlankImage","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","targetProj","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","transformInvCache","transformInv","applyMatrix","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","TileRange","tileRange","LRUCache","highWaterMark","entry","getKeyZXY","hash","hashZXY","withinExtentAndZ","sourceKey","addTileToLookup","tilesByZ","existing","removeTileFromLookup","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","createTileCoord","tileCache","tileSource","tilePixelRatio","tileOrigin","tileSize","sourceRevision","initialZ","preload","wantedTiles","minZ","viewport","tileQueueKey","staleKeys","altZ","covered","allTilesIdle","viewResolution","viewCenter","frameExtent","canvasExtent","targetZ","nextExtent","renderExtent","tileState","parentZ","canvasScale","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","postRenderFunction","tilesCount","tileCount","alphaChanged","usedTiles","TileProperty","BaseTileLayer","useInterimTilesOnError","TileLayer","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","WMTSTileGrid","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","half","appendParams","uri","params","keyParams","qs","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","template","expandUrl","urls","startCharCode","stopCharCode","charCode","createFromTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","TileSource","getTileGridForProjection","scaleSize","gridProjection","TileSourceEvent","TileEventType","UrlTile","tileUrlFunction","TileImage","defaultTileLoadFunction","thisProj","projKey","urlTileCoord","tileUrl","tilegrid","proj","imageTile","WMTS","requestEncoding","localContext","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeChildAppender","nodeWriter","makeSimpleNodeFactory","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","parseNode","parsersNS","pushParseAndPop","serialize","serializersNS","nodeFactory","pushSerializeAndPop","xmlSerializer_","getXMLSerializer","document_","readNonNegativeIntegerString","string","writeStringTextNode","FeatureFormat","transformGeometryWithOptions","write","featureProjection","equivalentProjection","fromProjection","toProjection","transformExtentWithOptions","XMLFeature","GMLNS","ONLY_WHITESPACE_RE","GMLBase","localName","featureType","featureNS","defaultPrefix","ft","ns","featureTypes","asFeature","geometryName","attName","fid","ring","flatLinearRings","internalOptions","schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2","containerSrs","coordsGroups","flatLinearRing","multiSurface","surface","multiCurve","srsName","segments","hasZ","curve","lines","patches","parentNode","exteriorWritten","GML3","contextDimension","dim","asXYZ","srsDimension","posList","serializers","geom","GML32","register","proj4","projCodes","getCachedProjection","def","code1","proj1","code2","proj2","globals","defs","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ignoredChar","lkey","testkey","processedKey","projStr","defData","paramObj","split","paramName","paramVal","paramOutname","unit","pm","PrimeMeridian","legalAxis","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","char","newObjects","parseString","txt","mapit","thing","out","newObj","sExpr","knownTypes","rename","outName","inName","d2r","cleanWKT","wkt","setPropertiesFromWkt","authority","axisOrder","axis","geogcs","toMeter","renamer","list","lisp","that","parseProj","testObj","testDef","codeWords","testWKT","word","codes","checkMercator","auth","checkProjStr","ext","testProj","maybeProjStr","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","eccnth","dphi","init","lon","lat","merc","identity","pt","longlat","projs","projStore","WGS84","eccentricity","rf","R_A","es","ep2","sphere","ellps","ellipse","Ellipsoid","datums","datum","datumCode","datum_params","nadgrids","loadedNadgrids","nadgrid","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","getNadgrids","grids","parseNadgridString","optional","secondsToRadians","seconds","nFields","decodeString","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","latColumnCount","mapNodes","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","srsCode","json","parseCode","ourProj","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","compareDatums","geodeticToGeocentric","Longitude","Latitude","Height","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","geocentricToGeodetic","genau","genau2","maxiter","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToWgs84","datum_type","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","datum_transform","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","attemptedGrids","outer","grid","subgrid","epsilon","applySubgridShift","pin","ct","tb","nadInterpolate","tol","dif","del","indx","frct","inx","f00","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","checkSanity","checkCoord","num","checkNotWGS","enforceAxis","wgs84","toPoint","from","to","transformedArray","checkProj","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","O","mgrs","ll","accuracy","encode","LLtoUTM","UTMtoLL","decode","degToRad","deg","radToDeg","rad","Lat","Long","eccSquared","k0","LongOrigin","eccPrimeSquared","LatRad","LongRad","LongOriginRad","ZoneNumber","UTMEasting","UTMNorthing","getLetterDesignator","utm","zoneLetter","zoneNumber","T1","C1","R1","D","phi1Rad","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","hunK","sb","testChar","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","curCol","eastingValue","rewindMarker","curRow","northingValue","mgrsStr","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","ds","temp","tmerc","sinh","hypot","log1py","asinhy","gatg","pp","cos_2B","h1","h2","clens","arg_r","hr1","hr2","cosh","clens_cmplx","arg_i","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi2","np","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","etmerc","adjust_zone","dependsOn","srat","esinp","exp","DEL_TOL","gauss","sinc","cosc","cosl","rho","sterea","ssfn_","phit","eccen","sinlat","coslat","sinX","cosX","rh","dlon","ce","Chi","stere","phy0","sinPhy0","semiMajorAxis","invF","flattening","k1","k2","k3","Sa1","Sa2","rotI","rotB","lambda","phy","prevPhy","iteration","somerc","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","sinph0","J","gamma","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","alp","gam","one_es","U","W","Qp","Sp","Tp","Vp","Up","omerc","sin1","cos1","ms1","ts1","sin2","cos2","ms2","ts2","ts0","rh1","lcc","gfi","deltav","eps","ro","fi1","ok","krovak","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","lam","nl","tl","asq","cl","ml1","nl1","rl1","tl1","dl","dsq","cass","qsfnz","S_POLE","N_POLE","EQUIT","OBLIQ","authset","coslam","sinlam","q","sinb","cosb","cCe","sCe","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","laea","asinz","phi1z","eccnts","aea","coslon","ksp","gnom","iqsfnz","cea","dlat","eqc","el","bl","tanphi","mln","mlnp","ma","poly","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","nzmg","mill","sinu","delta_theta","moll","eqdc","sinth","costh","gsq","msq","xx","yy","xys","c3","th1","vandg","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","aeqd","ortho","FACE_ENUM","AREA_ENUM","xy","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","qsc","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","robin","geocent","mode","omega","yt","ba","bm","bq","tpers","rone_es","v_x","v_y","v_z","v_zp","geos","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","EPS","NITER","fy","fpy","eqearth","EPS10","e_inv","e_fwd","s_inv","s_fwd","bonne","includedProjections","Proj","Overlay","panIntoViewOptions","mapRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","positioning","mapSize","posX","posY","factory","require$$0","require$$1","require$$2","require$$3","require$$4","this","has","TYPE_COMPARISON","BINARY_COMPARISON_NAMES","COMPARISON_NAMES","isComparison","isBinary","createComparison","addParameterValueProp","createBinaryFilterComparison","createIsBetweenComparison","createIsNullComparison","createIsLikeComparison","createBinaryLogic","predicates","createUnaryLogic","predicate","childElement","createFilter","numericSvgProps","addPropArray","prop","readNode","addProp","addPropWithTextContent","trimText","addNumericProp","simplifyChildExpressions","expressions","typeHint","concatenateLiterals","simplifiedExpressions","allLiteral","expr","defaultParseOptions","parseOptions","childExpressions","childNode","childExpression","functionName","fallbackValue","parsed$1","propertyName","simplifiedValue","addNumericParameterValueProp","getBool","addParameterValue","parameterGroup","group1","FilterParsers","SymbParsers","featuretypestyle","Reader","sld","FunctionCache","registerFunction","implementation","getFunction","isDynamicExpression","evaluate","getProperty","defaultValue","jsType","childValues","paramValues","paramExpression","isNullOrUndefined","compareNumbers","toNumber","matchcase","aNumber","bNumber","aString","bString","propertyIsNull","comparison","propertyIsLessThan","value1","value2","propertyIsGreaterThan","propertyIsBetween","lowerBoundary","upperBoundary","propertyIsEqualTo","propertyIsNotEqualTo","propertyIsLike","wildcard","singlechar","escapechar","patternAsRegex","rex","doComparison","doFIDFilter","fids","getGeoJSONProperty","getGeoJSONFeatureId","filterSelector","getFeatureId","scaleSelector","getLayerNames","getLayer","layername","getStyleNames","getStyle","defaultStyle","getRules","featureTypeStyle","validRules","elseFilterCount","getRuleSymbolizers","allSymbolizers","getByPath","fragments","fragment","categorizeSymbolizers","IMAGE_LOADING","IMAGE_LOADED","IMAGE_ERROR","DEFAULT_MARK_SIZE","DEFAULT_EXTERNALGRAPHIC_SIZE","PLACEMENT_DEFAULT","PLACEMENT_FIRSTPOINT","PLACEMENT_LASTPOINT","externalGraphicPaths","imageCache","setCachedImage","getCachedImage","imageLoadingStateCache","setImageLoadingState","loadingState","getImageLoadingState","_imageLoaderCache","getImageLoader","setImageLoader","loaderPromise","invalidateExternalGraphicSymbolizers","symbolizer","imageUrl","externalgraphic","updateSymbolizerInvalidatedState","ruleSymbolizer","invalidateExternalGraphics","getCachingImageLoader","loadExternalGraphic","imageLoadedCallback","processExternalGraphicSymbolizers","callbackRef","exgraphic","imageLoadingState","createCachedImageStyle","rotationDegrees","ref","emptyStyle","defaultPointStyle","imageLoadingPointStyle","imageLoadingPolygonStyle","imageErrorPointStyle","imageErrorPolygonStyle","memoizeStyleFunction","styleCache","olStyle","hexToRGB","hex","getOLColorString","calculateGraphicSpacing","lineSymbolizer","graphicWidth","graphicstroke","styling","multiplier","getInitialGapSize","getWellKnownSymbol","wellKnownName","rotationRadians","fillColor","getSimpleStroke","styleParams","strokeColor","strokeOpacity","strokeLineDashOffset","strokeOptions","strokeLineJoin","strokeLineCap","strokeDashArray","getSimpleFill","fillOpacity","applyDynamicFillStyling","olFill","somethingChanged","applyDynamicStrokeStyling","olStroke","applyDynamicTextStyling","olText","textStrokeSymbolizer","haloRadius","haloStrokeWidth","defaultMarkFill","defaultMarkStroke","pointStyle","pointsymbolizer","style$1","pointSizeValue","wellknownname","cachedPointStyle","getPointStyle","olImage","graphic","sizeValue","strokeChanged","fillChanged","displacementx","displacementy","calculatePointsDistance","coord1","coord2","calculateSplitPointCoords","startCoord","endCoord","distanceFromStart","distanceBetweenNodes","calculateAngle","invertY","dX","dY","splitLineString","graphicSpacing","_options","defaultOptions","splitOptions","p1$1","p2$1","totalLength","gapSize","nextPointMeasure","pointIndex","currentSegmentStart","currentSegmentEnd","cumulativeMeasure","splitPoints","currentSegmentLength","distanceFromSegmentStart","splitPointCoords","getLineMidpoint","rendererPatched","patchRenderer","rendererProto","renderStrokeMarks","pixelCoords","pixelCoordsChildArray","splitPointAngle","getGraphicStrokeRenderer","linesymbolizer","renderState","render$1","defaultGraphicSize","graphicSizeExpression","graphicSize","getGraphicStrokeStyle","lineStyle","cachedLineStyle","getLineStyle","dense1Pixels","dense2Pixels","dense3Pixels","dense4Pixels","fillPixels","xyCoords","clearPixels","createCanvasPattern","scaledCanvas","scaledContext","createPixelPattern","pixels","createInversePixelPattern","getQGISBrushFill","brushName","createPattern","cnv","imageRatio","tempCanvas","tCtx","getExternalGraphicFill","fillImageUrl","scaleMarkGraphicFill","graphicfill","scaleFactor","newFill","oriSize","mark","oriStrokeWidth","getMarkGraphicFill","ref$1","brushFillColor","canvasSize","scaledGraphicFill","olContext","patternCanvas","patternContext","polygonStyle","fillMark","polygonFill","renderGraphicStroke","polygonStroke","cachedPolygonStyle","getPolygonStyle","textsymbolizer","labelText","fontStyling","fontSize","olFontString","pointplacement","labelRotationDegrees","anchorpoint","anchorPointX","anchorPointY","fillStyling","textFillColor","textFillOpacity","textStyleOptions","haloStyling","haloFillColor","haloFillOpacity","cachedTextStyle","getTextStyle","labelplacement","pointPlacementRotation","lineplacement","getLinePointStyle","geom$1","geomType","multiPointCoords","getInteriorPoint","getPolygonPointStyle","appendStyles","symbolizers","OlStyler","categorizedSymbolizers","polygonSymbolizers","lineSymbolizers","pointSymbolizers","textSymbolizers","styleOptions","getOlFeatureId","getOlFeatureProperty","createOlStyleFunction","mapResolution","olStyles","createOlStyle","styleRule","strToLowerCase","strToUpperCase","qgisSubstr","lengthInt","strSubstring","beginIndex","endIndex","strSubstringStart","olGeometry","qgisGeometryType","stringIn","inputArgs","test","testString","addBuiltInFunctions","epsg25832","MapViewer","LitElement","response","gmlString","sldString","xmlData","Map","layerSwitcher","radioOptions","selectedLayer","feat","rgeoNavn","rgeoType","popupContent","files","gmlFile","file","sldFile","geojsonFile","xmlFile","gmlReader","sldFileReader","geojsonReader","xmlReader","metadata","xmlDoc","mapContainer","metadataBox","contentHtml","displayKey","formattedKey","toggleButton","contentBox","isVisible","featureGroups","allFeaturesExtent","normalizedGML","sldObject","viewProjection","sldLayer","SLDReader.getLayer","sldStyle","SLDReader.getStyle","SLDReader.createOlStyleFunction","SLDReader.Reader","sldStyleFunction","groups","featureMember","firstChildElement","toggleElement","layerToggleDiv","checkbox","fileInput","html","css","MapTemplate","MapExample","routing","route","Main"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300]}